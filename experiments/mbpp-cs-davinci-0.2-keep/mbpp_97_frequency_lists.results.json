{
  "name": "mbpp_97_frequency_lists",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_97_frequency_lists.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num]++;\n                } else {\n                    dict[num] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <11d2173cb8d24f1b808f1992991bf8ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <11d2173cb8d24f1b808f1992991bf8ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        foreach(List<long> list in list1) {\n            foreach(long element in list) {\n                if(result.ContainsKey(element)) {\n                    result[element] += 1;\n                } else {\n                    result[element] = 1;\n                }\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <631a3332cfff4e2680963f0a0c93255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <631a3332cfff4e2680963f0a0c93255b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num] += 1;\n                } else {\n                    dict[num] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <022be59f5bdd49918e350cb2a56c5e7c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <022be59f5bdd49918e350cb2a56c5e7c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long element in list) {\n                if (freq.ContainsKey(element)) {\n                    freq[element]++;\n                } else {\n                    freq[element] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c65c6ee8fefb49f48e0ed2a5732fe8e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c65c6ee8fefb49f48e0ed2a5732fe8e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num] += 1;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d2a42ddbf37e4dfb955998bb3dbc7158>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d2a42ddbf37e4dfb955998bb3dbc7158>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long i in list) {\n                if (freq.ContainsKey(i)) {\n                    freq[i] += 1;\n                } else {\n                    freq[i] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d49086ba045c494d9748bee540341094>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d49086ba045c494d9748bee540341094>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (dict.ContainsKey(item)) {\n                    dict[item]++;\n                } else {\n                    dict[item] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9c0f8d7029554920b99c213a3a4d1ab1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9c0f8d7029554920b99c213a3a4d1ab1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list2 in list1) {\n            foreach (long item in list2) {\n                if (freq.ContainsKey(item)) {\n                    freq[item] += 1;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <732c0bdaa8f24306b46e330a08e223e0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <732c0bdaa8f24306b46e330a08e223e0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num]++;\n                } else {\n                    dict[num] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <11d2173cb8d24f1b808f1992991bf8ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <11d2173cb8d24f1b808f1992991bf8ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num] += 1;\n                } else {\n                    dict[num] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <022be59f5bdd49918e350cb2a56c5e7c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <022be59f5bdd49918e350cb2a56c5e7c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list2 in list1) {\n            foreach (long x in list2) {\n                if (freq.ContainsKey(x)) {\n                    freq[x]++;\n                } else {\n                    freq[x] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <63e08c1a2adf4e269e9ec5759e2b6eb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <63e08c1a2adf4e269e9ec5759e2b6eb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num]++;\n                } else {\n                    dict.Add(num,1);\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d8bf319033c54859984e2b0cefc3e47e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d8bf319033c54859984e2b0cefc3e47e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (result.ContainsKey(item)) {\n                    result[item] += 1;\n                } else {\n                    result[item] = 1;\n                }\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d12607b068a74c96950fee9ca8867b4d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d12607b068a74c96950fee9ca8867b4d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (var list in list1) {\n            foreach (var item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item] += 1;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <522ef3f9fc9545cd810fc6b5ca0ff6a0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <522ef3f9fc9545cd810fc6b5ca0ff6a0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8dae0d368dde4e55bd2786adc11c3671>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8dae0d368dde4e55bd2786adc11c3671>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long i in list) {\n                if (freq.ContainsKey(i)) {\n                    freq[i]++;\n                } else {\n                    freq.Add(i,1);\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <368c7a029831495587190255da076b8a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <368c7a029831495587190255da076b8a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num] += 1;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d2a42ddbf37e4dfb955998bb3dbc7158>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d2a42ddbf37e4dfb955998bb3dbc7158>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long elem in list) {\n                if (freq.ContainsKey(elem)) {\n                    freq[elem]++;\n                } else {\n                    freq[elem] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <63febf30a34442228afb48a27783ed7a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <63febf30a34442228afb48a27783ed7a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long element in list) {\n                if (dict.ContainsKey(element)) {\n                    dict[element]++;\n                } else {\n                    dict[element] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <18eb2b96ee094168b237324a0515720e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <18eb2b96ee094168b237324a0515720e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num] += 1;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d2a42ddbf37e4dfb955998bb3dbc7158>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d2a42ddbf37e4dfb955998bb3dbc7158>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num]++;\n                } else {\n                    dict[num] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <11d2173cb8d24f1b808f1992991bf8ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <11d2173cb8d24f1b808f1992991bf8ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach(List<long> list in list1) {\n            foreach(long num in list) {\n                if(dict.ContainsKey(num)) {\n                    dict[num] += 1;\n                } else {\n                    dict.Add(num, 1);\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f8932a51dece428b8ba5fa4c8fc085d5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f8932a51dece428b8ba5fa4c8fc085d5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num]++;\n                } else {\n                    dict[num] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <11d2173cb8d24f1b808f1992991bf8ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <11d2173cb8d24f1b808f1992991bf8ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach(List<long> list in list1) {\n            foreach(long num in list) {\n                if(dict.ContainsKey(num)) {\n                    dict[num] += 1;\n                } else {\n                    dict.Add(num,1);\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7f4844aa76264f04b8bc8f53dee24d90>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7f4844aa76264f04b8bc8f53dee24d90>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(List<long> list in list1) {\n            foreach(long num in list) {\n                if(freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a1954aa5382e4a8986468dd74baec912>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a1954aa5382e4a8986468dd74baec912>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long i in list) {\n                if (freq.ContainsKey(i)) {\n                    freq[i]++;\n                } else {\n                    freq[i] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <00c495f2079d4090bb208eebd52f8ee5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <00c495f2079d4090bb208eebd52f8ee5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(List<long> list in list1) {\n            foreach(long num in list) {\n                if(freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq.Add(num,1);\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <61d61741af1145c2949041dd34e05bd2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <61d61741af1145c2949041dd34e05bd2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long element in list) {\n                if (freq.ContainsKey(element)) {\n                    freq[element]++;\n                } else {\n                    freq[element] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c65c6ee8fefb49f48e0ed2a5732fe8e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c65c6ee8fefb49f48e0ed2a5732fe8e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1ea4da5e24394ce78fc719ed5f73fd02>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1ea4da5e24394ce78fc719ed5f73fd02>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        var result = new Dictionary<long,long>();\n        foreach (var list in list1) {\n            foreach (var item in list) {\n                if (result.ContainsKey(item)) {\n                    result[item]++;\n                } else {\n                    result[item] = 1;\n                }\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38d8534c27474088baed367337155428>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38d8534c27474088baed367337155428>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num] += 1;\n                } else {\n                    dict[num] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <022be59f5bdd49918e350cb2a56c5e7c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <022be59f5bdd49918e350cb2a56c5e7c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list2 in list1) {\n            foreach (long item in list2) {\n                if (freq.ContainsKey(item)) {\n                    freq[item] += 1;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <732c0bdaa8f24306b46e330a08e223e0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <732c0bdaa8f24306b46e330a08e223e0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq.Add(num, 1);\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1a30471351b49ecacabd3a1864026a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1a30471351b49ecacabd3a1864026a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach(List<long> l in list1) {\n            foreach(long i in l) {\n                if(dict.ContainsKey(i)) {\n                    dict[i] += 1;\n                } else {\n                    dict[i] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd40150dc4124dbaaa277362fa07f8ca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd40150dc4124dbaaa277362fa07f8ca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(List<long> list in list1) {\n            foreach(long item in list) {\n                if(freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <83204a00d7e4497b925eab4d8c23a539>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <83204a00d7e4497b925eab4d8c23a539>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        var dict = new Dictionary<long,long>();\n        foreach (var list in list1) {\n            foreach (var item in list) {\n                if (dict.ContainsKey(item)) {\n                    dict[item]++;\n                } else {\n                    dict[item] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ade8e222f9014de9b370f86865d42b00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ade8e222f9014de9b370f86865d42b00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list2 in list1) {\n            foreach (long item in list2) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <984f54ace85845cead8b7a618731ae10>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <984f54ace85845cead8b7a618731ae10>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item] += 1;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aee06d09328047f4bf84157e5f877f7b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aee06d09328047f4bf84157e5f877f7b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> sublist in list1) {\n            foreach (long element in sublist) {\n                if (freq.ContainsKey(element)) {\n                    freq[element] += 1;\n                } else {\n                    freq[element] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dd66d7a51b68406aa323a85fa86b895e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dd66d7a51b68406aa323a85fa86b895e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (var list in list1) {\n            foreach (var item in list) {\n                if (freq.ContainsKey(item))\n                    freq[item]++;\n                else\n                    freq[item] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <02d0bd014760400386bc6f2a1832fff1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <02d0bd014760400386bc6f2a1832fff1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long element in list) {\n                if (result.ContainsKey(element)) {\n                    result[element]++;\n                } else {\n                    result.Add(element, 1);\n                }\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d5db51df188149399fc733791b3885ba>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d5db51df188149399fc733791b3885ba>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> d = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (d.ContainsKey(item)) {\n                    d[item] += 1;\n                } else {\n                    d[item] = 1;\n                }\n            }\n        }\n        return d;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <403e40233c0d4051822350b54a5bfcdc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <403e40233c0d4051822350b54a5bfcdc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long element in list) {\n                if (freq.ContainsKey(element)) {\n                    freq[element]++;\n                } else {\n                    freq[element] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c65c6ee8fefb49f48e0ed2a5732fe8e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c65c6ee8fefb49f48e0ed2a5732fe8e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long i in list) {\n                if (freq.ContainsKey(i)) {\n                    freq[i]++;\n                } else {\n                    freq.Add(i, 1);\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e329f2d1eafd4716afb467afed6c9b84>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e329f2d1eafd4716afb467afed6c9b84>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq.Add(num, 1);\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1a30471351b49ecacabd3a1864026a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1a30471351b49ecacabd3a1864026a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(List<long> list in list1) {\n            foreach(long num in list) {\n                if(freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq.Add(num,1);\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <61d61741af1145c2949041dd34e05bd2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <61d61741af1145c2949041dd34e05bd2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list2 in list1) {\n            foreach (long item in list2) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <984f54ace85845cead8b7a618731ae10>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <984f54ace85845cead8b7a618731ae10>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long elem in list) {\n                if (freq.ContainsKey(elem)) {\n                    freq[elem]++;\n                } else {\n                    freq[elem] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <63febf30a34442228afb48a27783ed7a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <63febf30a34442228afb48a27783ed7a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(var list in list1) {\n            foreach(var item in list) {\n                if(freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6e4abcf096f346bf80ccbfd612b26339>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6e4abcf096f346bf80ccbfd612b26339>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num]++;\n                } else {\n                    dict.Add(num, 1);\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d8d44954c76a407d9787ba078d2a66e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d8d44954c76a407d9787ba078d2a66e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> l in list1) {\n            foreach (long i in l) {\n                if (freq.ContainsKey(i)) {\n                    freq[i]++;\n                } else {\n                    freq[i] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <896ea9b2de104422b74ebcee3d72b6a9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <896ea9b2de104422b74ebcee3d72b6a9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num] += 1;\n                } else {\n                    dict.Add(num,1);\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f3ab2fbea274638ad073b35fb64ccd1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f3ab2fbea274638ad073b35fb64ccd1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long i in list) {\n                if (dict.ContainsKey(i)) {\n                    dict[i]++;\n                } else {\n                    dict.Add(i,1);\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <563e2fa4c7df496f8ffe6eabc5e94118>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <563e2fa4c7df496f8ffe6eabc5e94118>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num]++;\n                } else {\n                    dict[num] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <11d2173cb8d24f1b808f1992991bf8ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <11d2173cb8d24f1b808f1992991bf8ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq.Add(num, 1);\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1a30471351b49ecacabd3a1864026a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1a30471351b49ecacabd3a1864026a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item] += 1;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aee06d09328047f4bf84157e5f877f7b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aee06d09328047f4bf84157e5f877f7b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(List<long> list in list1) {\n            foreach(long elem in list) {\n                if(freq.ContainsKey(elem)) {\n                    freq[elem]++;\n                } else {\n                    freq[elem] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5c24977b0a2747db981923fb31de51c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5c24977b0a2747db981923fb31de51c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item] += 1;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aee06d09328047f4bf84157e5f877f7b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aee06d09328047f4bf84157e5f877f7b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (var list in list1) {\n            foreach (var item in list) {\n                if (dict.ContainsKey(item)) {\n                    dict[item]++;\n                } else {\n                    dict.Add(item,1);\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <328929829bbb4b81abf548f17d0b402f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <328929829bbb4b81abf548f17d0b402f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list2 in list1) {\n            foreach (long num in list2) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq.Add(num,1);\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2db5ec855e4e4848a35b5545a6571f7a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2db5ec855e4e4848a35b5545a6571f7a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (!freq.ContainsKey(num)) {\n                    freq[num] = 0;\n                }\n                freq[num]++;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a467a0f76d194016b700eccddc249c11>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a467a0f76d194016b700eccddc249c11>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (List<long> list in list1) {\n            foreach (long element in list) {\n                if (freq.ContainsKey(element)) {\n                    freq[element]++;\n                } else {\n                    freq[element] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d863f727faa941fc89b80e31d9cde6d7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d863f727faa941fc89b80e31d9cde6d7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list2 in list1) {\n            foreach (long num in list2) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3a3e7a7811f94122bebc786353eef084>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3a3e7a7811f94122bebc786353eef084>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (var list in list1) {\n            foreach (var item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq.Add(item,1);\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <80792a4078de43a784c10095bcecd72b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <80792a4078de43a784c10095bcecd72b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list2 in list1) {\n            foreach (long x in list2) {\n                if (freq.ContainsKey(x)) {\n                    freq[x]++;\n                } else {\n                    freq[x] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <63e08c1a2adf4e269e9ec5759e2b6eb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <63e08c1a2adf4e269e9ec5759e2b6eb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item] += 1;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5dd6c4538cf241039da1181fb914f6ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5dd6c4538cf241039da1181fb914f6ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(var list in list1) {\n            foreach(var item in list) {\n                if(freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6e4abcf096f346bf80ccbfd612b26339>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6e4abcf096f346bf80ccbfd612b26339>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (List<long> l in list1) {\n            foreach (long i in l) {\n                if (freq.ContainsKey(i)) {\n                    freq[i]++;\n                } else {\n                    freq.Add(i, 1);\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <90d46514835442bca07faf26e622159e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <90d46514835442bca07faf26e622159e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long element in list) {\n                if (result.ContainsKey(element)) {\n                    result[element] += 1;\n                } else {\n                    result[element] = 1;\n                }\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd88199fb1bf45afb4a59c8e7390fc8b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd88199fb1bf45afb4a59c8e7390fc8b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(List<long> list in list1) {\n            foreach(long num in list) {\n                if(freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a1954aa5382e4a8986468dd74baec912>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a1954aa5382e4a8986468dd74baec912>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long element in list) {\n                if (freq.ContainsKey(element)) {\n                    freq[element]++;\n                } else {\n                    freq[element] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c65c6ee8fefb49f48e0ed2a5732fe8e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c65c6ee8fefb49f48e0ed2a5732fe8e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num]++;\n                } else {\n                    dict.Add(num,1);\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d8bf319033c54859984e2b0cefc3e47e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d8bf319033c54859984e2b0cefc3e47e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(List<long> list in list1) {\n            foreach(long element in list) {\n                if(freq.ContainsKey(element)) {\n                    freq[element]++;\n                } else {\n                    freq[element] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <54a99d24895c485da7b598a37b90b93a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <54a99d24895c485da7b598a37b90b93a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach(List<long> list in list1) {\n            foreach(long item in list) {\n                if(dict.ContainsKey(item)) {\n                    dict[item] += 1;\n                } else {\n                    dict[item] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0cfeaed5a7384cc286989c3681701fa9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0cfeaed5a7384cc286989c3681701fa9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (var list in list1) {\n            foreach (var item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c7d34136b2534e1b9072f73751629f27>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c7d34136b2534e1b9072f73751629f27>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num]++;\n                } else {\n                    dict.Add(num, 1);\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d8d44954c76a407d9787ba078d2a66e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d8d44954c76a407d9787ba078d2a66e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num]++;\n                } else {\n                    dict[num] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <11d2173cb8d24f1b808f1992991bf8ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <11d2173cb8d24f1b808f1992991bf8ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (dict.ContainsKey(item)) {\n                    dict[item] += 1;\n                } else {\n                    dict.Add(item, 1);\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <649fbb0c57b84cd18d74c42432d3a728>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <649fbb0c57b84cd18d74c42432d3a728>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long, long> dict = new Dictionary<long, long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num]++;\n                } else {\n                    dict.Add(num, 1);\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b3dd808e93204ad195ccb8b824f0dfb4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b3dd808e93204ad195ccb8b824f0dfb4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num]++;\n                } else {\n                    dict[num] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <11d2173cb8d24f1b808f1992991bf8ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <11d2173cb8d24f1b808f1992991bf8ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long element in list) {\n                if (freq.ContainsKey(element)) {\n                    freq[element]++;\n                } else {\n                    freq[element] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c65c6ee8fefb49f48e0ed2a5732fe8e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c65c6ee8fefb49f48e0ed2a5732fe8e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long element in list) {\n                if (result.ContainsKey(element)) {\n                    result[element]++;\n                } else {\n                    result[element] = 1;\n                }\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a99b073ae63447c9ac62184710231cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a99b073ae63447c9ac62184710231cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num]++;\n                } else {\n                    dict[num] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <11d2173cb8d24f1b808f1992991bf8ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <11d2173cb8d24f1b808f1992991bf8ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach(List<long> list in list1) {\n            foreach(long item in list) {\n                if(dict.ContainsKey(item)) {\n                    dict[item]++;\n                } else {\n                    dict[item] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c331c038e82f4a52bf4714e9018f4bf6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c331c038e82f4a52bf4714e9018f4bf6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> l in list1) {\n            foreach (long i in l) {\n                if (freq.ContainsKey(i)) {\n                    freq[i]++;\n                } else {\n                    freq[i] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <896ea9b2de104422b74ebcee3d72b6a9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <896ea9b2de104422b74ebcee3d72b6a9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq.Add(num, 1);\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1a30471351b49ecacabd3a1864026a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1a30471351b49ecacabd3a1864026a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long elem in list) {\n                if (freq.ContainsKey(elem)) {\n                    freq[elem] += 1;\n                } else {\n                    freq[elem] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123604,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b4ee8bf94d6348eaa5c3b2000352deb9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b4ee8bf94d6348eaa5c3b2000352deb9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num] += 1;\n                } else {\n                    dict[num] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <022be59f5bdd49918e350cb2a56c5e7c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <022be59f5bdd49918e350cb2a56c5e7c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (dict.ContainsKey(item)) {\n                    dict[item]++;\n                } else {\n                    dict.Add(item, 1);\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dc6d66b911b040cfa6e51afc3a6cd1db>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dc6d66b911b040cfa6e51afc3a6cd1db>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num]++;\n                } else {\n                    dict[num] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <11d2173cb8d24f1b808f1992991bf8ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <11d2173cb8d24f1b808f1992991bf8ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num]++;\n                } else {\n                    dict.Add(num, 1);\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d8d44954c76a407d9787ba078d2a66e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d8d44954c76a407d9787ba078d2a66e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num]++;\n                } else {\n                    dict.Add(num, 1);\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d8d44954c76a407d9787ba078d2a66e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d8d44954c76a407d9787ba078d2a66e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq.Add(num, 1);\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b71d8768440d453d98e7c54fec93abf7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b71d8768440d453d98e7c54fec93abf7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> l in list1) {\n            foreach (long i in l) {\n                if (freq.ContainsKey(i)) {\n                    freq[i] += 1;\n                } else {\n                    freq[i] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <867abfa4e0744cd98f1eacff5c72389a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <867abfa4e0744cd98f1eacff5c72389a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long element in list) {\n                if (freq.ContainsKey(element)) {\n                    freq[element] += 1;\n                } else {\n                    freq[element] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1644a3e288f45358b50b74e7f250139>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1644a3e288f45358b50b74e7f250139>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long element in list) {\n                if (result.ContainsKey(element)) {\n                    result[element]++;\n                } else {\n                    result[element] = 1;\n                }\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a99b073ae63447c9ac62184710231cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a99b073ae63447c9ac62184710231cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (dict.ContainsKey(item)) {\n                    dict[item] += 1;\n                } else {\n                    dict.Add(item, 1);\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <649fbb0c57b84cd18d74c42432d3a728>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <649fbb0c57b84cd18d74c42432d3a728>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        foreach(List<long> list in list1) {\n            foreach(long number in list) {\n                if(result.ContainsKey(number)) {\n                    result[number]++;\n                } else {\n                    result.Add(number,1);\n                }\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123604,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ca3df15db4484ea092c616381aa7d62e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ca3df15db4484ea092c616381aa7d62e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num]++;\n                } else {\n                    dict[num] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <11d2173cb8d24f1b808f1992991bf8ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <11d2173cb8d24f1b808f1992991bf8ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num]++;\n                } else {\n                    dict.Add(num, 1);\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d8d44954c76a407d9787ba078d2a66e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d8d44954c76a407d9787ba078d2a66e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (dict.ContainsKey(item)) {\n                    dict[item]++;\n                } else {\n                    dict[item] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9c0f8d7029554920b99c213a3a4d1ab1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9c0f8d7029554920b99c213a3a4d1ab1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list2 in list1) {\n            foreach (long item in list2) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <984f54ace85845cead8b7a618731ae10>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <984f54ace85845cead8b7a618731ae10>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num]++;\n                } else {\n                    dict.Add(num, 1);\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d8d44954c76a407d9787ba078d2a66e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d8d44954c76a407d9787ba078d2a66e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long i in list) {\n                if (dict.ContainsKey(i)) {\n                    dict[i]++;\n                } else {\n                    dict.Add(i,1);\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <563e2fa4c7df496f8ffe6eabc5e94118>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <563e2fa4c7df496f8ffe6eabc5e94118>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num]++;\n                } else {\n                    dict.Add(num,1);\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d8bf319033c54859984e2b0cefc3e47e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d8bf319033c54859984e2b0cefc3e47e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num] += 1;\n                } else {\n                    dict[num] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <022be59f5bdd49918e350cb2a56c5e7c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <022be59f5bdd49918e350cb2a56c5e7c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item] += 1;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aee06d09328047f4bf84157e5f877f7b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aee06d09328047f4bf84157e5f877f7b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach(List<long> list2 in list1) {\n            foreach(long num in list2) {\n                if(freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq.Add(num, 1);\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123604,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ec25568d42464785aba3ab7c4ea7e298>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ec25568d42464785aba3ab7c4ea7e298>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num]++;\n                } else {\n                    dict[num] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <11d2173cb8d24f1b808f1992991bf8ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <11d2173cb8d24f1b808f1992991bf8ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> l in list1) {\n            foreach (long i in l) {\n                if (freq.ContainsKey(i)) {\n                    freq[i]++;\n                } else {\n                    freq[i] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <896ea9b2de104422b74ebcee3d72b6a9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <896ea9b2de104422b74ebcee3d72b6a9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long i in list) {\n                if (freq.ContainsKey(i)) {\n                    freq[i]++;\n                } else {\n                    freq[i] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <00c495f2079d4090bb208eebd52f8ee5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <00c495f2079d4090bb208eebd52f8ee5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (var list in list1) {\n            foreach (var item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c7d34136b2534e1b9072f73751629f27>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c7d34136b2534e1b9072f73751629f27>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long element in list) {\n                if (freq.ContainsKey(element)) {\n                    freq[element]++;\n                } else {\n                    freq[element] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c65c6ee8fefb49f48e0ed2a5732fe8e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c65c6ee8fefb49f48e0ed2a5732fe8e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(List<long> list in list1) {\n            foreach(long num in list) {\n                if(freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq.Add(num,1);\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <61d61741af1145c2949041dd34e05bd2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <61d61741af1145c2949041dd34e05bd2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(List<long> list in list1) {\n            foreach(long num in list) {\n                if(freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a1954aa5382e4a8986468dd74baec912>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a1954aa5382e4a8986468dd74baec912>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach(List<long> list in list1) {\n            foreach(long num in list) {\n                if(dict.ContainsKey(num)) {\n                    dict[num]++;\n                } else {\n                    dict.Add(num,1);\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38274ff5b13c4ba485b60a8693ccae28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38274ff5b13c4ba485b60a8693ccae28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(List<long> list in list1) {\n            foreach(long item in list) {\n                if(freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq.Add(item,1);\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ac7bed9510264f0192d10ed2ff68d524>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ac7bed9510264f0192d10ed2ff68d524>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (dict.ContainsKey(item)) {\n                    dict[item] += 1;\n                } else {\n                    dict.Add(item, 1);\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <649fbb0c57b84cd18d74c42432d3a728>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <649fbb0c57b84cd18d74c42432d3a728>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long x in list) {\n                if (dict.ContainsKey(x)) {\n                    dict[x]++;\n                } else {\n                    dict[x] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123604,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5a7ed260ff934282816f2289622dd80f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5a7ed260ff934282816f2289622dd80f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (dict.ContainsKey(item)) {\n                    dict[item]++;\n                } else {\n                    dict[item] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9c0f8d7029554920b99c213a3a4d1ab1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9c0f8d7029554920b99c213a3a4d1ab1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long, long> dict = new Dictionary<long, long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num]++;\n                } else {\n                    dict.Add(num, 1);\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b3dd808e93204ad195ccb8b824f0dfb4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b3dd808e93204ad195ccb8b824f0dfb4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long i in list) {\n                if (freq.ContainsKey(i)) {\n                    freq[i]++;\n                } else {\n                    freq[i] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <00c495f2079d4090bb208eebd52f8ee5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <00c495f2079d4090bb208eebd52f8ee5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(List<long> list in list1) {\n            foreach(long item in list) {\n                if(freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <83204a00d7e4497b925eab4d8c23a539>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <83204a00d7e4497b925eab4d8c23a539>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list2 in list1) {\n            foreach (long item in list2) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <984f54ace85845cead8b7a618731ae10>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <984f54ace85845cead8b7a618731ae10>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(List<long> list2 in list1) {\n            foreach(long num in list2) {\n                if(freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123604,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5022d944f9f84d56b4bc5ab96138f5f7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5022d944f9f84d56b4bc5ab96138f5f7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        var dict = new Dictionary<long,long>();\n        foreach (var list in list1) {\n            foreach (var item in list) {\n                if (dict.ContainsKey(item)) {\n                    dict[item]++;\n                } else {\n                    dict[item] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ade8e222f9014de9b370f86865d42b00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ade8e222f9014de9b370f86865d42b00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long element in list) {\n                if (freq.ContainsKey(element)) {\n                    freq[element] += 1;\n                } else {\n                    freq[element] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1644a3e288f45358b50b74e7f250139>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1644a3e288f45358b50b74e7f250139>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        var dict = new Dictionary<long,long>();\n        foreach (var list in list1) {\n            foreach (var item in list) {\n                if (dict.ContainsKey(item)) {\n                    dict[item]++;\n                } else {\n                    dict[item] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ade8e222f9014de9b370f86865d42b00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ade8e222f9014de9b370f86865d42b00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        foreach(var l in list1) {\n            foreach(var i in l) {\n                if(result.ContainsKey(i)) {\n                    result[i]++;\n                } else {\n                    result[i] = 1;\n                }\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123604,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c8418c8ac02f4465a00281594690cb0a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c8418c8ac02f4465a00281594690cb0a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long, long> result = new Dictionary<long, long>();\n        foreach (List<long> list in list1) {\n            foreach (long element in list) {\n                if (result.ContainsKey(element)) {\n                    result[element] += 1;\n                } else {\n                    result[element] = 1;\n                }\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123604,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <75af8f195fa14df08aba786a52c9933f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <75af8f195fa14df08aba786a52c9933f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item] += 1;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aee06d09328047f4bf84157e5f877f7b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aee06d09328047f4bf84157e5f877f7b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long element in list) {\n                if (result.ContainsKey(element)) {\n                    result[element]++;\n                } else {\n                    result[element] = 1;\n                }\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a99b073ae63447c9ac62184710231cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a99b073ae63447c9ac62184710231cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (var list in list1) {\n            foreach (var item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item] += 1;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <522ef3f9fc9545cd810fc6b5ca0ff6a0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <522ef3f9fc9545cd810fc6b5ca0ff6a0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(List<long> list in list1) {\n            foreach(long item in list) {\n                if(freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <83204a00d7e4497b925eab4d8c23a539>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <83204a00d7e4497b925eab4d8c23a539>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (List<long> list in list1) {\n            foreach (long l in list) {\n                if (freq.ContainsKey(l)) {\n                    freq[l] += 1;\n                } else {\n                    freq[l] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123604,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2f04cf6b6a334eb4b550aef4aa4b9514>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2f04cf6b6a334eb4b550aef4aa4b9514>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(List<long> list in list1) {\n            foreach(long num in list) {\n                if(freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a1954aa5382e4a8986468dd74baec912>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a1954aa5382e4a8986468dd74baec912>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(List<long> list in list1) {\n            foreach(long num in list) {\n                if(freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq.Add(num, 1);\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <89c112730a2e4e7c8ef746b9053ac942>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <89c112730a2e4e7c8ef746b9053ac942>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> l in list1) {\n            foreach (long i in l) {\n                if (freq.ContainsKey(i)) {\n                    freq[i]++;\n                } else {\n                    freq[i] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <896ea9b2de104422b74ebcee3d72b6a9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <896ea9b2de104422b74ebcee3d72b6a9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long element in list) {\n                if (freq.ContainsKey(element)) {\n                    freq[element] += 1;\n                } else {\n                    freq[element] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1644a3e288f45358b50b74e7f250139>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1644a3e288f45358b50b74e7f250139>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long i in list) {\n                if (freq.ContainsKey(i)) {\n                    freq[i]++;\n                } else {\n                    freq[i] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <00c495f2079d4090bb208eebd52f8ee5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <00c495f2079d4090bb208eebd52f8ee5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long element in list) {\n                if (dict.ContainsKey(element)) {\n                    dict[element]++;\n                } else {\n                    dict.Add(element,1);\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123604,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dfdba33ff1e44eeb87c549c9724ae5a9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dfdba33ff1e44eeb87c549c9724ae5a9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f62ab31179748b5b524c506898be9dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long element in list) {\n                if (result.ContainsKey(element)) {\n                    result[element]++;\n                } else {\n                    result[element] = 1;\n                }\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a99b073ae63447c9ac62184710231cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a99b073ae63447c9ac62184710231cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long element in list) {\n                if (freq.ContainsKey(element)) {\n                    freq[element] += 1;\n                } else {\n                    freq[element] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1644a3e288f45358b50b74e7f250139>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1644a3e288f45358b50b74e7f250139>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long element in list) {\n                if (dict.ContainsKey(element)) {\n                    dict[element] += 1;\n                } else {\n                    dict.Add(element, 1);\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123604,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <874acb3964da4868b188a5807bea648f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <874acb3964da4868b188a5807bea648f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num] += 1;\n                } else {\n                    dict[num] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <022be59f5bdd49918e350cb2a56c5e7c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <022be59f5bdd49918e350cb2a56c5e7c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long element in list) {\n                if (result.ContainsKey(element)) {\n                    result[element]++;\n                } else {\n                    result[element] = 1;\n                }\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a99b073ae63447c9ac62184710231cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a99b073ae63447c9ac62184710231cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(List<long> l in list1) {\n            foreach(long i in l) {\n                if(freq.ContainsKey(i)) {\n                    freq[i]++;\n                } else {\n                    freq[i] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123604,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e6537dc0216e463c84f0f60a643f1154>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e6537dc0216e463c84f0f60a643f1154>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (var list in list1) {\n            foreach (var item in list) {\n                if (dict.ContainsKey(item)) {\n                    dict[item]++;\n                } else {\n                    dict[item] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <741f2eb776c1444aae5883197c5a9b75>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <741f2eb776c1444aae5883197c5a9b75>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num] += 1;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d2a42ddbf37e4dfb955998bb3dbc7158>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d2a42ddbf37e4dfb955998bb3dbc7158>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long element in list) {\n                if (freq.ContainsKey(element)) {\n                    freq[element]++;\n                } else {\n                    freq.Add(element,1);\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123604,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b07802dcfde641cfa62322730688f55f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b07802dcfde641cfa62322730688f55f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (var list in list1) {\n            foreach (var item in list) {\n                if (dict.ContainsKey(item)) {\n                    dict[item]++;\n                } else {\n                    dict.Add(item,1);\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <328929829bbb4b81abf548f17d0b402f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <328929829bbb4b81abf548f17d0b402f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        var dict = new Dictionary<long,long>();\n        foreach (var list in list1) {\n            foreach (var item in list) {\n                if (dict.ContainsKey(item)) {\n                    dict[item]++;\n                } else {\n                    dict[item] = 1;\n                }\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ade8e222f9014de9b370f86865d42b00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ade8e222f9014de9b370f86865d42b00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a09920d4415047ea8e4982518381772d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long element in list) {\n                if (freq.ContainsKey(element)) {\n                    freq[element]++;\n                } else {\n                    freq[element] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c65c6ee8fefb49f48e0ed2a5732fe8e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c65c6ee8fefb49f48e0ed2a5732fe8e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long element in list) {\n                if (freq.ContainsKey(element)) {\n                    freq[element] += 1;\n                } else {\n                    freq[element] = 1;\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1644a3e288f45358b50b74e7f250139>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1644a3e288f45358b50b74e7f250139>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        foreach(List<long> list in list1) {\n            foreach(long i in list) {\n                if(result.ContainsKey(i)) {\n                    result[i]++;\n                } else {\n                    result[i] = 1;\n                }\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123604,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <795659f209de47a091a8b8367dde2755>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <795659f209de47a091a8b8367dde2755>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(List<long> list in list1) {\n            foreach(long num in list) {\n                if(freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq.Add(num,1);\n                }\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <61d61741af1145c2949041dd34e05bd2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <61d61741af1145c2949041dd34e05bd2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    }
  ]
}
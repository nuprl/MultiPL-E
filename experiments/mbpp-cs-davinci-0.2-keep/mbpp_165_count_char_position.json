{
  "name": "mbpp_165_count_char_position",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\n    public static long CountCharPosition(string str1) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_165_count_char_position.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountCharPosition((\"xbcefg\")) == (2L));\n    Debug.Assert(CountCharPosition((\"ABcED\")) == (3L));\n    Debug.Assert(CountCharPosition((\"AbgdeF\")) == (5L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long count = 0;\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == (char)(i + 65) || str1[i] == (char)(i + 97)) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == (char)(i + 97)) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == 'a' + i || str1[i] == 'A' + i) {\n                count++;\n            }\n        }\n        return count;",
    "        str1 = str1.ToLower();\n        long count = 0;\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == 'a' + i) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] - 'a' == i || str1[i] - 'A' == i) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == 'a' + i || str1[i] == 'A' + i) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == (char)(i + 97)) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == 'a' + i || str1[i] == 'A' + i) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == 'a' + i || str1[i] == 'A' + i) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == (char)(i + 97) || str1[i] == (char)(i + 65)) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < str1.Length; i++) {\n            char c = str1[i];\n            if (c >= 'a' && c <= 'z') {\n                if (c - 'a' == i) {\n                    count++;\n                }\n            } else if (c >= 'A' && c <= 'Z') {\n                if (c - 'A' == i) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == 'a' + i || str1[i] == 'A' + i) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == 'a' + i || str1[i] == 'A' + i) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == 'a' + i || str1[i] == 'A' + i) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == (char)(i + 97) || str1[i] == (char)(i + 65)) {\n                count++;\n            }\n        }\n        return count;",
    "        // Write your code here\n        long count = 0;\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == (char)(i + 97)) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == 'a' + i || str1[i] == 'A' + i) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == (char)(i + 65) || str1[i] == (char)(i + 97)) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == 'a' + i || str1[i] == 'A' + i) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == (char)(i + 97)) {\n                count++;\n            }\n        }\n        return count;"
  ]
}
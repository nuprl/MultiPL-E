{
  "name": "mbpp_118_string_to_list",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert a string to a list of strings split on the space character.\n    public static List<string> StringToList(string str) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_118_string_to_list.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringToList((\"python programming\")).Equals((new List<string>(new string[]{(string)\"python\", (string)\"programming\"}))));\n    Debug.Assert(StringToList((\"lists tuples strings\")).Equals((new List<string>(new string[]{(string)\"lists\", (string)\"tuples\", (string)\"strings\"}))));\n    Debug.Assert(StringToList((\"write a program\")).Equals((new List<string>(new string[]{(string)\"write\", (string)\"a\", (string)\"program\"}))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        List<string> list = new List<string>();\n        string[] words = str.Split(' ');\n        foreach (string word in words) {\n            list.Add(word);\n        }\n        return list;",
    "        List<string> result = new List<string>();\n        StringBuilder sb = new StringBuilder();\n        foreach (char c in str) {\n            if (c == ' ') {\n                result.Add(sb.ToString());\n                sb.Clear();\n            } else {\n                sb.Append(c);\n            }\n        }\n        result.Add(sb.ToString());\n        return result;",
    "        List<string> list = new List<string>();\n        int start = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str[i] == ' ') {\n                list.Add(str.Substring(start, i - start));\n                start = i + 1;\n            }\n        }\n        list.Add(str.Substring(start));\n        return list;",
    "        var list = new List<string>();\n        var sb = new StringBuilder();\n        for (int i = 0; i < str.Length; i++) {\n            if (str[i] == ' ') {\n                list.Add(sb.ToString());\n                sb.Clear();\n            } else {\n                sb.Append(str[i]);\n            }\n        }\n        if (sb.Length > 0) {\n            list.Add(sb.ToString());\n        }\n        return list;",
    "        return str.Split(' ').ToList();",
    "        List<string> list = new List<string>();\n        string word = \"\";\n        for (int i = 0; i < str.Length; i++) {\n            if (str[i] == ' ') {\n                list.Add(word);\n                word = \"\";\n            } else {\n                word += str[i];\n            }\n        }\n        if (word != \"\") {\n            list.Add(word);\n        }\n        return list;",
    "        return str.Split(' ').ToList();",
    "        return str.Split(' ').ToList();",
    "        List<string> list = new List<string>();\n        string[] words = str.Split(' ');\n        foreach (string word in words) {\n            list.Add(word);\n        }\n        return list;",
    "        List<string> list = new List<string>();\n        int i = 0;\n        while (i < str.Length) {\n            int j = i;\n            while (j < str.Length && str[j] != ' ') {\n                j++;\n            }\n            list.Add(str.Substring(i, j - i));\n            i = j + 1;\n        }\n        return list;",
    "        List<string> list = new List<string>();\n        string[] words = str.Split(' ');\n        foreach (string word in words) {\n            list.Add(word);\n        }\n        return list;",
    "        List<string> list = new List<string>();\n        string[] words = str.Split(' ');\n        foreach (string word in words) {\n            list.Add(word);\n        }\n        return list;",
    "        return str.Split(' ').ToList();",
    "        List<string> list = new List<string>();\n        string[] words = str.Split(' ');\n        foreach (string word in words) {\n            list.Add(word);\n        }\n        return list;",
    "        List<string> list = new List<string>();\n        string[] words = str.Split(' ');\n        foreach (string word in words) {\n            list.Add(word);\n        }\n        return list;",
    "        var list = new List<string>();\n        var sb = new StringBuilder();\n        foreach (var c in str) {\n            if (c == ' ') {\n                if (sb.Length > 0) {\n                    list.Add(sb.ToString());\n                    sb.Clear();\n                }\n            } else {\n                sb.Append(c);\n            }\n        }\n        if (sb.Length > 0) {\n            list.Add(sb.ToString());\n        }\n        return list;",
    "        List<string> list = new List<string>();\n        string[] words = str.Split(' ');\n        foreach (string word in words) {\n            list.Add(word);\n        }\n        return list;",
    "        List<string> list = new List<string>();\n        int start = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str[i] == ' ') {\n                list.Add(str.Substring(start, i - start));\n                start = i + 1;\n            }\n        }\n        list.Add(str.Substring(start, str.Length - start));\n        return list;",
    "        List<string> list = new List<string>();\n        string[] words = str.Split(' ');\n        foreach (string word in words) {\n            list.Add(word);\n        }\n        return list;",
    "        return str.Split(' ').ToList();"
  ]
}
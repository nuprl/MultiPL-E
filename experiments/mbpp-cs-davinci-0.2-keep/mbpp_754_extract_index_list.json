{
  "name": "mbpp_754_extract_index_list",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_754_extract_index_list.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        var minLength = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < minLength; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        var minLength = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < minLength; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++)\n        {\n            if (l1[i] == l2[i] && l2[i] == l3[i])\n            {\n                result.Add(l1[i]);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        var minLength = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < minLength; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;"
  ]
}
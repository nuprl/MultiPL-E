{
  "name": "mbpp_631_replace_spaces",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace whitespaces with an underscore and vice versa in a given string.\n    public static string ReplaceSpaces(string text) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_631_replace_spaces.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceSpaces((\"Jumanji The Jungle\")).Equals((\"Jumanji_The_Jungle\")));\n    Debug.Assert(ReplaceSpaces((\"The_Avengers\")).Equals((\"The Avengers\")));\n    Debug.Assert(ReplaceSpaces((\"Fast and Furious\")).Equals((\"Fast_and_Furious\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return text.Replace(' ', '_').Replace('_', ' ');",
    "        return text.Replace(' ', '_').Replace('_', ' ');",
    "        return text.Replace(' ', '_').Replace('_', ' ');",
    "        return text.Replace(\" \", \"_\").Replace(\"_\", \" \");",
    "        return text.Replace(\" \", \"_\").Replace(\"_\", \" \");",
    "        return text.Replace(' ', '_');",
    "        return text.Replace(' ', '_').Replace('_', ' ');",
    "        return text.Replace(' ', '_').Replace('_', ' ');",
    "        return text.Replace(\" \", \"_\").Replace(\"_\", \" \");",
    "        return text.Replace(' ', '_').Replace('_', ' ');",
    "        return text.Replace(' ', '_').Replace('_', ' ');",
    "        return text.Replace(\" \", \"_\").Replace(\"_\", \" \");",
    "        return text.Replace(' ', '_').Replace('_', ' ');",
    "        return text.Replace(\" \", \"_\").Replace(\"_\", \" \");",
    "        string result = \"\";\n        for (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                result += \"_\";\n            } else if (text[i] == '_') {\n                result += \" \";\n            } else {\n                result += text[i];\n            }\n        }\n        return result;",
    "        return text.Replace(\" \", \"_\").Replace(\"_\", \" \");",
    "        return text.Replace(' ', '_').Replace('_', ' ');",
    "        return text.Replace(' ', '_').Replace('_', ' ');",
    "        return text.Replace(' ', '_');",
    "        string result = \"\";\n        for (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n                result += '_';\n            } else if (text[i] == '_') {\n                result += ' ';\n            } else {\n                result += text[i];\n            }\n        }\n        return result;"
  ]
}
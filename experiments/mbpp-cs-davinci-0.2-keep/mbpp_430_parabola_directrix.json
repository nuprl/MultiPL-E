{
  "name": "mbpp_430_parabola_directrix",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the directrix of a parabola.\n    public static long ParabolaDirectrix(long a, long b, long c) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_430_parabola_directrix.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParabolaDirectrix((5L), (3L), (2L)) == (-198L));\n    Debug.Assert(ParabolaDirectrix((9L), (8L), (4L)) == (-2336L));\n    Debug.Assert(ParabolaDirectrix((2L), (4L), (6L)) == (-130L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return -a / b;",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -a / b;",
    "        return -b / (2 * a);"
  ]
}
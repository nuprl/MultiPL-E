{
  "name": "mbpp_228_all_Bits_Set_In_The_Given_Range",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_228_all_Bits_Set_In_The_Given_Range.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask <<= l - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpt54336b9.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpt54336b9.cs(12,9): error CS0019: Operator '<<=' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask <<= l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfp6yalpw.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpfp6yalpw.cs(12,9): error CS0019: Operator '<<=' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnbouoia1.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpnbouoia1.cs(13,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long mask = (1 << (int)(r - l + 1)) - 1;\n        return (n & (mask << (int)l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0c9c9a18e6b4409ebb24ac68bb7922f6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0c9c9a18e6b4409ebb24ac68bb7922f6>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        var mask = (1 << (r - l + 1)) - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3kp3_vki.cs(11,21): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpke19y0qn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpke19y0qn.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = 0;\n        for (long i = l; i <= r; i++) {\n            mask |= (1 << i);\n        }\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1dpt50xg.cs(13,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (int)(r - l + 1)) - 1;\n        return (n & (mask << (int)l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <00ad3c5d4fdb49f2861cc78f7386c408>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <00ad3c5d4fdb49f2861cc78f7386c408>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9qat1xqn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp9qat1xqn.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask <<= l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfp6yalpw.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpfp6yalpw.cs(12,9): error CS0019: Operator '<<=' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9qat1xqn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp9qat1xqn.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa04fx_kt.cs(14,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpa04fx_kt.cs(15,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << (l - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpape8bbhz.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpape8bbhz.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9qat1xqn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp9qat1xqn.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a90c80bd19ae442f90738a69ca5be19e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a90c80bd19ae442f90738a69ca5be19e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3o9vr_xr.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (int)(r - l + 1)) - 1;\n        return (n & (mask << (int)l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <00ad3c5d4fdb49f2861cc78f7386c408>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <00ad3c5d4fdb49f2861cc78f7386c408>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9qat1xqn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp9qat1xqn.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a90c80bd19ae442f90738a69ca5be19e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a90c80bd19ae442f90738a69ca5be19e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <101efe6675854a51865a310bac2f76cd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <101efe6675854a51865a310bac2f76cd>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a90c80bd19ae442f90738a69ca5be19e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a90c80bd19ae442f90738a69ca5be19e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <101efe6675854a51865a310bac2f76cd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <101efe6675854a51865a310bac2f76cd>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        long mask = 0;\n        for (long i = l; i <= r; i++) {\n            mask |= 1 << i;\n        }\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps55xl7z3.cs(14,21): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpke19y0qn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpke19y0qn.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        if (l == r) {\n            return true;\n        }\n        if (l > r) {\n            return false;\n        }\n        long x = n;\n        for (long i = l; i <= r; i++) {\n            x = x & (1 << (int)i);\n        }\n        if (x == 0) {\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <07bdb4e0a5e94e8eab00aecdbb83fa66>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask <<= l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfp6yalpw.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpfp6yalpw.cs(12,9): error CS0019: Operator '<<=' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpke19y0qn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpke19y0qn.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9qat1xqn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp9qat1xqn.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask <<= l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfp6yalpw.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpfp6yalpw.cs(12,9): error CS0019: Operator '<<=' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // TODO: Implement this function.\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c043fc83e5ce4f64adc032e7cf8e94d6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c043fc83e5ce4f64adc032e7cf8e94d6>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <101efe6675854a51865a310bac2f76cd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <101efe6675854a51865a310bac2f76cd>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a90c80bd19ae442f90738a69ca5be19e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a90c80bd19ae442f90738a69ca5be19e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << (l - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpape8bbhz.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpape8bbhz.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9qat1xqn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp9qat1xqn.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask <<= l - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpt54336b9.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpt54336b9.cs(12,9): error CS0019: Operator '<<=' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // n = 0b1010101010101010101010101010101010101010101010101010101010101010\n        // l = 0b0000000000000000000000000000000000000000000000000000000000000001\n        // r = 0b0000000000000000000000000000000000000000000000000000000000000010\n        // n & (1 << l) == 0\n        // n & (1 << r) == 0\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqnny3u8w.cs(17,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9qat1xqn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp9qat1xqn.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3o9vr_xr.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0_3edpbt.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp0_3edpbt.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a90c80bd19ae442f90738a69ca5be19e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a90c80bd19ae442f90738a69ca5be19e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (int)(r - l + 1)) - 1;\n        return (n & (mask << (int)l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <00ad3c5d4fdb49f2861cc78f7386c408>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <00ad3c5d4fdb49f2861cc78f7386c408>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0_3edpbt.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp0_3edpbt.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1377d1419b674e3cbc6c1a7970f59d50>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a90c80bd19ae442f90738a69ca5be19e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a90c80bd19ae442f90738a69ca5be19e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long mask = 0;\n        for (int i = 0; i < r - l + 1; i++) {\n            mask = mask | (1 << i);\n        }\n        mask = mask << l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4a36glrf.cs(18,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n/tmp/tmp4a36glrf.cs(16,20): warning CS0675: Bitwise-or operator used on a sign-extended operand; consider casting to a smaller unsigned type first\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0_3edpbt.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp0_3edpbt.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (int)(r - l + 1)) - 1;\n        mask <<= (int)l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <45602bdace8749df9cf309a980c8ed00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <45602bdace8749df9cf309a980c8ed00>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3o9vr_xr.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = 0;\n        for (long i = l; i <= r; i++) {\n            mask |= 1 << i;\n        }\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbfwd08yi.cs(13,21): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long x = n;\n        for (long i = l; i <= r; i++) {\n            x = x & (1 << i);\n        }\n        return x == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxl78e2x5.cs(13,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        long mask = 0;\n        for (int i = 0; i < r - l + 1; i++) {\n            mask = mask | (1 << i);\n        }\n        mask = mask << l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp31zjru40.cs(16,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n/tmp/tmp31zjru40.cs(14,20): warning CS0675: Bitwise-or operator used on a sign-extended operand; consider casting to a smaller unsigned type first\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4e5282fa644c4debb0ea61f4f9e9d315>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4e5282fa644c4debb0ea61f4f9e9d315>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzlfci34q.cs(15,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (int)(r - l + 1)) - 1;\n        return (n & (mask << (int)l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <00ad3c5d4fdb49f2861cc78f7386c408>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <00ad3c5d4fdb49f2861cc78f7386c408>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpke19y0qn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpke19y0qn.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9qat1xqn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp9qat1xqn.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long mask = (long)(Math.Pow(2, r - l + 1) - 1) << l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9fpk3vqj.cs(14,21): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3o9vr_xr.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3o9vr_xr.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpn52pcss7.cs(14,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // return n.ToString(\"b\").Substring((int)l, (int)(r - l + 1)).All(c => c == '1');\n        return n.ToString(\"b\").Substring((int)l, (int)(r - l + 1)).All(c => c == '1');\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.FormatException: Format specifier was invalid.\n  at System.Number.NumberToString (System.Text.ValueStringBuilder& sb, System.Number+NumberBuffer& number, System.Char format, System.Int32 nMaxDigits, System.Globalization.NumberFormatInfo info, System.Boolean isDecimal) [0x001fb] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Number.FormatInt64 (System.Int64 value, System.ReadOnlySpan`1[T] format, System.IFormatProvider provider) [0x00094] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Int64.ToString (System.String format) [0x00008] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.AllBitsSetInTheGivenRange (System.Int64 n, System.Int64 l, System.Int64 r) [0x00001] in <b923d7f1580b4267872b072fd0cc2a98>:0 \n  at Problem.Main (System.String[] args) [0x00001] in <b923d7f1580b4267872b072fd0cc2a98>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Format specifier was invalid.\n  at System.Number.NumberToString (System.Text.ValueStringBuilder& sb, System.Number+NumberBuffer& number, System.Char format, System.Int32 nMaxDigits, System.Globalization.NumberFormatInfo info, System.Boolean isDecimal) [0x001fb] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Number.FormatInt64 (System.Int64 value, System.ReadOnlySpan`1[T] format, System.IFormatProvider provider) [0x00094] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Int64.ToString (System.String format) [0x00008] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.AllBitsSetInTheGivenRange (System.Int64 n, System.Int64 l, System.Int64 r) [0x00001] in <b923d7f1580b4267872b072fd0cc2a98>:0 \n  at Problem.Main (System.String[] args) [0x00001] in <b923d7f1580b4267872b072fd0cc2a98>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpke19y0qn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpke19y0qn.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == (mask << l);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxxxh8039.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpxxxh8039.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n/tmp/tmpxxxh8039.cs(12,38): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9qat1xqn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp9qat1xqn.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long mask = 0;\n        for (long i = l; i <= r; i++) {\n            mask |= 1 << (int)i;\n        }\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <db035f1708794e018ef853a9ff6f4a6e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <db035f1708794e018ef853a9ff6f4a6e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9qat1xqn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp9qat1xqn.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a90c80bd19ae442f90738a69ca5be19e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a90c80bd19ae442f90738a69ca5be19e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9qat1xqn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp9qat1xqn.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6c5b9kvy.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp6c5b9kvy.cs(13,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpke19y0qn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpke19y0qn.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3o9vr_xr.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a90c80bd19ae442f90738a69ca5be19e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a90c80bd19ae442f90738a69ca5be19e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // We can do this by using the bitwise AND operator.\n        // If all the bits are set in the given range, then the result of the AND operation will be equal to the given number.\n        // If the result of the AND operation is not equal to the given number, then there is at least one bit that is not set in the given range.\n        return (n & ((1 << r) - 1)) == ((1 << l) - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpz22t9bcp.cs(14,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpz22t9bcp.cs(14,42): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0_3edpbt.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp0_3edpbt.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa04fx_kt.cs(14,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpa04fx_kt.cs(15,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3o9vr_xr.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        return ((n >> l) & ((1 << (r - l + 1)) - 1)) == ((1 << (r - l + 1)) - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpazhcikgc.cs(11,18): error CS0019: Operator '>>' cannot be applied to operands of type 'long' and 'long'\n/tmp/tmpazhcikgc.cs(11,30): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpazhcikgc.cs(11,59): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        return (n & ((1 << (r - l + 1)) - 1) << (l - 1)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl270p7fy.cs(11,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4e5282fa644c4debb0ea61f4f9e9d315>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9qat1xqn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp9qat1xqn.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (int)(r - l + 1)) - 1;\n        return (n & (mask << (int)l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <00ad3c5d4fdb49f2861cc78f7386c408>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <00ad3c5d4fdb49f2861cc78f7386c408>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6c5b9kvy.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp6c5b9kvy.cs(13,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4e5282fa644c4debb0ea61f4f9e9d315>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // n = 10101\n        // l = 2\n        // r = 4\n        // n >> l = 10101 >> 2 = 10\n        // n << r = 10101 << 4 = 101010000\n        // n >> l & n << r = 10 & 101010000 = 0\n        return (n >> l & n << r) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4p75v5l3.cs(17,17): error CS0019: Operator '>>' cannot be applied to operands of type 'long' and 'long'\n/tmp/tmp4p75v5l3.cs(17,26): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <101efe6675854a51865a310bac2f76cd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <101efe6675854a51865a310bac2f76cd>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4e5282fa644c4debb0ea61f4f9e9d315>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << (l - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpape8bbhz.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpape8bbhz.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9qat1xqn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp9qat1xqn.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // n = n & ~((1 << (r + 1)) - 1);\n        // n = n & ((1 << l) - 1);\n        // return n == 0;\n        return ((n & ((1 << (r + 1)) - 1)) & ~((1 << l) - 1)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtshbmkt.cs(14,24): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmprtshbmkt.cs(14,49): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <101efe6675854a51865a310bac2f76cd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <101efe6675854a51865a310bac2f76cd>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long mask = 0;\n        for (long i = l; i <= r; i++) {\n            mask |= (1 << i);\n        }\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwe0lb32f.cs(16,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa04fx_kt.cs(14,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpa04fx_kt.cs(15,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6c5b9kvy.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp6c5b9kvy.cs(13,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << (l - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpape8bbhz.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpape8bbhz.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <101efe6675854a51865a310bac2f76cd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <101efe6675854a51865a310bac2f76cd>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9qat1xqn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp9qat1xqn.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_imgr9he.cs(13,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // The idea is to check if the bits in the range are all set.\n        // We can do this by checking if the bits in the range are all set.\n        // We can do this by checking if the bits in the range are all set.\n        // We can do this by checking if the bits in the range are all set.\n        // We can do this by checking if the bits in the range are all set.\n        // We can do this by checking if the bits in the range are all set.\n        // We can do this by checking if the bits in the range are all set.\n        // We can do this by checking if the bits in the range are all set.\n        // We can do this by checking if the bits in the range are all set.\n        // We can do this by checking if the bits in the range are all set.\n        // We can do this by checking if the bits in the range are all set.\n        // We can do this by checking if the bits in the range are all set.\n        // We can do this by checking if the bits in the range are all set.\n        // We can do this by checking if the bits in the range are all set.\n        // We can do this by checking if the bits in the range are all set.\n        // We can do this by checking if the bits in the range are all set.\n        // We can do this by checking if the bits in the range are all set.\n        // We can do this by checking if the bits in the range are all set.\n        // We can do this by checking if the bits in the range are all set.\n        // We can do this by checking if the bits in the range are all set.\n        // We can do this by checking if the bits in the range are all set.\n        // We can do this by checking if the bits in the range are all set.\n        // We can do this by checking if the bits in the range are all set.\n        // We can do this by checking if the bits in the range are all set.\n        // We can do this by checking if the bits in the range are all set.\n        // We can do this by checking if the bits in the range are all set.\n        // We can do this by checking if the bits in the range are all set.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf366_zvg.cs(10,24): error CS0161: 'Problem.AllBitsSetInTheGivenRange(long, long, long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9qat1xqn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp9qat1xqn.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9qat1xqn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp9qat1xqn.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9qat1xqn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp9qat1xqn.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9qat1xqn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp9qat1xqn.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a90c80bd19ae442f90738a69ca5be19e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a90c80bd19ae442f90738a69ca5be19e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <101efe6675854a51865a310bac2f76cd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <101efe6675854a51865a310bac2f76cd>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return ((n >> l) & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3ieb2y3g.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp3ieb2y3g.cs(12,18): error CS0019: Operator '>>' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == (mask << l);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxxxh8039.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpxxxh8039.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n/tmp/tmpxxxh8039.cs(12,38): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9qat1xqn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp9qat1xqn.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long x = n;\n        for (long i = l; i <= r; i++) {\n            x &= (1 << i);\n        }\n        return x == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx5f0nwh1.cs(13,19): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0_3edpbt.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp0_3edpbt.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa04fx_kt.cs(14,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpa04fx_kt.cs(15,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = 0;\n        for (long i = l; i <= r; i++) {\n            mask |= 1 << i;\n        }\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbfwd08yi.cs(13,21): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here.\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpyg8naxg0.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpke19y0qn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpke19y0qn.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnbouoia1.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpnbouoia1.cs(13,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4e5282fa644c4debb0ea61f4f9e9d315>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return ((n >> (l - 1)) & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfowazrk0.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpfowazrk0.cs(12,18): error CS0019: Operator '>>' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9qat1xqn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp9qat1xqn.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6c5b9kvy.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp6c5b9kvy.cs(13,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // n = 1010101010101010101010101010101010101010101010101010101010101010\n        // l = 0\n        // r = 63\n        // n = 1010101010101010101010101010101010101010101010101010101010101010\n        // l = 0\n        // r = 64\n        // n = 1010101010101010101010101010101010101010101010101010101010101010\n        // l = 0\n        // r = 65\n        // n = 1010101010101010101010101010101010101010101010101010101010101010\n        // l = 0\n        // r = 66\n        // n = 1010101010101010101010101010101010101010101010101010101010101010\n        // l = 0\n        // r = 67\n        // n = 1010101010101010101010101010101010101010101010101010101010101010\n        // l = 0\n        // r = 68\n        // n = 1010101010101010101010101010101010101010101010101010101010101010\n        // l = 0\n        // r = 69\n        // n = 1010101010101010101010101010101010101010101010101010101010101010\n        // l = 0\n        // r = 70\n        // n = 1010101010101010101010101010101010101010101010101010101010101010\n        // l = 0\n        // r = 71\n        // n = 1010101010101010101010101010101010101010101010101010101010101010\n        // l = 0\n        // r = 72\n        // n = 1010101010101010101010101010101010101010101010101010101\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3uwe9dxv.cs(10,24): error CS0161: 'Problem.AllBitsSetInTheGivenRange(long, long, long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa04fx_kt.cs(14,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpa04fx_kt.cs(15,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (int)(r - l + 1)) - 1;\n        mask = mask << (int)l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f77610dcdec64f28939e20ef55c8f5c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f77610dcdec64f28939e20ef55c8f5c9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // TODO: Implement\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <58be0e9d4e6f4bbf840258dc2eb691bd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <58be0e9d4e6f4bbf840258dc2eb691bd>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        return (n & ((1 << (int)(r - l + 1)) - 1) << (int)l) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <61a65d4076a64e978adf0ea6def15741>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <61a65d4076a64e978adf0ea6def15741>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0_3edpbt.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp0_3edpbt.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        long mask = (1 << (int)(r - l + 1)) - 1;\n        mask <<= (int)l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c2b8b0b09d3c49af95456109f23fac9f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c2b8b0b09d3c49af95456109f23fac9f>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4e5282fa644c4debb0ea61f4f9e9d315>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (int i = (int)l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7ebf57d35911447788580b01472a7968>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7ebf57d35911447788580b01472a7968>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0_3edpbt.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp0_3edpbt.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long mask = (1 << (r - l + 1)) - 1;\n        long shifted = n >> l;\n        return (shifted & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkesfxzga.cs(14,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpkesfxzga.cs(15,24): error CS0019: Operator '>>' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << (l - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpca8phple.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpca8phple.cs(13,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = 0;\n        for (long i = l; i <= r; i++) {\n            mask |= 1 << i;\n        }\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbfwd08yi.cs(13,21): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (int)(r - l + 1)) - 1;\n        mask = mask << (int)l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f77610dcdec64f28939e20ef55c8f5c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f77610dcdec64f28939e20ef55c8f5c9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (int)(r - l + 1)) - 1;\n        return (n & (mask << (int)l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <00ad3c5d4fdb49f2861cc78f7386c408>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <00ad3c5d4fdb49f2861cc78f7386c408>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4e5282fa644c4debb0ea61f4f9e9d315>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == (mask << l);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgecfto7r.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpgecfto7r.cs(13,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n/tmp/tmpgecfto7r.cs(13,38): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (int)(r - l + 1)) - 1;\n        return (n & (mask << (int)l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <00ad3c5d4fdb49f2861cc78f7386c408>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <00ad3c5d4fdb49f2861cc78f7386c408>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9qat1xqn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp9qat1xqn.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (int)(r - l + 1)) - 1;\n        mask <<= (int)l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <45602bdace8749df9cf309a980c8ed00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <45602bdace8749df9cf309a980c8ed00>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask <<= l - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpt54336b9.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpt54336b9.cs(12,9): error CS0019: Operator '<<=' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9qat1xqn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp9qat1xqn.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask <<= l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfp6yalpw.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpfp6yalpw.cs(12,9): error CS0019: Operator '<<=' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_imgr9he.cs(13,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask <<= l - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpt54336b9.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpt54336b9.cs(12,9): error CS0019: Operator '<<=' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        return (n & ((1 << (r - l + 1)) - 1) << (l - 1)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl270p7fy.cs(11,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // n = 0b1010\n        // l = 0\n        // r = 2\n        // 0b1010 & 0b0011 = 0b0010\n        // 0b0010 != 0b0000\n        // return false\n        return (n & ((1 << r) - 1)) != 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvwizk1g9.cs(17,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << (l - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpape8bbhz.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpape8bbhz.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a90c80bd19ae442f90738a69ca5be19e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a90c80bd19ae442f90738a69ca5be19e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a90c80bd19ae442f90738a69ca5be19e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a90c80bd19ae442f90738a69ca5be19e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << r) - 1;\n        mask = mask ^ ((1 << (l - 1)) - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpizuqwx5x.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpizuqwx5x.cs(12,25): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        return (n & ((1 << (int)(r - l + 1)) - 1) << (int)l) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <61a65d4076a64e978adf0ea6def15741>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <61a65d4076a64e978adf0ea6def15741>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9qat1xqn.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp9qat1xqn.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510489,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa0w_6kwo.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_395_first_non_repeating_character",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_395_first_non_repeating_character.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        var charIndex = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            var c = str1[i];\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount[c] = 1;\n                charIndex[c] = i;\n            }\n        }\n        var minIndex = str1.Length;\n        var minChar = '\\0';\n        foreach (var kvp in charCount) {\n            if (kvp.Value == 1 && charIndex[kvp.Key] < minIndex) {\n                minIndex = charIndex[kvp.Key];\n                minChar = kvp.Key;\n            }\n        }\n        return minChar.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c64eae49a44b4963beb2a8cd46899a1c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and its count\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character is in the dictionary, increment its count\n            if (charCount.ContainsKey(str1[i])) {\n                charCount[str1[i]]++;\n            } else {\n                // Otherwise, add it to the dictionary with a count of 1\n                charCount.Add(str1[i], 1);\n            }\n        }\n        // Loop through the string again\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character is in the dictionary and its count is 1, return it\n            if (charCount.ContainsKey(str1[i]) && charCount[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <87eb0dace8d34641b19bb6fb18aabf67>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <87eb0dace8d34641b19bb6fb18aabf67>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4cb88a5f2a6a4b50a12fa638d686a19b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // create a dictionary to store the character and the number of times it appears\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // iterate through the string\n        foreach (char c in str1) {\n            // if the character is not in the dictionary\n            if (!charCount.ContainsKey(c)) {\n                // add it to the dictionary\n                charCount.Add(c, 1);\n            } else {\n                // if it is in the dictionary, increment the count\n                charCount[c]++;\n            }\n        }\n        // iterate through the string again\n        foreach (char c in str1) {\n            // if the character appears only once\n            if (charCount[c] == 1) {\n                // return it\n                return c.ToString();\n            }\n        }\n        // if no character appears only once, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <f0dd361be69c4206bb50034587e21a65>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <f0dd361be69c4206bb50034587e21a65>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> count = new Dictionary<char, int>();\n        // Loop through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (count.ContainsKey(c)) {\n                count[c]++;\n            } else {\n                count.Add(c, 1);\n            }\n        }\n        // Loop through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (count[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <6e003cb258ea455ea49158cc16d41ad4>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <6e003cb258ea455ea49158cc16d41ad4>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0387ca9cdf7b4e43930b3721ac5e961b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e792b1ecd7ed48fbb03652983eceb16f>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e792b1ecd7ed48fbb03652983eceb16f>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no characters have a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <832d0963d1bc402bae189b7457a2c687>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <832d0963d1bc402bae189b7457a2c687>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it with a count of 1\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // If the character is in the dictionary, increment the count\n            else {\n                charCount[c]++;\n            }\n        }\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character count is 1, return the character\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no characters have a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <cfe99d3626d843eda34ddd6bf26deee2>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <cfe99d3626d843eda34ddd6bf26deee2>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add the count of each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return an empty string\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3f68a325f9c47eb8760a533f782d676>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and its count\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add the character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f80434c0ad064b0580d33a697c6b4840>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e792b1ecd7ed48fbb03652983eceb16f>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e792b1ecd7ed48fbb03652983eceb16f>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and its count\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string and add the character to the dictionary\n        for (int i = 0; i < str1.Length; i++) {\n            if (charCount.ContainsKey(str1[i])) {\n                charCount[str1[i]]++;\n            } else {\n                charCount.Add(str1[i], 1);\n            }\n        }\n        // Loop through the string and return the first character that has a count of 1\n        for (int i = 0; i < str1.Length; i++) {\n            if (charCount[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // If there is no character that has a count of 1, return the empty string\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1df4cb2c4a074cd4b8599a1dee8466c0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it with a count of 1\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // Otherwise, increment the count\n            else {\n                charCount[c]++;\n            }\n        }\n        // Iterate through the string again\n        foreach (char c in str1) {\n            // If the character count is 1, return it\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <824710af73c14ca1afee7fb2abd7c60f>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <824710af73c14ca1afee7fb2abd7c60f>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // convert string to char array\n        char[] chars = str1.ToCharArray();\n        // create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // iterate through the char array\n        foreach (char c in chars) {\n            // if the character is not in the dictionary, add it with a count of 1\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // if the character is in the dictionary, increment the count\n            else {\n                charCount[c]++;\n            }\n        }\n        // iterate through the char array again\n        foreach (char c in chars) {\n            // if the character count is 1, return the character\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // if no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8f39c8206e934e93a74933fb23b123c5>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8f39c8206e934e93a74933fb23b123c5>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character is already in the dictionary, increment the count\n            if (charCount.ContainsKey(str1[i])) {\n                charCount[str1[i]]++;\n            }\n            // Otherwise, add the character to the dictionary with a count of 1\n            else {\n                charCount.Add(str1[i], 1);\n            }\n        }\n        // Iterate through the string again\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character has a count of 1, return it\n            if (charCount[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // If no characters have a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8c2f20fb5ca7495a97fa71749a1d3e14>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8c2f20fb5ca7495a97fa71749a1d3e14>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e5c66faf4c95408a998b6f256e8df95e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Convert the string to a char array\n        char[] charArray = str1.ToCharArray();\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the array and add each character to the dictionary\n        foreach (char c in charArray) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the dictionary and return the first character with a count of 1\n        foreach (KeyValuePair<char, int> kvp in charCount) {\n            if (kvp.Value == 1) {\n                return kvp.Key.ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7ab1a687b2f54660a7c2e2f1ca57d2e5>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7ab1a687b2f54660a7c2e2f1ca57d2e5>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c] += 1;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ebe0dcf99f87461f92187ee674e75d06>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (var ch in str1) {\n            if (dict.ContainsKey(ch)) {\n                dict[ch]++;\n            } else {\n                dict[ch] = 1;\n            }\n        }\n        foreach (var ch in str1) {\n            if (dict[ch] == 1) {\n                return ch.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c07c7372c35440f486d18f56841f5607>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dic = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dic.ContainsKey(c)) {\n                dic[c]++;\n            } else {\n                dic.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dic[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5824be3d26174cb7ba4ae2675c955707>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e5c66faf4c95408a998b6f256e8df95e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        // Iterate through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character is not in the dictionary, add it\n            if (!dict.ContainsKey(str1[i])) {\n                dict.Add(str1[i], 1);\n            }\n            // If the character is in the dictionary, increment the count\n            else {\n                dict[str1[i]]++;\n            }\n        }\n        // Iterate through the string again\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character count is 1, return the character\n            if (dict[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <a8cd2b33a4164874b02897c5808355de>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <a8cd2b33a4164874b02897c5808355de>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and its count\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        // Iterate through the string and add the character to the dictionary\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        // Iterate through the string and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dc9e0d531dc94b80968184d99c2913f7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> dict1 = new Dictionary<char, int>();\n        // Loop through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (dict1.ContainsKey(c)) {\n                dict1[c]++;\n            } else {\n                dict1.Add(c, 1);\n            }\n        }\n        // Loop through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (dict1[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"No non-repeating characters found\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2c8a8e93a77c4920961087603c24ff93>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        char[] chars = str1.ToCharArray();\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        for (int i = 0; i < chars.Length; i++) {\n            if (dict.ContainsKey(chars[i])) {\n                dict[chars[i]] += 1;\n            } else {\n                dict.Add(chars[i], 1);\n            }\n        }\n        foreach (KeyValuePair<char, int> kvp in dict) {\n            if (kvp.Value == 1) {\n                return kvp.Key.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd17296b201e4984a18f5c0ef62f35c1>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to hold the character and the number of times it appears\n        Dictionary<char, int> charDict = new Dictionary<char, int>();\n        // Loop through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character is not in the dictionary, add it\n            if (!charDict.ContainsKey(str1[i])) {\n                charDict.Add(str1[i], 1);\n            }\n            // If the character is in the dictionary, increment its value\n            else {\n                charDict[str1[i]]++;\n            }\n        }\n        // Loop through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character appears only once, return it\n            if (charDict[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // If no characters appear only once, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <1f499bb57b8a4d40b71b1d272e065774>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <1f499bb57b8a4d40b71b1d272e065774>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // create a dictionary to store the characters and their count\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // iterate through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // if the character is not in the dictionary, add it\n            if (!charCount.ContainsKey(str1[i])) {\n                charCount.Add(str1[i], 1);\n            } else {\n                // if the character is in the dictionary, increment the count\n                charCount[str1[i]]++;\n            }\n        }\n        // iterate through the string again\n        for (int i = 0; i < str1.Length; i++) {\n            // if the character count is 1, return the character\n            if (charCount[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // if no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <fdf9317707724d19874dfe5e36e255cf>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <fdf9317707724d19874dfe5e36e255cf>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and count the number of times each character appears\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bc2fb002b14148978b76afd546e4e38c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add the character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f1c9e9352ee84b27809cd9926c394a84>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the characters and their count\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character is not in the dictionary, add it and set the count to 1\n            if (!charCount.ContainsKey(str1[i])) {\n                charCount.Add(str1[i], 1);\n            }\n            // If the character is in the dictionary, increment the count\n            else {\n                charCount[str1[i]] += 1;\n            }\n        }\n        // Loop through the string again\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character's count is 1, return it\n            if (charCount[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <d117f8f749064675900d6ff83e0fee79>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <d117f8f749064675900d6ff83e0fee79>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <ae23dc5a2b9d4eb1b664baafac633ae5>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <ae23dc5a2b9d4eb1b664baafac633ae5>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e3f95529c1aa4464a5b3c41f4e2250cc>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                result = c.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c8c1cff8f2a943ba8aeb721ed75f5306>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and its count\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string\n        foreach (char c in str1) {\n            // If the character is already in the dictionary, increment the count\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            }\n            // Otherwise, add the character to the dictionary with a count of 1\n            else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the string again\n        foreach (char c in str1) {\n            // If the character is in the dictionary and the count is 1, return the character\n            if (charCount.ContainsKey(c) && charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // Otherwise, return an empty string\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1b2f68396dd646f7bcbb901f0cddead7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n\n        foreach (var c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d802f5b505fd4185be9fa3fa8e9bf5f4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a new string to hold the result\n        string result = \"\";\n        // Create a new dictionary to hold the characters and their counts\n        Dictionary<char, int> charCounts = new Dictionary<char, int>();\n        // Iterate through the string\n        foreach (char c in str1) {\n            // If the character is already in the dictionary, increment the count\n            if (charCounts.ContainsKey(c)) {\n                charCounts[c]++;\n            }\n            // Otherwise, add it to the dictionary with a count of 1\n            else {\n                charCounts.Add(c, 1);\n            }\n        }\n        // Iterate through the string\n        foreach (char c in str1) {\n            // If the character count is 1, return it\n            if (charCounts[c] == 1) {\n                result = c.ToString();\n                break;\n            }\n        }\n        // Return the result\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d479b54f38cb4dd7885e2c2839697b11>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character is not in the dictionary, add it\n            if (!charCount.ContainsKey(str1[i])) {\n                charCount.Add(str1[i], 1);\n            }\n            // If the character is in the dictionary, increment the count\n            else {\n                charCount[str1[i]]++;\n            }\n        }\n        // Iterate through the string again\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character count is 1, return the character\n            if (charCount[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <c5e6bff830af4b87a15aeab86506edc4>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <c5e6bff830af4b87a15aeab86506edc4>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the number of times a character is repeated.\n        Dictionary<char, int> charDict = new Dictionary<char, int>();\n        // Loop through the string and add the characters to the dictionary.\n        foreach (char c in str1) {\n            if (charDict.ContainsKey(c)) {\n                charDict[c] += 1;\n            } else {\n                charDict.Add(c, 1);\n            }\n        }\n        // Loop through the string and return the first character that is not repeated.\n        foreach (char c in str1) {\n            if (charDict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character is not repeated, return null.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <a23a8919a1944031bcc62cc7700ac920>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <a23a8919a1944031bcc62cc7700ac920>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to hold the character and the count of the character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the dictionary and return the first character that has a count of 1\n        foreach (KeyValuePair<char, int> kvp in charCount) {\n            if (kvp.Value == 1) {\n                return kvp.Key.ToString();\n            }\n        }\n        return \"No non-repeating characters found.\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <23ffd75c67524805b64d1efc70b6fb2c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and its count\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character is not in the dictionary, add it\n            if (!charCount.ContainsKey(str1[i])) {\n                charCount.Add(str1[i], 1);\n            }\n            // If the character is in the dictionary, increment the count\n            else {\n                charCount[str1[i]]++;\n            }\n        }\n        // Loop through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character count is 1, return the character\n            if (charCount[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <b742948ade8542d198b38f8e3b7e5aa1>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <b742948ade8542d198b38f8e3b7e5aa1>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        foreach (var c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c416ceb84ebe4294a0fc443037d45f88>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no characters have a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <58583fab35c1452a9e64b8a46a95dd5e>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <58583fab35c1452a9e64b8a46a95dd5e>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character is already in the dictionary, increment the count\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            }\n            // Otherwise, add the character to the dictionary and set the count to 1\n            else {\n                charCount.Add(c, 1);\n            }\n        }\n\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the count of the character is 1, return it\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n\n        // If no characters have a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <6814adac05e94f608581df3e0c2ebf99>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <6814adac05e94f608581df3e0c2ebf99>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        // Iterate through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"No non-repeating characters found.\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ada3d89a1a394808a54df8f87624d5ee>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (var c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2d3e658856e741bab99d794efa4b062c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c] += 1;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <873df4d0dd3642e2b9ede6b39538770f>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If there are no characters with a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <591b1b6342ac4c6182377916f124792b>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <591b1b6342ac4c6182377916f124792b>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        char[] arr = str1.ToCharArray();\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        for (int i = 0; i < arr.Length; i++) {\n            if (dict.ContainsKey(arr[i])) {\n                dict[arr[i]] += 1;\n            } else {\n                dict.Add(arr[i], 1);\n            }\n        }\n        foreach (KeyValuePair<char, int> kvp in dict) {\n            if (kvp.Value == 1) {\n                return kvp.Key.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <88ef81ab387445228ea4ea57c093f2f2>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary of characters and their counts\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n\n        // Find the first character with a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <672866acd7a64aa0bc5aab7cb895f491>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0387ca9cdf7b4e43930b3721ac5e961b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charDict = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (charDict.ContainsKey(str1[i])) {\n                charDict[str1[i]]++;\n            } else {\n                charDict.Add(str1[i], 1);\n            }\n        }\n        foreach (KeyValuePair<char, int> kvp in charDict) {\n            if (kvp.Value == 1) {\n                return kvp.Key.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <00d605a3a25a4b51ac478738aa28b61c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        foreach (var c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c416ceb84ebe4294a0fc443037d45f88>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and its count\n        Dictionary<char, int> charDict = new Dictionary<char, int>();\n        // Iterate through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charDict.ContainsKey(c)) {\n                charDict[c]++;\n            } else {\n                charDict.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charDict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <90b5d95dcd1e4149ae43e109a244bf1e>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <90b5d95dcd1e4149ae43e109a244bf1e>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and its count\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        // Loop through the string and add the character to the dictionary\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c] += 1;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        // Loop through the string again and find the first character that has a count of 1\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <811acd8bd22a4f888177e0278b0ecb23>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and the number of times it appears\n        Dictionary<char, int> charDict = new Dictionary<char, int>();\n        // Iterate through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character is in the dictionary, increment the value by 1\n            if (charDict.ContainsKey(str1[i])) {\n                charDict[str1[i]]++;\n            }\n            // If the character is not in the dictionary, add it with a value of 1\n            else {\n                charDict.Add(str1[i], 1);\n            }\n        }\n        // Iterate through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character appears only once, return it\n            if (charDict[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // If no character appears only once, return -1\n        return \"-1\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6b97f80bb29041c5818927fc7bdc0225>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (dict.ContainsKey(str1[i])) {\n                dict[str1[i]]++;\n            } else {\n                dict.Add(str1[i], 1);\n            }\n        }\n        foreach (KeyValuePair<char, int> kvp in dict) {\n            if (kvp.Value == 1) {\n                result = kvp.Key.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4aa7ab7e6be04da2ab0fe7de861d8c0e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the number of times a character appears in the string\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the string and return the first character that appears only once\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character appears only once, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <dbfbf2f5bd5349ea86246a54ce6f6a3d>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <dbfbf2f5bd5349ea86246a54ce6f6a3d>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and its count\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // If the character is in the dictionary, increment its count\n            else {\n                charCount[c]++;\n            }\n        }\n        // Loop through the string again\n        foreach (char c in str1) {\n            // If the character's count is 1, return it\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7df1d163d196478bb019a71329b2c795>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7df1d163d196478bb019a71329b2c795>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e3f423c48ec34f26a60ab84f3923dc5b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3a2c42bf705f49199b26f7f99fb15e99>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var chars = str1.ToCharArray();\n        var dict = new Dictionary<char, int>();\n        foreach (var c in chars) {\n            if (dict.ContainsKey(c)) {\n                dict[c] += 1;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (var c in chars) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e7136d6e50034cb5ae38bf848b9f8824>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it with a count of 1\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // If the character is in the dictionary, increment the count\n            else {\n                charCount[c]++;\n            }\n        }\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character has a count of 1, return it\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <01efa80e80bf49c784315025e0fcc8e8>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <01efa80e80bf49c784315025e0fcc8e8>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c] += 1;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        foreach (var c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <21da16c741744d0383927366b8daffc5>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        char[] str = str1.ToCharArray();\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f3aab4bfbc8f4be59aebdd61e170db11>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (charCount.ContainsKey(str1[i])) {\n                charCount[str1[i]]++;\n            } else {\n                charCount.Add(str1[i], 1);\n            }\n        }\n        foreach (var item in charCount) {\n            if (item.Value == 1) {\n                result = item.Key.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b0237612255943528088078274c85f56>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e792b1ecd7ed48fbb03652983eceb16f>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e792b1ecd7ed48fbb03652983eceb16f>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through each character in the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character is already in the dictionary, increment the count\n            if (charCount.ContainsKey(str1[i])) {\n                charCount[str1[i]]++;\n            }\n            // Otherwise, add the character to the dictionary with a count of 1\n            else {\n                charCount.Add(str1[i], 1);\n            }\n        }\n        // Iterate through each character in the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character is in the dictionary and the count is 1, return the character\n            if (charCount.ContainsKey(str1[i]) && charCount[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // If no characters are found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <bdfc474b01114a6ebb92034c61ca70d1>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <bdfc474b01114a6ebb92034c61ca70d1>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Use a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"No non-repeating characters found\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <81ec84a6c9524ac780be7a0d009adf19>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                result = c.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e3ee239cee804085b7f62a73a3774e62>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e792b1ecd7ed48fbb03652983eceb16f>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e792b1ecd7ed48fbb03652983eceb16f>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no characters are found with a count of 1, return an empty string\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ae159153b60b44cd93af82b4070b0ffc>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <276db55a158f40998d3551563c1b6a10>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (dict.ContainsKey(str1[i])) {\n                dict[str1[i]] += 1;\n            } else {\n                dict[str1[i]] = 1;\n            }\n        }\n        foreach (KeyValuePair<char, int> kvp in dict) {\n            if (kvp.Value == 1) {\n                return kvp.Key.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc23b9b881384871852d62b7089ffd9c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it with a count of 1\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // If the character is in the dictionary, increment the count\n            else {\n                charCount[c]++;\n            }\n        }\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character count is 1, return it\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <40d92f876db94057b77fbeceee2a0054>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <40d92f876db94057b77fbeceee2a0054>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0387ca9cdf7b4e43930b3721ac5e961b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // create a dictionary to store the character and the number of times it appears\n        Dictionary<char, int> charDict = new Dictionary<char, int>();\n        // loop through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // if the character is not in the dictionary, add it\n            if (!charDict.ContainsKey(str1[i])) {\n                charDict.Add(str1[i], 1);\n            }\n            // otherwise, increment the value\n            else {\n                charDict[str1[i]]++;\n            }\n        }\n        // loop through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // if the character appears only once, return it\n            if (charDict[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // if no character appears only once, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <273b37b9a02d4f6198a339ac122305ae>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <273b37b9a02d4f6198a339ac122305ae>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            } else {\n                charCount[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <14ec8ff73a5f4a85b093fd523b72ab44>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                result = c.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e3ee239cee804085b7f62a73a3774e62>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                // If the character is already in the dictionary, increment the count\n                charCount[c]++;\n            } else {\n                // If the character is not in the dictionary, add it with a count of 1\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the string and return the first character with a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <0a89b12c052e472bab14869ca2f16a23>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <0a89b12c052e472bab14869ca2f16a23>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to hold the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // If the character is in the dictionary, increment the count\n            else {\n                charCount[c]++;\n            }\n        }\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character count is 1, return the character\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no characters have a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7a4333c9637a43ad8e757c281c130836>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7a4333c9637a43ad8e757c281c130836>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (var c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1994cd3aa04b46e0b449f7c080ac583c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and the number of times it appears in the string\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character is already in the dictionary, increment the count\n            if (charCount.ContainsKey(str1[i])) {\n                charCount[str1[i]]++;\n            }\n            // If the character is not in the dictionary, add it and set the count to 1\n            else {\n                charCount.Add(str1[i], 1);\n            }\n        }\n        // Loop through the string again\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character count is 1, return the character\n            if (charCount[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <b0c5b6d4e122489f9432e27ec9c36ab7>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <b0c5b6d4e122489f9432e27ec9c36ab7>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character.\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through each character in the string.\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it.\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // Otherwise, increment the count.\n            else {\n                charCount[c]++;\n            }\n        }\n        // Iterate through each character in the string.\n        foreach (char c in str1) {\n            // If the character count is 1, return it.\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character is found, return null.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <a283242505c749d89b17fffb7a25e265>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <a283242505c749d89b17fffb7a25e265>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e904a2a0716a4621a15ded0186ae177b>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e904a2a0716a4621a15ded0186ae177b>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to hold the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it and set the count to 1\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // If the character is in the dictionary, increment the count\n            else {\n                charCount[c]++;\n            }\n        }\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character count is 1, return the character\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no non-repeating characters were found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <0b65e706b89a42dc8f23379a12a308c8>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <0b65e706b89a42dc8f23379a12a308c8>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<string, int>();\n        var str = str1.ToLower();\n        foreach (var c in str) {\n            if (dict.ContainsKey(c.ToString())) {\n                dict[c.ToString()] += 1;\n            } else {\n                dict[c.ToString()] = 1;\n            }\n        }\n        foreach (var c in str) {\n            if (dict[c.ToString()] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <76d740af550648e7aa4f33eb4f4fa2c0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and the number of times it appears\n        Dictionary<char, int> charDict = new Dictionary<char, int>();\n        // Loop through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character is not in the dictionary, add it\n            if (!charDict.ContainsKey(str1[i])) {\n                charDict.Add(str1[i], 1);\n            } else {\n                // If the character is in the dictionary, increment the value\n                charDict[str1[i]]++;\n            }\n        }\n        // Loop through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character appears only once, return it\n            if (charDict[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // If no character appears only once, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <c97c06fea86e4e63a1f875a218f3b55d>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <c97c06fea86e4e63a1f875a218f3b55d>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Write your code here\n        var dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <185080b9cbfc46d0bffe642d13d6c2b8>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                result = c.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c8c1cff8f2a943ba8aeb721ed75f5306>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to hold the character and the number of times it is repeated\n        Dictionary<char, int> charDict = new Dictionary<char, int>();\n        // Loop through the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it\n            if (!charDict.ContainsKey(c)) {\n                charDict.Add(c, 1);\n            }\n            // If the character is in the dictionary, increment the value\n            else {\n                charDict[c]++;\n            }\n        }\n        // Loop through the string\n        foreach (char c in str1) {\n            // If the character is not repeated, return it\n            if (charDict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character is not repeated, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <a85e99d93fe743069ae1c6c4a60e667d>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <a85e99d93fe743069ae1c6c4a60e667d>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        foreach (var c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c416ceb84ebe4294a0fc443037d45f88>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <751046726a8149fb86da3689f3754d55>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <751046726a8149fb86da3689f3754d55>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the number of times a character appears\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // If the character is in the dictionary, increment the count\n            else {\n                charCount[c]++;\n            }\n        }\n        // Loop through the string again\n        foreach (char c in str1) {\n            // If the character count is 1, return the character\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <5bd3ddf419934f6992e87261a5eec58a>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <5bd3ddf419934f6992e87261a5eec58a>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (var c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2d3e658856e741bab99d794efa4b062c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (var c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2d3e658856e741bab99d794efa4b062c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and the number of times it appears in the string\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string and add the character to the dictionary if it doesn't exist, or increment the count if it does\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the dictionary and return the first character with a count of 1\n        foreach (KeyValuePair<char, int> kvp in charCount) {\n            if (kvp.Value == 1) {\n                return kvp.Key.ToString();\n            }\n        }\n        // If no character is found with a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <d17d212b678b475e855adef298e76450>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <d17d212b678b475e855adef298e76450>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                result = c.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e3ee239cee804085b7f62a73a3774e62>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character is already in the dictionary, increment the count\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            }\n            // If the character is not in the dictionary, add it with a count of 1\n            else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character count is 1, return the character\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <3287b88114734538ae78a3ffce827266>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <3287b88114734538ae78a3ffce827266>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (var c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1994cd3aa04b46e0b449f7c080ac583c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charArray = str1.ToCharArray();\n        var charDict = new Dictionary<char, int>();\n        foreach (var c in charArray) {\n            if (charDict.ContainsKey(c)) {\n                charDict[c]++;\n            } else {\n                charDict.Add(c, 1);\n            }\n        }\n        foreach (var c in charArray) {\n            if (charDict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123336,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9d4cf0160a0d47ff9bb79c0ec7eeab79>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                result = c.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c8c1cff8f2a943ba8aeb721ed75f5306>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add the count of each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no characters have a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123336,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <0f68a23cd04344c3943750abb5b25dea>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <0f68a23cd04344c3943750abb5b25dea>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c] += 1;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        foreach (var c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <21da16c741744d0383927366b8daffc5>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary of characters and their counts\n        Dictionary<char, int> charCounts = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCounts.ContainsKey(c)) {\n                charCounts[c]++;\n            } else {\n                charCounts.Add(c, 1);\n            }\n        }\n        // Find the first character with a count of 1\n        foreach (char c in str1) {\n            if (charCounts[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123336,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c9b4c2d77c5c421ab4b359e9a8207133>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        foreach (var c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c416ceb84ebe4294a0fc443037d45f88>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0387ca9cdf7b4e43930b3721ac5e961b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (var c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1994cd3aa04b46e0b449f7c080ac583c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to hold the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it and set the count to 1\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // If the character is in the dictionary, increment the count\n            else {\n                charCount[c]++;\n            }\n        }\n        // Iterate through the string again\n        foreach (char c in str1) {\n            // If the character has a count of 1, return it\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123336,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <dcf3af744cbc4ee9ae26b08873c1de5c>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <dcf3af744cbc4ee9ae26b08873c1de5c>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        foreach (var c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c416ceb84ebe4294a0fc443037d45f88>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Write your code here\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (charCount.ContainsKey(str1[i])) {\n                charCount[str1[i]] += 1;\n            } else {\n                charCount.Add(str1[i], 1);\n            }\n        }\n        for (int i = 0; i < str1.Length; i++) {\n            if (charCount[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123336,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1a249f87cfa747108a3810ae35b7637d>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (KeyValuePair<char, int> kvp in dict) {\n            if (kvp.Value == 1) {\n                result = kvp.Key.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123336,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9f32ab352def4300a1e11171f025cab6>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        char[] charArr = str1.ToCharArray();\n        int[] charCount = new int[charArr.Length];\n        for (int i = 0; i < charArr.Length; i++) {\n            for (int j = 0; j < charArr.Length; j++) {\n                if (charArr[i] == charArr[j]) {\n                    charCount[i]++;\n                }\n            }\n        }\n        for (int i = 0; i < charArr.Length; i++) {\n            if (charCount[i] == 1) {\n                return charArr[i].ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123336,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c2255fbae57140f8a17c10f4a4dd7454>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c] += 1;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123336,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e5b6d14f26844c4984252f84172dd5fd>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate over the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate over the string again and return the first character with a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no characters have a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123336,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <ae3195244b1940e9923b51258c36b13d>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <ae3195244b1940e9923b51258c36b13d>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        char[] str = str1.ToCharArray();\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        for (int i = 0; i < str.Length; i++) {\n            if (dict.ContainsKey(str[i])) {\n                dict[str[i]]++;\n            } else {\n                dict.Add(str[i], 1);\n            }\n        }\n        for (int i = 0; i < str.Length; i++) {\n            if (dict[str[i]] == 1) {\n                return str[i].ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123336,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9bdaa419532047f18202b9417aac10b2>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character is not in the dictionary, add it\n            if (!charCount.ContainsKey(str1[i])) {\n                charCount.Add(str1[i], 1);\n            }\n            // Otherwise, increment the count\n            else {\n                charCount[str1[i]]++;\n            }\n        }\n        // Iterate through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character count is 1, return the character\n            if (charCount[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123336,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <b24957094b514ca38a248b31ee54cbe8>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <b24957094b514ca38a248b31ee54cbe8>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount[c] = 1;\n            }\n        }\n        foreach (var c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123336,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <739e233a85de4830b8cb2e797f832b61>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to keep track of the number of times each character appears\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it with a count of 1\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            } else {\n                // If the character is in the dictionary, increment the count\n                charCount[c]++;\n            }\n        }\n        // Iterate through the string again\n        foreach (char c in str1) {\n            // If the character count is 1, return the character\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no characters have a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123336,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <3eaccb3ac6df4c59b9143892658054a2>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <3eaccb3ac6df4c59b9143892658054a2>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            }\n            else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123336,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <be1e18cf39f74e80ba1b13ba106e84ce>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the characters and their counts.\n        Dictionary<char, int> charCounts = new Dictionary<char, int>();\n        // Iterate through the string and add each character to the dictionary.\n        foreach (char c in str1) {\n            if (charCounts.ContainsKey(c)) {\n                charCounts[c] += 1;\n            } else {\n                charCounts.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that only appears once.\n        foreach (char c in str1) {\n            if (charCounts[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character appears only once, return null.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123336,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <1c6d725e9e3c40fbba546660347449e4>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <1c6d725e9e3c40fbba546660347449e4>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the number of times each character appears\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that appears only once\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123336,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f686ce479ee64967a2077afd3f56fd31>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and the number of times it appears in the string\n        Dictionary<char, int> charDict = new Dictionary<char, int>();\n        // Loop through the string and add the character to the dictionary if it doesn't exist, otherwise increment the value\n        foreach (char c in str1) {\n            if (charDict.ContainsKey(c)) {\n                charDict[c] += 1;\n            } else {\n                charDict.Add(c, 1);\n            }\n        }\n        // Loop through the string again and return the first character that has a value of 1 in the dictionary\n        foreach (char c in str1) {\n            if (charDict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a value of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123336,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <6af54e9b7960472baa4370a24223aca4>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <6af54e9b7960472baa4370a24223aca4>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e3f423c48ec34f26a60ab84f3923dc5b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (charCount.ContainsKey(str1[i])) {\n                charCount[str1[i]]++;\n            } else {\n                charCount.Add(str1[i], 1);\n            }\n        }\n        foreach (KeyValuePair<char, int> kvp in charCount) {\n            if (kvp.Value == 1) {\n                result = kvp.Key.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123336,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e0137165c89c4707b0825372761699c2>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n\n        // Iterate through the string and add the character to the dictionary\n        // If the character already exists in the dictionary, increment the count\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123336,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <9f7c8b6b3e3a4c5bba0a671440bbe788>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <9f7c8b6b3e3a4c5bba0a671440bbe788>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it with a count of 1\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // Otherwise, increment the count\n            else {\n                charCount[c]++;\n            }\n        }\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the count is 1, return the character\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no characters have a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123336,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e9dbfdcb49f148188e3587799d7cfa37>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e9dbfdcb49f148188e3587799d7cfa37>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        // Iterate through each character in the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it and set the count to 1\n            if (!dict.ContainsKey(c)) {\n                dict.Add(c, 1);\n            }\n            // If the character is in the dictionary, increment the count\n            else {\n                dict[c]++;\n            }\n        }\n        // Iterate through each character in the string\n        foreach (char c in str1) {\n            // If the character is in the dictionary and the count is 1, return the character\n            if (dict.ContainsKey(c) && dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123336,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <75e1069d0c78404f982e20080a76b3ae>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <75e1069d0c78404f982e20080a76b3ae>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                result += c;\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123336,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dfa7082e5a3a4e5290c9a44e0dd24716>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (var c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1994cd3aa04b46e0b449f7c080ac583c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and its count\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add the character to the dictionary\n        // If the character already exists, increment the count\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no characters have a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123336,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8af6bb93bbdd41859bfc0e200999c603>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8af6bb93bbdd41859bfc0e200999c603>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add the character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123336,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7696af82519047339cf25129aa4490c6>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (dict.ContainsKey(str1[i])) {\n                dict[str1[i]] += 1;\n            } else {\n                dict.Add(str1[i], 1);\n            }\n        }\n        foreach (KeyValuePair<char, int> kvp in dict) {\n            if (kvp.Value == 1) {\n                return kvp.Key.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a516c945b85f4b24a9f4c700460f4096>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f703fbf7cc144316a0863c08366211dd>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to hold the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it and set the count to 1\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            } else {\n                // If the character is in the dictionary, increment the count\n                charCount[c]++;\n            }\n        }\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character count is 1, return the character\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no characters have a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <5e52ff129a0c40cb83ac91655e619741>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <5e52ff129a0c40cb83ac91655e619741>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it with a count of 1\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // Otherwise, increment the count of the character\n            else {\n                charCount[c]++;\n            }\n        }\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character count is 1, return the character\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no characters have a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <33a1e43442e9419bb639757728bab586>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <33a1e43442e9419bb639757728bab586>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it and set the count to 1\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // If the character is in the dictionary, increment the count\n            else {\n                charCount[c]++;\n            }\n        }\n        // Iterate through the string again\n        foreach (char c in str1) {\n            // If the character count is 1, return that character\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <33e3b95be1734990ba4b91508836855b>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <33e3b95be1734990ba4b91508836855b>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> d = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (d.ContainsKey(c)) {\n                d[c]++;\n            } else {\n                d[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (d[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <96bb4b2b5af94268b128d094bdc06765>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38f034f41774431c84a73f9bb1b8b45a>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <9b9ad2b2f15a4153ae5afb62e1ba420d>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <9b9ad2b2f15a4153ae5afb62e1ba420d>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <906e6200a86e451bad6e9241af5f3e80>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <906e6200a86e451bad6e9241af5f3e80>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            } else {\n                charCount[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <14ec8ff73a5f4a85b093fd523b72ab44>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and its count\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character is not in the dictionary, add it\n            if (!charCount.ContainsKey(str1[i])) {\n                charCount.Add(str1[i], 1);\n            }\n            // If the character is in the dictionary, increment its count\n            else {\n                charCount[str1[i]]++;\n            }\n        }\n        // Loop through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character is in the dictionary and its count is 1, return it\n            if (charCount.ContainsKey(str1[i]) && charCount[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // If no non-repeating characters are found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <104a8ca8f4154e60824d57f872400699>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <104a8ca8f4154e60824d57f872400699>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> d = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (d.ContainsKey(c)) {\n                d[c]++;\n            } else {\n                d.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (d[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <040a909543334edbb06e34074b627cf8>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it with a count of 1\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // Otherwise, increment the count\n            else {\n                charCount[c]++;\n            }\n        }\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character count is 1, return it\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // Otherwise, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7758bebf4fa6402c8909e0139cb470f4>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7758bebf4fa6402c8909e0139cb470f4>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // Else increment the count\n            else {\n                charCount[c]++;\n            }\n        }\n        // Iterate through the string again\n        foreach (char c in str1) {\n            // If the character count is 1, return it\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <a37f05298a574336a041ca41f6b4ec2a>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <a37f05298a574336a041ca41f6b4ec2a>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and the count\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it and set the count to 1\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // If the character is in the dictionary, increment the count\n            else {\n                charCount[c]++;\n            }\n        }\n        // Loop through the string\n        foreach (char c in str1) {\n            // If the character count is 1, return the character\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <23f3eecd2b2e4f249eb35a781eb9ea81>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <23f3eecd2b2e4f249eb35a781eb9ea81>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var result = \"\";\n        var dict = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (var c in str1) {\n            if (dict[c] == 1) {\n                result = c.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44a58337e4e040c6b9c5ab03f8c9cc7d>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the number of times each character appears in the string\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the string again and return the first character that appears only once\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character appears only once, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <5f34c0cd04cc4478accda6c95f5f1586>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <5f34c0cd04cc4478accda6c95f5f1586>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (var ch in str1) {\n            if (dict.ContainsKey(ch)) {\n                dict[ch]++;\n            } else {\n                dict.Add(ch, 1);\n            }\n        }\n        foreach (var ch in str1) {\n            if (dict[ch] == 1) {\n                return ch.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1c62c72445884255acde2952fb7a92ca>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"No non-repeating characters\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <31e93a648f2e45d2a558dbdb1ed66dca>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e792b1ecd7ed48fbb03652983eceb16f>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e792b1ecd7ed48fbb03652983eceb16f>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (var c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1994cd3aa04b46e0b449f7c080ac583c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to hold the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <673467ae77244439bf0032a1e9ce2fd7>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <673467ae77244439bf0032a1e9ce2fd7>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and its count\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        // Iterate through the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it\n            if (!dict.ContainsKey(c)) {\n                dict.Add(c, 1);\n            }\n            // Otherwise, increment the count\n            else {\n                dict[c]++;\n            }\n        }\n        // Iterate through the string again\n        foreach (char c in str1) {\n            // If the count of the character is 1, return it\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // Otherwise, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <5da1328a5d604a23a0606dca187ece5d>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <5da1328a5d604a23a0606dca187ece5d>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and the number of times it appears in the string.\n        Dictionary<char, int> charDict = new Dictionary<char, int>();\n        // Loop through the string and add the characters to the dictionary.\n        foreach (char c in str1) {\n            if (charDict.ContainsKey(c)) {\n                charDict[c]++;\n            } else {\n                charDict.Add(c, 1);\n            }\n        }\n        // Loop through the string again and return the first character that has a value of 1 in the dictionary.\n        foreach (char c in str1) {\n            if (charDict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character is found, return null.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <d355face22064fa090a61215e69e6500>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <d355face22064fa090a61215e69e6500>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it with a count of 1\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // If the character is in the dictionary, increment the count\n            else {\n                charCount[c]++;\n            }\n        }\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character count is 1, return the character\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <1cc5cb00e9e34ed9add765cd6edaba8d>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <1cc5cb00e9e34ed9add765cd6edaba8d>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"None\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3d2bcf476a5548458a85d06f28f56f15>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4cb88a5f2a6a4b50a12fa638d686a19b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                result = c.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e3ee239cee804085b7f62a73a3774e62>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If there are no non-repeating characters, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <b17703892d474a169f314f964c31b9b0>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <b17703892d474a169f314f964c31b9b0>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character.\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string and add each character to the dictionary.\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the string again and find the first character that has a count of 1.\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <38477092b5a24097a76bad79b10671ca>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <38477092b5a24097a76bad79b10671ca>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f703fbf7cc144316a0863c08366211dd>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e5c66faf4c95408a998b6f256e8df95e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e5c66faf4c95408a998b6f256e8df95e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through each character in the string\n        foreach(char c in str1) {\n            // If the character is not in the dictionary, add it with a count of 1\n            if(!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // If the character is in the dictionary, increment its count\n            else {\n                charCount[c]++;\n            }\n        }\n        // Iterate through each character in the string\n        foreach(char c in str1) {\n            // If the character has a count of 1, return it\n            if(charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <3b12880a52ad44dfb6a58b32aebfa7c6>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <3b12880a52ad44dfb6a58b32aebfa7c6>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dic = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dic.ContainsKey(c)) {\n                dic[c] += 1;\n            } else {\n                dic.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dic[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123338,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3ee885b6d4444d180c352a5499f14ff>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510137,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c37953c074544b9f80b645c70c48c6b4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    }
  ]
}
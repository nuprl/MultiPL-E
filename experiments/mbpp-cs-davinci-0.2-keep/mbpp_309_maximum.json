{
  "name": "mbpp_309_maximum",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the maximum of two numbers.\n    public static long Maximum(long a, long b) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_309_maximum.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Maximum((5L), (10L)) == (10L));\n    Debug.Assert(Maximum((-1L), (-2L)) == (-1L));\n    Debug.Assert(Maximum((9L), (7L)) == (9L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return Math.Max(a, b);",
    "        return Math.Max(a, b);",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        if (a > b) {\n            return a;\n        }\n        return b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        if (a > b) {\n            return a;\n        } else {\n            return b;\n        }",
    "        return a > b ? a : b;",
    "        return (a > b) ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return Math.Max(a, b);",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return Math.Max(a, b);",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return Math.Max(a, b);",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        if (a > b) {\n            return a;\n        } else {\n            return b;\n        }",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        if (a > b) {\n            return a;\n        } else {\n            return b;\n        }",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return Math.Max(a, b);",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        if (a > b) {\n            return a;\n        } else {\n            return b;\n        }",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        if (a > b) {\n            return a;\n        } else {\n            return b;\n        }",
    "        if (a > b) {\n            return a;\n        } else {\n            return b;\n        }",
    "        if (a > b) {\n            return a;\n        }\n        return b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        if (a > b) {\n            return a;\n        } else {\n            return b;\n        }",
    "        return Math.Max(a, b);",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return (a > b) ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return Math.Max(a, b);",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        if (a > b) {\n            return a;\n        } else {\n            return b;\n        }",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return Math.Max(a, b);",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        if (a > b) {\n            return a;\n        } else {\n            return b;\n        }",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        if (a > b) {\n            return a;\n        } else {\n            return b;\n        }",
    "        return Math.Max(a, b);",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;",
    "        return a > b ? a : b;"
  ]
}
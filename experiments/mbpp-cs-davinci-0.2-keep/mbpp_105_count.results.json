{
  "name": "mbpp_105_count",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_105_count.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        long count = 0;\n        foreach (bool b in lst) {\n            if (b) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        long count = 0;\n        foreach (bool b in lst) {\n            if (b) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        long count = 0;\n        foreach (bool b in lst) {\n            if (b) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        long count = 0;\n        foreach(bool b in lst) {\n            if(b) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        long count = 0;\n        foreach (bool b in lst) {\n            if (b) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x == true);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        long count = 0;\n        foreach (bool b in lst) {\n            if (b) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        long count = 0;\n        foreach (bool b in lst) {\n            if (b) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x == true);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        long count = 0;\n        foreach (bool b in lst) {\n            if (b) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        long count = 0;\n        foreach (bool b in lst) {\n            if (b) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        long count = 0;\n        foreach (bool b in lst) {\n            if (b) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        long count = 0;\n        for (int i = 0; i < lst.Count; i++) {\n            if (lst[i]) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        long count = 0;\n        for (int i = 0; i < lst.Count; i++) {\n            if (lst[i]) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        long count = 0;\n        foreach (bool b in lst) {\n            if (b) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        long count = 0;\n        foreach (bool b in lst) {\n            if (b) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x == true);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x == true);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        long count = 0;\n        foreach (bool b in lst) {\n            if (b) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        long count = 0;\n        foreach (bool b in lst) {\n            if (b) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        long count = 0;\n        foreach (bool b in lst) {\n            if (b) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        long count = 0;\n        foreach (bool b in lst) {\n            if (b) {\n                count += 1;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        long count = 0;\n        foreach (bool b in lst) {\n            if (b) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(b => b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        // Your code here\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(b => b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        long count = 0;\n        foreach (bool b in lst) {\n            if (b) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        long count = 0;\n        foreach (bool b in lst) {\n            if (b) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        long count = 0;\n        foreach (bool b in lst) {\n            if (b) count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x == true);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        long count = 0;\n        foreach (bool b in lst) {\n            if (b) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        long count = 0;\n        foreach (bool b in lst) {\n            if (b) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        long count = 0;\n        foreach (bool b in lst) {\n            if (b) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count true booleans in the given list.\n    public static long Count(List<bool> lst) {\n        return lst.Count(x => x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)false, (bool)true}))) == (2L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)false, (bool)false}))) == (0L));\n    Debug.Assert(Count((new List<bool>(new bool[]{(bool)true, (bool)true, (bool)true}))) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
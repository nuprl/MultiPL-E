{
  "name": "mbpp_227_min_of_three",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find minimum of three numbers.\n    public static long MinOfThree(long a, long b, long c) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_227_min_of_three.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(MinOfThree((10L), (20L), (0L)) == (0L));\n    Debug.Assert(MinOfThree((19L), (15L), (18L)) == (15L));\n    Debug.Assert(MinOfThree((-10L), (-20L), (-30L)) == (-30L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return Math.Min(a, Math.Min(b, c));",
    "        return Math.Min(Math.Min(a, b), c);",
    "        return Math.Min(Math.Min(a, b), c);",
    "        if (a < b && a < c) {\n            return a;\n        } else if (b < a && b < c) {\n            return b;\n        } else {\n            return c;\n        }",
    "        return Math.Min(Math.Min(a, b), c);",
    "        return Math.Min(a, Math.Min(b, c));",
    "        return Math.Min(a, Math.Min(b, c));",
    "        return Math.Min(Math.Min(a, b), c);",
    "        return Math.Min(a, Math.Min(b, c));",
    "        return Math.Min(a, Math.Min(b, c));",
    "        return Math.Min(a, Math.Min(b, c));",
    "        return Math.Min(Math.Min(a, b), c);",
    "        return Math.Min(a, Math.Min(b, c));",
    "        return Math.Min(Math.Min(a, b), c);",
    "        return Math.Min(Math.Min(a, b), c);",
    "        return Math.Min(Math.Min(a, b), c);",
    "        return Math.Min(Math.Min(a, b), c);",
    "        return Math.Min(Math.Min(a, b), c);",
    "        return Math.Min(Math.Min(a, b), c);",
    "        return Math.Min(a, Math.Min(b, c));"
  ]
}
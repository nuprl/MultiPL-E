{
  "name": "mbpp_63_max_difference",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the maximum difference between available pairs in the given tuple list.\n    public static long MaxDifference(List<long> test_list) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_63_max_difference.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxDifference((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(3L, 5L), (Tuple<long, long>)Tuple.Create(1L, 7L), (Tuple<long, long>)Tuple.Create(10L, 3L), (Tuple<long, long>)Tuple.Create(1L, 2L)}))) == (7L));\n    Debug.Assert(MaxDifference((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(4L, 6L), (Tuple<long, long>)Tuple.Create(2L, 17L), (Tuple<long, long>)Tuple.Create(9L, 13L), (Tuple<long, long>)Tuple.Create(11L, 12L)}))) == (15L));\n    Debug.Assert(MaxDifference((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(12L, 35L), (Tuple<long, long>)Tuple.Create(21L, 27L), (Tuple<long, long>)Tuple.Create(13L, 23L), (Tuple<long, long>)Tuple.Create(41L, 22L)}))) == (23L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long max_diff = 0;\n        long min_value = test_list[0];\n        for (int i = 1; i < test_list.Count; i++) {\n            if (test_list[i] - min_value > max_diff) {\n                max_diff = test_list[i] - min_value;\n            }\n            if (test_list[i] < min_value) {\n                min_value = test_list[i];\n            }\n        }\n        return max_diff;",
    "        long max_diff = 0;\n        long min_val = test_list[0];\n        for (int i = 1; i < test_list.Count; i++) {\n            max_diff = Math.Max(max_diff, test_list[i] - min_val);\n            min_val = Math.Min(min_val, test_list[i]);\n        }\n        return max_diff;",
    "        long max_diff = 0;\n        long min_val = test_list[0];\n        for (int i = 1; i < test_list.Count; i++) {\n            if (test_list[i] - min_val > max_diff) {\n                max_diff = test_list[i] - min_val;\n            }\n            if (test_list[i] < min_val) {\n                min_val = test_list[i];\n            }\n        }\n        return max_diff;",
    "        long max_diff = 0;\n        long min_value = test_list[0];\n        for (int i = 1; i < test_list.Count; i++) {\n            if (test_list[i] - min_value > max_diff) {\n                max_diff = test_list[i] - min_value;\n            }\n            if (test_list[i] < min_value) {\n                min_value = test_list[i];\n            }\n        }\n        return max_diff;",
    "        long max_difference = 0;\n        long min_value = test_list[0];\n        for (int i = 1; i < test_list.Count; i++) {\n            if (test_list[i] < min_value) {\n                min_value = test_list[i];\n            }\n            if (test_list[i] - min_value > max_difference) {\n                max_difference = test_list[i] - min_value;\n            }\n        }\n        return max_difference;",
    "        // Write your code here\n        long max_diff = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                long diff = test_list[j] - test_list[i];\n                if (diff > max_diff) {\n                    max_diff = diff;\n                }\n            }\n        }\n        return max_diff;",
    "        long max_diff = 0;\n        long min_value = test_list[0];\n        for (int i = 1; i < test_list.Count; i++) {\n            if (test_list[i] - min_value > max_diff) {\n                max_diff = test_list[i] - min_value;\n            }\n            if (test_list[i] < min_value) {\n                min_value = test_list[i];\n            }\n        }\n        return max_diff;",
    "        long max_diff = 0;\n        long min_value = test_list[0];\n        for (int i = 1; i < test_list.Count; i++) {\n            if (test_list[i] - min_value > max_diff) {\n                max_diff = test_list[i] - min_value;\n            }\n            if (test_list[i] < min_value) {\n                min_value = test_list[i];\n            }\n        }\n        return max_diff;",
    "        long max_difference = 0;\n        long current_difference = 0;\n        for (int i = 0; i < test_list.Count - 1; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                current_difference = test_list[j] - test_list[i];\n                if (current_difference > max_difference) {\n                    max_difference = current_difference;\n                }\n            }\n        }\n        return max_difference;",
    "        long max_difference = 0;\n        long min_value = test_list[0];\n        for (int i = 1; i < test_list.Count; i++) {\n            if (test_list[i] - min_value > max_difference) {\n                max_difference = test_list[i] - min_value;\n            }\n            if (test_list[i] < min_value) {\n                min_value = test_list[i];\n            }\n        }\n        return max_difference;",
    "        long max_diff = 0;\n        long min_value = test_list[0];\n        for (int i = 1; i < test_list.Count; i++) {\n            if (test_list[i] - min_value > max_diff) {\n                max_diff = test_list[i] - min_value;\n            }\n            if (test_list[i] < min_value) {\n                min_value = test_list[i];\n            }\n        }\n        return max_diff;",
    "        long max_diff = 0;\n        long min_value = test_list[0];\n        for (int i = 1; i < test_list.Count; i++) {\n            if (test_list[i] - min_value > max_diff) {\n                max_diff = test_list[i] - min_value;\n            }\n            if (test_list[i] < min_value) {\n                min_value = test_list[i];\n            }\n        }\n        return max_diff;",
    "        // Write your code here\n        long maxDiff = 0;\n        long min = test_list[0];\n        for (int i = 1; i < test_list.Count; i++) {\n            if (test_list[i] - min > maxDiff) {\n                maxDiff = test_list[i] - min;\n            }\n            if (test_list[i] < min) {\n                min = test_list[i];\n            }\n        }\n        return maxDiff;",
    "        // Your code goes here\n        long max = 0;\n        long min = test_list[0];\n        for (int i = 1; i < test_list.Count; i++) {\n            if (test_list[i] < min) {\n                min = test_list[i];\n            }\n            if (test_list[i] - min > max) {\n                max = test_list[i] - min;\n            }\n        }\n        return max;",
    "        long max_diff = 0;\n        long min_value = test_list[0];\n        for (int i = 1; i < test_list.Count; i++) {\n            long diff = test_list[i] - min_value;\n            if (diff > max_diff) {\n                max_diff = diff;\n            }\n            if (test_list[i] < min_value) {\n                min_value = test_list[i];\n            }\n        }\n        return max_diff;",
    "        // Your code goes here.\n        long max_diff = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                long diff = test_list[j] - test_list[i];\n                if (diff > max_diff) {\n                    max_diff = diff;\n                }\n            }\n        }\n        return max_diff;",
    "        long max_diff = 0;\n        long min_value = test_list[0];\n        for (int i = 1; i < test_list.Count; i++) {\n            if (test_list[i] - min_value > max_diff) {\n                max_diff = test_list[i] - min_value;\n            }\n            if (test_list[i] < min_value) {\n                min_value = test_list[i];\n            }\n        }\n        return max_diff;",
    "        long max_diff = 0;\n        long min_val = test_list[0];\n        for (int i = 1; i < test_list.Count; i++) {\n            if (test_list[i] < min_val) {\n                min_val = test_list[i];\n            }\n            else if (test_list[i] - min_val > max_diff) {\n                max_diff = test_list[i] - min_val;\n            }\n        }\n        return max_diff;",
    "        long max_difference = 0;\n        long min_value = test_list[0];\n        for (int i = 1; i < test_list.Count; i++) {\n            if (test_list[i] - min_value > max_difference) {\n                max_difference = test_list[i] - min_value;\n            }\n            if (test_list[i] < min_value) {\n                min_value = test_list[i];\n            }\n        }\n        return max_difference;",
    "        long max_diff = 0;\n        long min_value = test_list[0];\n        for (int i = 1; i < test_list.Count; i++) {\n            if (test_list[i] - min_value > max_diff) {\n                max_diff = test_list[i] - min_value;\n            }\n            if (test_list[i] < min_value) {\n                min_value = test_list[i];\n            }\n        }\n        return max_diff;"
  ]
}
{
  "name": "mbpp_292_find",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long Find(long n, long m) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_292_find.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Find((10L), (3L)) == (3L));\n    Debug.Assert(Find((4L), (2L)) == (2L));\n    Debug.Assert(Find((20L), (5L)) == (4L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return (long)Math.Floor((double)n / m);",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return (long)Math.Floor((double)n / m);",
    "        return (long)Math.Floor((double)n / m);",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return (long)Math.Floor((double)n / m);",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return (long)Math.Floor((double)n / m);",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return (long)Math.Floor((double)n / m);",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return (long)Math.Floor((double)n / m);",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return (long)Math.Floor((double)n / m);",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return (long)Math.Floor((double)n / m);",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return (long)Math.Floor((double)n / m);",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return (long)Math.Floor((double)n / m);",
    "        return n / m;",
    "        return n / m;",
    "        return (long)Math.Floor((double)n / m);",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return (long)Math.Floor((double)n / m);",
    "        // Write your code here\n        return n / m;",
    "        return n / m;",
    "        return (long)Math.Floor((double)n / m);",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return (long)Math.Floor((double)n / m);",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return (long)Math.Floor((double)n / m);",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return n / m;",
    "        return (long)Math.Floor((double)n / m);",
    "        return n / m;"
  ]
}
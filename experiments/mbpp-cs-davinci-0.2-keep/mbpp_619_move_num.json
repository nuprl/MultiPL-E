{
  "name": "mbpp_619_move_num",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_619_move_num.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;",
    "        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;",
    "        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;",
    "        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;",
    "        string nums = \"0123456789\";\n        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (nums.Contains(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!nums.Contains(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;",
    "        string nums = \"\";\n        string chars = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                chars += c;\n            }\n        }\n        return chars + nums;",
    "        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;",
    "        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string nums = \"\";\n        string letters = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                letters += test_str[i];\n            }\n        }\n        return letters + nums;",
    "        StringBuilder sb = new StringBuilder();\n        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                sb2.Append(test_str[i]);\n            } else {\n                sb.Append(test_str[i]);\n            }\n        }\n        return sb.Append(sb2).ToString();",
    "        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        result += nums;\n        return result;",
    "        // Create a new string to hold the result.\n        string result = \"\";\n        // Loop through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the current character is a number, add it to the result.\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        // Loop through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the current character is not a number, add it to the result.\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        // Return the result.\n        return result;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        // Create a new string to store the result.\n        string result = \"\";\n        // Iterate through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // Check if the current character is a number.\n            if (Char.IsNumber(test_str[i])) {\n                // If it is, add it to the result string.\n                result += test_str[i];\n            }\n        }\n        // Iterate through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // Check if the current character is not a number.\n            if (!Char.IsNumber(test_str[i])) {\n                // If it is not, add it to the result string.\n                result += test_str[i];\n            }\n        }\n        // Return the result string.\n        return result;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        StringBuilder sb = new StringBuilder();\n        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                sb2.Append(test_str[i]);\n            } else {\n                sb.Append(test_str[i]);\n            }\n        }\n        return sb.Append(sb2).ToString();",
    "        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string num_str = \"\";\n        string char_str = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (char.IsDigit(test_str[i])) {\n                num_str += test_str[i];\n            } else {\n                char_str += test_str[i];\n            }\n        }\n        return char_str + num_str;",
    "        string nums = \"\";\n        string chars = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                chars += c;\n            }\n        }\n        return chars + nums;",
    "        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        StringBuilder sb = new StringBuilder();\n        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i < test_str.Length; i++) {\n            if (test_str[i] >= '0' && test_str[i] <= '9') {\n                sb2.Append(test_str[i]);\n            } else {\n                sb.Append(test_str[i]);\n            }\n        }\n        return sb.Append(sb2).ToString();",
    "        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        int len = test_str.Length;\n        int[] arr = new int[len];\n        int j = 0;\n        for (int i = 0; i < len; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                arr[j] = test_str[i];\n                j++;\n            }\n        }\n        string str = \"\";\n        for (int i = 0; i < len; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                str += test_str[i];\n            }\n        }\n        for (int i = 0; i < j; i++) {\n            str += arr[i];\n        }\n        return str;",
    "        var sb = new StringBuilder();\n        var nums = new StringBuilder();\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums.Append(c);\n            } else {\n                sb.Append(c);\n            }\n        }\n        return sb.Append(nums.ToString()).ToString();",
    "        var nums = new List<char>();\n        var chars = new List<char>();\n        foreach (var c in test_str) {\n            if (char.IsDigit(c)) {\n                nums.Add(c);\n            } else {\n                chars.Add(c);\n            }\n        }\n        return string.Concat(chars) + string.Concat(nums);",
    "        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;",
    "        string res = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                res += test_str[i];\n            }\n        }\n        return res + num;",
    "        StringBuilder sb = new StringBuilder();\n        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                sb2.Append(test_str[i]);\n            } else {\n                sb.Append(test_str[i]);\n            }\n        }\n        return sb.Append(sb2).ToString();",
    "        string result = \"\";\n        foreach (char c in test_str) {\n            if (char.IsDigit(c)) {\n                result += c;\n            }\n        }\n        foreach (char c in test_str) {\n            if (!char.IsDigit(c)) {\n                result += c;\n            }\n        }\n        return result;",
    "        // Create a new string to store the result.\n        string result = \"\";\n        // Iterate through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the current character is a number, add it to the result.\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        // Iterate through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the current character is not a number, add it to the result.\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        // Return the result.\n        return result;",
    "        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;",
    "        // Create a list of characters\n        List<char> char_list = new List<char>();\n        // Create a list of numbers\n        List<char> num_list = new List<char>();\n        // Iterate through the string\n        foreach (char c in test_str) {\n            // If the character is a number\n            if (Char.IsDigit(c)) {\n                // Add it to the number list\n                num_list.Add(c);\n            }\n            // Otherwise\n            else {\n                // Add it to the character list\n                char_list.Add(c);\n            }\n        }\n        // Add the number list to the character list\n        char_list.AddRange(num_list);\n        // Return the string representation of the character list\n        return new string(char_list.ToArray());",
    "        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;",
    "        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        int i = 0, j = test_str.Length - 1;\n        char[] test_arr = test_str.ToCharArray();\n        while (i < j) {\n            while (i < j && !Char.IsDigit(test_arr[i])) {\n                i++;\n            }\n            while (i < j && !Char.IsDigit(test_arr[j])) {\n                j--;\n            }\n            if (i < j) {\n                char temp = test_arr[i];\n                test_arr[i] = test_arr[j];\n                test_arr[j] = temp;\n                i++;\n                j--;\n            }\n        }\n        return new string(test_arr);",
    "        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;",
    "        // Create a new string to hold the result\n        string result = \"\";\n        // Create a new string to hold the numbers\n        string nums = \"\";\n        // Iterate through the string\n        foreach (char c in test_str) {\n            // If the character is a number, add it to the nums string\n            if (Char.IsDigit(c)) {\n                nums += c;\n            }\n            // Otherwise, add it to the result string\n            else {\n                result += c;\n            }\n        }\n        // Return the result string with the numbers appended to the end\n        return result + nums;",
    "        StringBuilder sb = new StringBuilder();\n        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                sb2.Append(test_str[i]);\n            } else {\n                sb.Append(test_str[i]);\n            }\n        }\n        return sb.ToString() + sb2.ToString();",
    "        string nums = \"\";\n        string letters = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                letters += test_str[i];\n            }\n        }\n        return letters + nums;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        StringBuilder sb = new StringBuilder();\n        StringBuilder nums = new StringBuilder();\n        foreach (char c in test_str) {\n            if (char.IsDigit(c)) {\n                nums.Append(c);\n            } else {\n                sb.Append(c);\n            }\n        }\n        return sb.Append(nums).ToString();",
    "        string num = \"\";\n        string str = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                str += test_str[i];\n            }\n        }\n        return str + num;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;",
    "        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;",
    "        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;",
    "        var nums = new List<int>();\n        var chars = new List<char>();\n        foreach (var c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums.Add(c - '0');\n            } else {\n                chars.Add(c);\n            }\n        }\n        return new string(chars.ToArray()) + new string(nums.Select(x => (char)(x + '0')).ToArray());",
    "        string result = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                result += c;\n            }\n        }\n        foreach (char c in test_str) {\n            if (!Char.IsDigit(c)) {\n                result += c;\n            }\n        }\n        return result;",
    "        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;",
    "        // Create a new string to hold the result.\n        string result = \"\";\n        // Loop through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is a number, add it to the result.\n            if (Char.IsNumber(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        // Loop through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is not a number, add it to the result.\n            if (!Char.IsNumber(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        // Return the result.\n        return result;",
    "        string nums = \"\";\n        string chars = \"\";\n        foreach (char c in test_str) {\n            if (c >= '0' && c <= '9') {\n                nums += c;\n            } else {\n                chars += c;\n            }\n        }\n        return chars + nums;",
    "        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;",
    "        // Create a new string to store the result\n        string result = \"\";\n        // Loop through the string\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is a number\n            if (Char.IsDigit(test_str[i])) {\n                // Add it to the end of the result\n                result += test_str[i];\n            }\n        }\n        // Loop through the string\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is not a number\n            if (!Char.IsDigit(test_str[i])) {\n                // Add it to the end of the result\n                result += test_str[i];\n            }\n        }\n        // Return the result\n        return result;",
    "        // Create a list of characters to store the result.\n        List<char> result = new List<char>();\n        // Create a list of characters to store the numbers.\n        List<char> nums = new List<char>();\n        // Iterate through the string.\n        foreach (char c in test_str) {\n            // If the character is a number, add it to the list of numbers.\n            if (Char.IsNumber(c)) {\n                nums.Add(c);\n            } else {\n                // Otherwise, add it to the result.\n                result.Add(c);\n            }\n        }\n        // Add the numbers to the result.\n        result.AddRange(nums);\n        // Return the result as a string.\n        return new string(result.ToArray());",
    "        // Get the length of the string\n        int len = test_str.Length;\n        // Create a new string to store the result\n        string result = \"\";\n        // Loop through the string\n        for (int i = 0; i < len; i++) {\n            // If the character is a number, add it to the result\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        // Loop through the string again\n        for (int i = 0; i < len; i++) {\n            // If the character is not a number, add it to the result\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        // Return the result\n        return result;",
    "        // Create a list of strings to store the non-numeric characters.\n        List<string> non_num = new List<string>();\n        // Create a list of strings to store the numeric characters.\n        List<string> num = new List<string>();\n        // Iterate through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is a number, add it to the list of numbers.\n            if (Char.IsNumber(test_str[i])) {\n                num.Add(test_str[i].ToString());\n            }\n            // If the character is not a number, add it to the list of non-numbers.\n            else {\n                non_num.Add(test_str[i].ToString());\n            }\n        }\n        // Create a string builder to store the final string.\n        StringBuilder final = new StringBuilder();\n        // Add the non-numeric characters to the string builder.\n        foreach (string s in non_num) {\n            final.Append(s);\n        }\n        // Add the numeric characters to the string builder.\n        foreach (string s in num) {\n            final.Append(s);\n        }\n        // Return the final string.\n        return final.ToString();",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;",
    "        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string result = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                result += c;\n            }\n        }\n        foreach (char c in test_str) {\n            if (!Char.IsDigit(c)) {\n                result += c;\n            }\n        }\n        return result;",
    "        // Create a new string to hold the result.\n        string result = \"\";\n        // Create a new string to hold the numbers.\n        string nums = \"\";\n        // Iterate through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the current character is a number, add it to the numbers string.\n            if (Char.IsNumber(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                // Otherwise, add it to the result string.\n                result += test_str[i];\n            }\n        }\n        // Return the result string with the numbers string appended to the end.\n        return result + nums;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string num_str = \"\";\n        string char_str = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num_str += test_str[i];\n            } else {\n                char_str += test_str[i];\n            }\n        }\n        return char_str + num_str;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;",
    "        string result = \"\";\n        string num = \"\";\n        string str = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                str += test_str[i];\n            }\n        }\n        result = str + num;\n        return result;",
    "        string result = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                result += c;\n            }\n        }\n        foreach (char c in test_str) {\n            if (!Char.IsDigit(c)) {\n                result += c;\n            }\n        }\n        return result;",
    "        string res = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                res += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                res += test_str[i];\n            }\n        }\n        return res;",
    "        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;",
    "        string result = \"\";\n        string num = \"\";\n        string alpha = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                alpha += test_str[i];\n            }\n        }\n        result = alpha + num;\n        return result;",
    "        string result = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                result += c;\n            }\n        }\n        foreach (char c in test_str) {\n            if (!Char.IsDigit(c)) {\n                result += c;\n            }\n        }\n        return result;",
    "        // Convert string to char array\n        char[] test_arr = test_str.ToCharArray();\n        // Create a new string to store the result\n        string result = \"\";\n        // Iterate through the char array\n        for (int i = 0; i < test_arr.Length; i++) {\n            // If the current char is a number, add it to the result string\n            if (Char.IsNumber(test_arr[i])) {\n                result += test_arr[i];\n            }\n        }\n        // Iterate through the char array\n        for (int i = 0; i < test_arr.Length; i++) {\n            // If the current char is not a number, add it to the result string\n            if (!Char.IsNumber(test_arr[i])) {\n                result += test_arr[i];\n            }\n        }\n        // Return the result\n        return result;",
    "        string result = \"\";\n        int i = 0;\n        int j = 0;\n        while (i < test_str.Length) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n                i++;\n            } else {\n                result = test_str[i] + result;\n                i++;\n            }\n        }\n        return result;",
    "        string result = \"\";\n        string num_str = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num_str += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num_str;",
    "        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;",
    "        // Create a new string to store the result.\n        string result = \"\";\n        // Loop through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is a number, add it to the result string.\n            if (char.IsNumber(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        // Loop through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is not a number, add it to the result string.\n            if (!char.IsNumber(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        // Return the result string.\n        return result;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;",
    "        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;",
    "        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;",
    "        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;",
    "        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;",
    "        // Create a new string to store the output.\n        string output = \"\";\n        // Iterate through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is a number, add it to the output string.\n            if (Char.IsNumber(test_str[i])) {\n                output += test_str[i];\n            }\n        }\n        // Iterate through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is not a number, add it to the output string.\n            if (!Char.IsNumber(test_str[i])) {\n                output += test_str[i];\n            }\n        }\n        // Return the output string.\n        return output;",
    "        // Write your code here\n        return \"\";",
    "        string nums = \"\";\n        string chars = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                chars += c;\n            }\n        }\n        return chars + nums;",
    "        // Create a list of characters\n        List<char> char_list = new List<char>();\n        // Create a list of numbers\n        List<char> num_list = new List<char>();\n        // Iterate through the string\n        foreach (char c in test_str) {\n            // If the character is a number\n            if (Char.IsNumber(c)) {\n                // Add it to the number list\n                num_list.Add(c);\n            } else {\n                // Add it to the character list\n                char_list.Add(c);\n            }\n        }\n        // Add the number list to the character list\n        char_list.AddRange(num_list);\n        // Return the string\n        return new string(char_list.ToArray());",
    "        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            }\n            else {\n                result += test_str[i];\n            }\n        }\n        return result + num;",
    "        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;",
    "        string nums = \"\";\n        string letters = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                letters += test_str[i];\n            }\n        }\n        return letters + nums;",
    "        StringBuilder sb = new StringBuilder();\n        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                sb2.Append(test_str[i]);\n            } else {\n                sb.Append(test_str[i]);\n            }\n        }\n        return sb.Append(sb2).ToString();",
    "        // Create a new string to hold the result.\n        string result = \"\";\n        // Loop through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is a number, add it to the result.\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        // Loop through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is not a number, add it to the result.\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        // Return the result.\n        return result;",
    "        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            }\n            else {\n                result += test_str[i];\n            }\n        }\n        return result + num;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string num = \"\";\n        string alpha = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                alpha += test_str[i];\n            }\n        }\n        return alpha + num;",
    "        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;",
    "        // create a list of chars\n        List<char> chars = new List<char>();\n        // create a list of numbers\n        List<char> nums = new List<char>();\n        // iterate through the string\n        foreach (char c in test_str) {\n            // if the char is a number\n            if (Char.IsNumber(c)) {\n                // add it to the list of numbers\n                nums.Add(c);\n            } else {\n                // add it to the list of chars\n                chars.Add(c);\n            }\n        }\n        // add the chars to the list of numbers\n        nums.AddRange(chars);\n        // return the string\n        return new string(nums.ToArray());",
    "        string res = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                res += test_str[i];\n            }\n        }\n        return res + nums;",
    "        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        // Create a new string to hold the result\n        string result = \"\";\n        // Iterate through the string\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is a number\n            if (Char.IsNumber(test_str[i])) {\n                // Add it to the result\n                result += test_str[i];\n            }\n        }\n        // Iterate through the string\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is not a number\n            if (!Char.IsNumber(test_str[i])) {\n                // Add it to the result\n                result += test_str[i];\n            }\n        }\n        // Return the result\n        return result;",
    "        string nums = \"\";\n        string letters = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                letters += test_str[i];\n            }\n        }\n        return letters + nums;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        StringBuilder sb = new StringBuilder();\n        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i < test_str.Length; i++) {\n            if (test_str[i] >= '0' && test_str[i] <= '9') {\n                sb2.Append(test_str[i]);\n            } else {\n                sb.Append(test_str[i]);\n            }\n        }\n        return sb.Append(sb2).ToString();",
    "        string res = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                res += test_str[i];\n            }\n        }\n        return res + nums;",
    "        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;",
    "        char[] test_arr = test_str.ToCharArray();\n        int i = 0, j = test_arr.Length - 1;\n        while (i < j) {\n            if (Char.IsDigit(test_arr[i])) {\n                if (Char.IsLetter(test_arr[j])) {\n                    char temp = test_arr[i];\n                    test_arr[i] = test_arr[j];\n                    test_arr[j] = temp;\n                    i++;\n                    j--;\n                }\n                else {\n                    j--;\n                }\n            }\n            else {\n                i++;\n            }\n        }\n        return new string(test_arr);",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string nums = \"0123456789\";\n        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (nums.Contains(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!nums.Contains(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;",
    "        // TODO: Implement this function\n        return \"\";",
    "        // Create a string builder to store the result.\n        StringBuilder result = new StringBuilder();\n        // Create a string builder to store the numbers.\n        StringBuilder nums = new StringBuilder();\n        // Iterate through the input string.\n        foreach (char c in test_str) {\n            // If the character is a number, add it to the nums string builder.\n            if (Char.IsDigit(c)) {\n                nums.Append(c);\n            }\n            // Otherwise, add it to the result string builder.\n            else {\n                result.Append(c);\n            }\n        }\n        // Append the numbers to the result string builder.\n        result.Append(nums);\n        // Return the result.\n        return result.ToString();",
    "        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;",
    "        string result = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                result += c;\n            }\n        }\n        foreach (char c in test_str) {\n            if (!Char.IsDigit(c)) {\n                result += c;\n            }\n        }\n        return result;",
    "        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;",
    "        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;",
    "        StringBuilder sb = new StringBuilder();\n        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                sb2.Append(test_str[i]);\n            } else {\n                sb.Append(test_str[i]);\n            }\n        }\n        return sb.Append(sb2).ToString();",
    "        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;",
    "        var sb = new StringBuilder();\n        var nums = new StringBuilder();\n        foreach (var c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums.Append(c);\n            } else {\n                sb.Append(c);\n            }\n        }\n        return sb.Append(nums).ToString();",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        StringBuilder sb = new StringBuilder();\n        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                sb2.Append(test_str[i]);\n            } else {\n                sb.Append(test_str[i]);\n            }\n        }\n        return sb.Append(sb2).ToString();",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string result = \"\";\n        string num = \"\";\n        string alpha = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                num += c;\n            } else {\n                alpha += c;\n            }\n        }\n        result = alpha + num;\n        return result;",
    "        // Initialize a string builder to hold the result.\n        StringBuilder result = new StringBuilder();\n        // Initialize a string builder to hold the numbers.\n        StringBuilder nums = new StringBuilder();\n        // Iterate through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is a number, add it to the nums string builder.\n            if (Char.IsNumber(test_str[i])) {\n                nums.Append(test_str[i]);\n            }\n            // Otherwise, add it to the result string builder.\n            else {\n                result.Append(test_str[i]);\n            }\n        }\n        // Append the numbers to the result.\n        result.Append(nums);\n        // Return the result.\n        return result.ToString();",
    "        string result = \"\";\n        foreach (char c in test_str) {\n            if (char.IsDigit(c)) {\n                result += c;\n            }\n        }\n        foreach (char c in test_str) {\n            if (!char.IsDigit(c)) {\n                result += c;\n            }\n        }\n        return result;",
    "        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string nums = \"\";\n        string str = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                str += test_str[i];\n            }\n        }\n        return str + nums;",
    "        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;",
    "        int i = 0;\n        int j = test_str.Length - 1;\n        char[] test_arr = test_str.ToCharArray();\n        while (i < j) {\n            if (Char.IsDigit(test_arr[i])) {\n                while (j > i && Char.IsDigit(test_arr[j])) {\n                    j--;\n                }\n                if (j > i) {\n                    char temp = test_arr[i];\n                    test_arr[i] = test_arr[j];\n                    test_arr[j] = temp;\n                }\n            }\n            i++;\n        }\n        return new string(test_arr);",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;",
    "        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;",
    "        // Create an empty string to store the result\n        string result = \"\";\n        // Create an empty string to store the numbers\n        string num = \"\";\n        // Iterate through the string\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is a number\n            if (Char.IsDigit(test_str[i])) {\n                // Add it to the number string\n                num += test_str[i];\n            } else {\n                // Else add it to the result string\n                result += test_str[i];\n            }\n        }\n        // Return the result string with the number string appended to it\n        return result + num;",
    "        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;",
    "        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            }\n            else {\n                result += test_str[i];\n            }\n        }\n        return result + num;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;",
    "        string nums = \"\";\n        string chars = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                chars += c;\n            }\n        }\n        return chars + nums;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string num = \"\";\n        string str = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                str += test_str[i];\n            }\n        }\n        return str + num;",
    "        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;",
    "        StringBuilder sb = new StringBuilder();\n        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                sb2.Append(test_str[i]);\n            } else {\n                sb.Append(test_str[i]);\n            }\n        }\n        return sb.Append(sb2).ToString();",
    "        char[] str = test_str.ToCharArray();\n        int i = 0;\n        int j = str.Length - 1;\n        while (i < j) {\n            if (Char.IsDigit(str[i])) {\n                if (Char.IsLetter(str[j])) {\n                    char temp = str[i];\n                    str[i] = str[j];\n                    str[j] = temp;\n                    i++;\n                    j--;\n                } else {\n                    j--;\n                }\n            } else {\n                i++;\n            }\n        }\n        return new string(str);",
    "        string nums = \"\";\n        string chars = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                chars += c;\n            }\n        }\n        return chars + nums;",
    "        // Create a list of characters.\n        List<char> list = new List<char>();\n        // Create a list of numbers.\n        List<char> nums = new List<char>();\n        // Iterate through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is a number, add it to the list of numbers.\n            if (char.IsDigit(test_str[i])) {\n                nums.Add(test_str[i]);\n            }\n            // Otherwise, add it to the list of characters.\n            else {\n                list.Add(test_str[i]);\n            }\n        }\n        // Add the numbers to the list of characters.\n        list.AddRange(nums);\n        // Return the string.\n        return new string(list.ToArray());",
    "        string nums = \"\";\n        string letters = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                letters += test_str[i];\n            }\n        }\n        return letters + nums;",
    "        string str = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                str += test_str[i];\n            }\n        }\n        return str + num;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (test_str[i] >= '0' && test_str[i] <= '9') {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;",
    "        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;",
    "        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;",
    "        var sb = new StringBuilder();\n        var nums = new StringBuilder();\n        foreach (var c in test_str) {\n            if (char.IsDigit(c)) {\n                nums.Append(c);\n            } else {\n                sb.Append(c);\n            }\n        }\n        return sb.Append(nums).ToString();",
    "        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;",
    "        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;",
    "        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;",
    "        string nums = \"\";\n        string chars = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                chars += c;\n            }\n        }\n        return chars + nums;",
    "        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;",
    "        string res = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                res += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                res += test_str[i];\n            }\n        }\n        return res;",
    "        string result = \"\";\n        int num_count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n                num_count++;\n            }\n        }\n        for (int i = 0; i < test_str.Length - num_count; i++) {\n            result += test_str[i];\n        }\n        return result;",
    "        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;",
    "        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;",
    "        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;",
    "        string result = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                result += c;\n            }\n        }\n        foreach (char c in test_str) {\n            if (!Char.IsDigit(c)) {\n                result += c;\n            }\n        }\n        return result;",
    "        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;",
    "        // create a new string to store the result\n        string result = \"\";\n        // create a new string to store the numbers\n        string nums = \"\";\n        // loop through the string\n        for (int i = 0; i < test_str.Length; i++) {\n            // if the character is a number\n            if (Char.IsDigit(test_str[i])) {\n                // add the number to the nums string\n                nums += test_str[i];\n            }\n            // if the character is not a number\n            else {\n                // add the character to the result string\n                result += test_str[i];\n            }\n        }\n        // return the result string with the numbers appended to the end\n        return result + nums;",
    "        string nums = \"0123456789\";\n        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (nums.Contains(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;",
    "        // Create a new string to hold the result.\n        string result = \"\";\n        // Create a new string to hold the numbers.\n        string nums = \"\";\n        // Loop through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is a number, add it to the nums string.\n            if (Char.IsNumber(test_str[i])) {\n                nums += test_str[i];\n            }\n            // Otherwise, add it to the result string.\n            else {\n                result += test_str[i];\n            }\n        }\n        // Return the result string with the numbers added to the end.\n        return result + nums;",
    "        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;",
    "        string num_str = \"\";\n        string letter_str = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num_str += test_str[i];\n            } else {\n                letter_str += test_str[i];\n            }\n        }\n        return letter_str + num_str;",
    "        int i = 0;\n        int j = test_str.Length - 1;\n        char[] test_arr = test_str.ToCharArray();\n        while (i < j) {\n            if (Char.IsDigit(test_arr[i])) {\n                if (Char.IsLetter(test_arr[j])) {\n                    char temp = test_arr[i];\n                    test_arr[i] = test_arr[j];\n                    test_arr[j] = temp;\n                    i++;\n                    j--;\n                } else {\n                    j--;\n                }\n            } else {\n                i++;\n            }\n        }\n        return new string(test_arr);",
    "        StringBuilder sb = new StringBuilder();\n        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                sb2.Append(test_str[i]);\n            } else {\n                sb.Append(test_str[i]);\n            }\n        }\n        return sb.Append(sb2).ToString();",
    "        string nums = \"\";\n        string chars = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                chars += c;\n            }\n        }\n        return chars + nums;",
    "        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;",
    "        string nums = \"0123456789\";\n        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (nums.Contains(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!nums.Contains(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;",
    "        string num = \"\";\n        string str = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                str += test_str[i];\n            }\n        }\n        return str + num;",
    "        string nums = \"\";\n        string letters = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                letters += c;\n            }\n        }\n        return letters + nums;"
  ]
}
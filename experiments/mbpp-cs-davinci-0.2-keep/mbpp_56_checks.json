{
  "name": "mbpp_56_checks",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_56_checks.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        string s = n.ToString();\n        string r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev + 1 || n == 2 * rev - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        return n == (long)Math.Pow(2, Math.Floor(Math.Log(n, 2))) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == (long.Parse(r) * 2) - 1;",
    "        var r = n.ToString().Reverse().ToArray();\n        var rn = long.Parse(new string(r));\n        return n == 2 * rn - 1;",
    "        var r = Reverse(n);\n        return n == r * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        var rn = long.Parse(r);\n        return n == 2 * rn - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var r = Reverse(n);\n        return n == r * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == (long.Parse(r) * 2) - 1;",
    "        var s = n.ToString();\n        var r = new String(s.Reverse().ToArray());\n        var rn = long.Parse(r);\n        return n == 2 * rn - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var rev = Reverse(n);\n        return n == rev * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        long rev = Reverse(n);\n        return n == rev * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        var rn = long.Parse(r);\n        return n == 2 * rn - 1;",
    "        long rev = 0;\n        long num = n;\n        while (num > 0) {\n            rev = rev * 10 + num % 10;\n            num /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        var rev = Reverse(n);\n        return n == rev * 2 - 1;",
    "        var rev = Reverse(n);\n        return n == rev * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        var rn = long.Parse(r);\n        return n == 2 * rn - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        var r = Reverse(n);\n        return n == 2 * r - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        long rev = Reverse(n);\n        return n == rev * 2 - 1;",
    "        var r = Reverse(n);\n        return n == r * 2 - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r - 1 || n == r + 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        var r = Reverse(n);\n        return n == r * 2 - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        var rn = long.Parse(r);\n        return n == 2 * rn - 1;",
    "        return n == (long)Math.Pow(2, n.ToString().Reverse().Select(x => (int)Char.GetNumericValue(x)).Sum());",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var r = Reverse(n);\n        return n == 2 * r - 1;",
    "        var r = Reverse(n);\n        return n == r * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == (long.Parse(r) * 2) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        return n == (long)((n / 10) + (n % 10) * Math.Pow(10, Math.Floor(Math.Log10(n))));",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        return n == (long)(n / 10) * 9;",
    "        long rev = Reverse(n);\n        return n == 2 * rev - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var r = Reverse(n);\n        return n == r * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var r = Reverse(n);\n        return n == r * 2 - 1;",
    "        var rev = Reverse(n);\n        return n == rev * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        var r = Reverse(n);\n        return n == r * 2 - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        var m = long.Parse(r);\n        return n == 2 * m - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        var rn = long.Parse(r);\n        return n == 2 * rn - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return r == n - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        long rev = 0;\n        long n2 = n;\n        while (n2 > 0) {\n            rev = rev * 10 + n2 % 10;\n            n2 /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        long rev = 0;\n        long num = n;\n        while (num > 0) {\n            rev = rev * 10 + num % 10;\n            num /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        var rn = long.Parse(r);\n        return n == 2 * rn - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        var rn = long.Parse(r);\n        return n == 2 * rn - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var rev = Reverse(n);\n        return n == (rev * 2) - 1;",
    "        long rev = Reverse(n);\n        return n == rev * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        return n == (long)(n.ToString().Reverse().ToArray().Select(x => x.ToString()).Aggregate((a, b) => a + b)) * 2 - 1;",
    "        string s = n.ToString();\n        string r = new string(s.Reverse().ToArray());\n        long rr = long.Parse(r);\n        return n == 2 * rr - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        return n == (long)Math.Pow(2, (int)Math.Log(n, 2) + 1) - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        return n == (long)(n / 10) * 9;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        return n == (long)(n.ToString().Reverse().ToArray().Select(x => x.ToString()).Aggregate((a, b) => a + b)) * 2 - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        long rev = Reverse(n);\n        return n == 2 * rev - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        long r = 0;\n        long nn = n;\n        while (nn > 0) {\n            r = r * 10 + nn % 10;\n            nn /= 10;\n        }\n        return r == n - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = 10 * r + t % 10;\n            t /= 10;\n        }\n        return n == 2 * r - 1;",
    "        var r = Reverse(n);\n        return n == r * 2 - 1;",
    "        long r = 0;\n        long nn = n;\n        while (nn > 0) {\n            r = r * 10 + nn % 10;\n            nn /= 10;\n        }\n        return n == r - 1 || n == 2 * r - 1;",
    "        long r = Reverse(n);\n        return n == (r * 2) - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        var r = Reverse(n);\n        return n == 2 * r - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        var rev = Reverse(n);\n        return n == rev * 2 - 1;",
    "        long r = Reverse(n);\n        return r == n - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        // Convert to string\n        string str = n.ToString();\n        // Reverse string\n        string rev = new string(str.Reverse().ToArray());\n        // Convert back to int\n        long revInt = long.Parse(rev);\n        // Check if n is one less than twice its reverse\n        return n == 2 * revInt - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        long r = Reverse(n);\n        return n == 2*r - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == (2 * long.Parse(r) - 1);",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        long r = 0;\n        long m = n;\n        while (m > 0) {\n            r = r * 10 + m % 10;\n            m /= 10;\n        }\n        return n == 2 * r - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        var rn = long.Parse(r);\n        return n == 2 * rn - 1;",
    "        long reverse = 0;\n        long temp = n;\n        while (temp > 0) {\n            reverse = reverse * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == reverse * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        return n == (n / 10) * 19 - 9;",
    "        return n == (long)(n.ToString().Reverse().ToArray()).ToString().Substring(1);",
    "        return n == (long)Math.Pow(2, Math.Floor(Math.Log(n, 2))) - 1;",
    "        return n == (long)Math.Pow(2, Math.Floor(Math.Log(n, 2)));",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        return n == (long)Math.Floor(n / 10) * 19;",
    "        long r = 0;\n        long n2 = n;\n        while (n2 > 0) {\n            r = r * 10 + n2 % 10;\n            n2 /= 10;\n        }\n        return n == r - 1 || n == r + 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        var r = Reverse(n);\n        return n == r * 2 - 1;",
    "        return n == Reverse(n * 2 - 1);",
    "        return n == (long)(n.ToString().Reverse().ToArray()) * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        return n == (long)Math.Pow(2, Math.Floor(Math.Log(n, 2))) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        return n == (long)(n.ToString().Reverse().Aggregate(\"\", (a, b) => a + b)) * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        var rn = long.Parse(r);\n        return n == 2 * rn - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = Reverse(n);\n        return n == 2*r - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        var m = long.Parse(r);\n        return n == 2 * m - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var r = Reverse(n);\n        return n == 2 * r - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        return n == (long)(n / 10) * 9;",
    "        return n == (long)(n / 10) * 9;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var rev = Reverse(n);\n        return n == rev * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        long r = Reverse(n);\n        return n == 2*r - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        var rn = long.Parse(r);\n        return n == 2 * rn - 1;",
    "        long r = Reverse(n);\n        return n == 2 * r - 1;",
    "        long rev = 0;\n        long num = n;\n        while (num > 0) {\n            rev = rev * 10 + num % 10;\n            num /= 10;\n        }\n        return n == 2 * rev - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r *= 10;\n            r += t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        var rev = Reverse(n);\n        return n == rev * 2 - 1;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;",
    "        var rev = Reverse(n);\n        var twice = n * 2;\n        return twice - 1 == rev;",
    "        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;",
    "        return n == (long)(n.ToString().Reverse().ToArray().Select(x => x.ToString()).Aggregate((a, b) => a + b)) * 2 - 1;",
    "        var r = n.ToString().Reverse().ToArray();\n        return n == long.Parse(new string(r)) * 2 - 1;",
    "        if (n < 10) return false;\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;"
  ]
}
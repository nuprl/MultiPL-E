{
  "name": "mbpp_801_test_three_equal",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_801_test_three_equal.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) return 3;\n        if (x == y || y == z || x == z) return 2;\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return (x == y && y == z) ? 3 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2f10c1446494460d9725830b186cd1ff>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return x == y && y == z ? 3 : x == y || y == z || z == x ? 2 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (z == x) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6f2d040ca7194542b00299450d319a92>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && x == z)\n            return 3;\n        else if (x == y || x == z || y == z)\n            return 2;\n        else\n            return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (z == x) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6f2d040ca7194542b00299450d319a92>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ca66b53ce4b6408f972410a7040907da>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || z == x) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || z == x) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f4fab7a439cf4b53bf683f0755e837e6>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || z == x) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return (x == y ? 1 : 0) + (x == z ? 1 : 0) + (y == z ? 1 : 0);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <26ed894f945447d8b603fa8f0a964b92>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f4fab7a439cf4b53bf683f0755e837e6>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || x == z || y == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || x == z || y == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) count++;\n        if (x == z) count++;\n        if (y == z) count++;\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8cbdf5ef4099471fb27c6919cfd0119d>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || z == x) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f4fab7a439cf4b53bf683f0755e837e6>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || z == x) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return x == y && y == z ? 3 : x == y || y == z || z == x ? 2 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (z == x) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6f2d040ca7194542b00299450d319a92>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return (x == y) && (y == z) ? 3 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <befdb80f13b2474cb740ef82da6bcbd8>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return x == y && y == z ? 3 : x == y || y == z || x == z ? 2 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return x == y && y == z ? 3 : x == y || y == z || x == z ? 2 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f4fab7a439cf4b53bf683f0755e837e6>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return x == y && y == z ? 3 : x == y || y == z || x == z ? 2 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return (x == y) ? ((y == z) ? 3 : 2) : ((y == z) ? 2 : 0);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ca66b53ce4b6408f972410a7040907da>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ca66b53ce4b6408f972410a7040907da>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) return 3;\n        if (x == y || y == z || x == z) return 2;\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return (x == y && y == z) ? 3 : (x == y || y == z || x == z) ? 2 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return (x == y && y == z) ? 1 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c1f55ba8c4344f2eafcbb8a43883f0fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c1f55ba8c4344f2eafcbb8a43883f0fe>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ca66b53ce4b6408f972410a7040907da>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ca66b53ce4b6408f972410a7040907da>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f4fab7a439cf4b53bf683f0755e837e6>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return (x == y) + (y == z) + (z == x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprfvvlzj7.cs(11,16): error CS0019: Operator '+' cannot be applied to operands of type 'bool' and 'bool'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (z == x) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6f2d040ca7194542b00299450d319a92>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return (x == y) && (y == z) ? 3 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <befdb80f13b2474cb740ef82da6bcbd8>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return x == y && y == z ? 3 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <49fed7049c1b41b382bffa9f1fd64507>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return (x == y) + (y == z) + (z == x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprfvvlzj7.cs(11,16): error CS0019: Operator '+' cannot be applied to operands of type 'bool' and 'bool'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return (x == y && y == z) ? 3 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2f10c1446494460d9725830b186cd1ff>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return (x == y) && (y == z) ? 3 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <befdb80f13b2474cb740ef82da6bcbd8>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f4fab7a439cf4b53bf683f0755e837e6>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return x == y && y == z ? 3 : x == y || y == z || z == x ? 2 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        else if (x == y || y == z || x == z) {\n            return 2;\n        }\n        else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || z == x) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) count++;\n        if (x == z) count++;\n        if (y == z) count++;\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8cbdf5ef4099471fb27c6919cfd0119d>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) count++;\n        if (x == z) count++;\n        if (y == z) count++;\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8cbdf5ef4099471fb27c6919cfd0119d>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) count++;\n        if (x == z) count++;\n        if (y == z) count++;\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8cbdf5ef4099471fb27c6919cfd0119d>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && x == z) {\n            return 3;\n        }\n        if (x == y || x == z || y == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || x == z || y == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && x == z) {\n            return 3;\n        } else if (x == y || x == z || y == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && x == z) {\n            return 3;\n        }\n        if (x == y || x == z || y == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return (x == y) ? ((x == z) ? 3 : 2) : ((y == z) ? 2 : 0);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) return 3;\n        if (x == y || y == z || x == z) return 2;\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f4fab7a439cf4b53bf683f0755e837e6>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return (x == y && y == z) ? 3 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2f10c1446494460d9725830b186cd1ff>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ca66b53ce4b6408f972410a7040907da>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f4fab7a439cf4b53bf683f0755e837e6>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return x == y && y == z ? 3 : x == y || y == z || x == z ? 2 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return x == y && y == z ? 3 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <49fed7049c1b41b382bffa9f1fd64507>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f4fab7a439cf4b53bf683f0755e837e6>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f4fab7a439cf4b53bf683f0755e837e6>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f4fab7a439cf4b53bf683f0755e837e6>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z)\n            return 3;\n        else if (x == y || y == z || x == z)\n            return 2;\n        else\n            return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (z == x) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6f2d040ca7194542b00299450d319a92>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return (x == y && y == z) ? 3 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2f10c1446494460d9725830b186cd1ff>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || z == x) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f4fab7a439cf4b53bf683f0755e837e6>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ca66b53ce4b6408f972410a7040907da>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f4fab7a439cf4b53bf683f0755e837e6>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) return 3;\n        if (x == y || y == z || x == z) return 2;\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return (x == y && y == z) ? 3 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2f10c1446494460d9725830b186cd1ff>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (z == x) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6f2d040ca7194542b00299450d319a92>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return x == y && y == z ? 3 : x == y || y == z || z == x ? 2 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return x == y && y == z ? 3 : x == y || y == z || x == z ? 2 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || z == x) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || z == x) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return x == y && y == z ? 3 : x == y || y == z || z == x ? 2 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ca66b53ce4b6408f972410a7040907da>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ca66b53ce4b6408f972410a7040907da>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) count++;\n        if (x == z) count++;\n        if (y == z) count++;\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8cbdf5ef4099471fb27c6919cfd0119d>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ca66b53ce4b6408f972410a7040907da>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) return 3;\n        if (x == y || y == z || x == z) return 2;\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\");\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <91ba85a14e224926ab57b367ce7ca641>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (z == x) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6f2d040ca7194542b00299450d319a92>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count += 1;\n        }\n        if (y == z) {\n            count += 1;\n        }\n        if (x == z) {\n            count += 1;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <92127e9e141745f09ca5f9b360734cbd>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return (x == y && y == z) ? 3 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2f10c1446494460d9725830b186cd1ff>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || x == z || y == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || x == z || y == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f4fab7a439cf4b53bf683f0755e837e6>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_391_convert_list_dictionary",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_391_convert_list_dictionary.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a7a0f09ae10344fba8f4ae27d4fa09c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a7a0f09ae10344fba8f4ae27d4fa09c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> temp = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> temp2 = new Dictionary<string,long>();\n        for(int i = 0; i < l1.Count; i++) {\n            if(temp.ContainsKey(l1[i])) {\n                temp2 = temp[l1[i]];\n                temp2.Add(l2[i], l3[i]);\n                temp[l1[i]] = temp2;\n            } else {\n                temp2 = new Dictionary<string,long>();\n                temp2.Add(l2[i], l3[i]);\n                temp.Add(l1[i], temp2);\n            }\n        }\n        result.Add(temp);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b5c590c0f79c44b88f1b945f9667859e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b5c590c0f79c44b88f1b945f9667859e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!d1.ContainsKey(l1[i])) {\n                d1[l1[i]] = new Dictionary<string,long>();\n            }\n            d1[l1[i]][l2[i]] = l3[i];\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b3827b0e79d248759d11857640c26ecc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b3827b0e79d248759d11857640c26ecc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!d1.ContainsKey(l1[i])) {\n                d1.Add(l1[i], new Dictionary<string,long>());\n            }\n            d1[l1[i]].Add(l2[i], l3[i]);\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3b167345da154f4292613b492bbd51c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3b167345da154f4292613b492bbd51c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2[l2[i]] = l3[i];\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2[l2[i]] = l3[i];\n                d1[l1[i]] = d2;\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38691e1f5c0d43ae9cb2bed86f7d1284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38691e1f5c0d43ae9cb2bed86f7d1284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i],l3[i]);\n        }\n        d1.Add(l1[0],d2);\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4047b69543044ad0b7835d90acb72f3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4047b69543044ad0b7835d90acb72f3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var d = new Dictionary<string,Dictionary<string,long>>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!d.ContainsKey(l1[i])) {\n                d[l1[i]] = new Dictionary<string,long>();\n            }\n            d[l1[i]][l2[i]] = l3[i];\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7ee3661c7dbf4cd58b0da5be03787d02>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7ee3661c7dbf4cd58b0da5be03787d02>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!d.ContainsKey(l1[i])) {\n                d.Add(l1[i], new Dictionary<string,long>());\n            }\n            d[l1[i]].Add(l2[i], l3[i]);\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2492fbd4158f45f98a172f3c906a9c91>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2492fbd4158f45f98a172f3c906a9c91>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2[l2[i]] = l3[i];\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2[l2[i]] = l3[i];\n                d1[l1[i]] = d2;\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38691e1f5c0d43ae9cb2bed86f7d1284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38691e1f5c0d43ae9cb2bed86f7d1284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!d1.ContainsKey(l1[i])) {\n                d1.Add(l1[i], new Dictionary<string,long>());\n            }\n            d1[l1[i]].Add(l2[i], l3[i]);\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3b167345da154f4292613b492bbd51c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3b167345da154f4292613b492bbd51c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n            } else {\n                d2 = new Dictionary<string,long>();\n            }\n            d2[l2[i]] = l3[i];\n            d1[l1[i]] = d2;\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b75e3bf175ab47aa93ab8dff940a8f29>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b75e3bf175ab47aa93ab8dff940a8f29>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        // Create a list of dictionaries\n        List<Dictionary<string,Dictionary<string,long>>> list = new List<Dictionary<string,Dictionary<string,long>>>();\n        // Create a dictionary\n        Dictionary<string,Dictionary<string,long>> dict = new Dictionary<string,Dictionary<string,long>>();\n        // Create a nested dictionary\n        Dictionary<string,long> nestedDict = new Dictionary<string,long>();\n        // Iterate through the lists\n        for (int i = 0; i < l1.Count; i++) {\n            // Add the values to the nested dictionary\n            nestedDict.Add(l2[i], l3[i]);\n            // Add the nested dictionary to the dictionary\n            dict.Add(l1[i], nestedDict);\n            // Add the dictionary to the list\n            list.Add(dict);\n        }\n        // Return the list\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1dd7cf0a88524ab3b77d46a4ec49097b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1dd7cf0a88524ab3b77d46a4ec49097b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> l = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n            Dictionary<string,long> d2 = new Dictionary<string,long>();\n            d2.Add(l2[i], l3[i]);\n            d.Add(l1[i], d2);\n            l.Add(d);\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <15d73e3ba3bb4beaa6a6f10173dd5bee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <15d73e3ba3bb4beaa6a6f10173dd5bee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d.ContainsKey(l1[i])) {\n                d2 = d[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d.Add(l1[i], d2);\n            }\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f21460a73f7241bc9d6f27120c23619e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f21460a73f7241bc9d6f27120c23619e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!d1.ContainsKey(l1[i])) {\n                d1.Add(l1[i], new Dictionary<string,long>());\n            }\n            d1[l1[i]].Add(l2[i], l3[i]);\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3b167345da154f4292613b492bbd51c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3b167345da154f4292613b492bbd51c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            var d = new Dictionary<string,Dictionary<string,long>>();\n            var d2 = new Dictionary<string,long>();\n            d2.Add(l2[i], l3[i]);\n            d.Add(l1[i], d2);\n            result.Add(d);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <918203b15ffd44e088785d6ac11a85f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <918203b15ffd44e088785d6ac11a85f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> dict = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> dict2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            dict2.Add(l2[i], l3[i]);\n            dict.Add(l1[i], dict2);\n        }\n        result.Add(dict);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5a50ead5d7324c288ce9100544ef886a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5a50ead5d7324c288ce9100544ef886a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        // Write your code here.\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for(int i = 0; i < l1.Count; i++) {\n            if(d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i],l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i],l3[i]);\n                d1.Add(l1[i],d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e46d789c46a94c849dc02c48412bdb1e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e46d789c46a94c849dc02c48412bdb1e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            var d = new Dictionary<string,Dictionary<string,long>>();\n            var d2 = new Dictionary<string,long>();\n            d2.Add(l2[i], l3[i]);\n            d.Add(l1[i], d2);\n            result.Add(d);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <918203b15ffd44e088785d6ac11a85f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <918203b15ffd44e088785d6ac11a85f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        // Write your code here\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <95f3d7eb048b49338b8589c71bc9fbe3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <95f3d7eb048b49338b8589c71bc9fbe3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var dict = new Dictionary<string,Dictionary<string,long>>();\n        var dict2 = new Dictionary<string,long>();\n        for(int i = 0; i < l1.Count; i++) {\n            dict2[l2[i]] = l3[i];\n        }\n        dict[l1[0]] = dict2;\n        result.Add(dict);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <02fec937bc5046469a150ef140ee50b9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <02fec937bc5046469a150ef140ee50b9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var dict = new Dictionary<string,Dictionary<string,long>>();\n        var dict2 = new Dictionary<string,long>();\n        for(int i = 0; i < l1.Count; i++) {\n            dict2.Add(l2[i], l3[i]);\n        }\n        for(int i = 0; i < l1.Count; i++) {\n            dict.Add(l1[i], dict2);\n        }\n        result.Add(dict);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <078ece14c35248f9b2faa9c0aef515c8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <078ece14c35248f9b2faa9c0aef515c8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i], l3[i]);\n            d1.Add(l1[i], d2);\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123535,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <202cb2898a734ca1ac2d8cd8cc18469a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <202cb2898a734ca1ac2d8cd8cc18469a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a7a0f09ae10344fba8f4ae27d4fa09c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a7a0f09ae10344fba8f4ae27d4fa09c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            var d = new Dictionary<string,Dictionary<string,long>>();\n            var d2 = new Dictionary<string,long>();\n            d2.Add(l2[i], l3[i]);\n            d.Add(l1[i], d2);\n            result.Add(d);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <918203b15ffd44e088785d6ac11a85f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <918203b15ffd44e088785d6ac11a85f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n            Dictionary<string,long> d2 = new Dictionary<string,long>();\n            d2.Add(l2[i],l3[i]);\n            d1.Add(l1[i],d2);\n            result.Add(d1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123535,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f7d473f29113492d82da6c77c84194f9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f7d473f29113492d82da6c77c84194f9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n            Dictionary<string,long> d2 = new Dictionary<string,long>();\n            d2.Add(l2[i], l3[i]);\n            d1.Add(l1[i], d2);\n            result.Add(d1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123535,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <687a0af92ce2426ba9b8530afdbbd9e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <687a0af92ce2426ba9b8530afdbbd9e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!d.ContainsKey(l1[i])) {\n                d.Add(l1[i], new Dictionary<string,long>());\n            }\n            d[l1[i]].Add(l2[i], l3[i]);\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123536,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4c45310e784846199dedc0b6adb083b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4c45310e784846199dedc0b6adb083b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d1 = new Dictionary<string,long>();\n        for(int i = 0; i < l1.Count; i++) {\n            if(d.ContainsKey(l1[i])) {\n                d1 = d[l1[i]];\n                d1.Add(l2[i],l3[i]);\n                d[l1[i]] = d1;\n            } else {\n                d1.Add(l2[i],l3[i]);\n                d.Add(l1[i],d1);\n            }\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aa8681b820034b8cb622e2fc9534197d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aa8681b820034b8cb622e2fc9534197d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        // Create a list of dictionary to hold the results.\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        // Create a dictionary to hold the results.\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        // Create a dictionary to hold the results.\n        Dictionary<string,long> d1 = new Dictionary<string,long>();\n        // Loop through the list.\n        for(int i = 0; i < l1.Count; i++) {\n            // Check if the key exists in the dictionary.\n            if(d.ContainsKey(l1[i])) {\n                // Check if the key exists in the dictionary.\n                if(d[l1[i]].ContainsKey(l2[i])) {\n                    // Add the value to the dictionary.\n                    d[l1[i]][l2[i]] += l3[i];\n                } else {\n                    // Add the value to the dictionary.\n                    d[l1[i]].Add(l2[i], l3[i]);\n                }\n            } else {\n                // Add the value to the dictionary.\n                d1.Add(l2[i], l3[i]);\n                // Add the value to the dictionary.\n                d.Add(l1[i], d1);\n                // Clear the dictionary.\n                d1.Clear();\n            }\n        }\n        // Add the dictionary to the list.\n        result.Add(d);\n        // Return the list.\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd9e1f72ed584c279495749a81249911>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd9e1f72ed584c279495749a81249911>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var dict = new Dictionary<string,Dictionary<string,long>>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (dict.ContainsKey(l1[i])) {\n                dict[l1[i]].Add(l2[i], l3[i]);\n            } else {\n                dict.Add(l1[i], new Dictionary<string,long>());\n                dict[l1[i]].Add(l2[i], l3[i]);\n            }\n        }\n        result.Add(dict);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <046df163e1f74b05bd662c96dc478546>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <046df163e1f74b05bd662c96dc478546>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i],l3[i]);\n        }\n        d1.Add(l1[0],d2);\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4047b69543044ad0b7835d90acb72f3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4047b69543044ad0b7835d90acb72f3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!d1.ContainsKey(l1[i])) {\n                d1.Add(l1[i], new Dictionary<string,long>());\n            }\n            d1[l1[i]].Add(l2[i], l3[i]);\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3b167345da154f4292613b492bbd51c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3b167345da154f4292613b492bbd51c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i],l3[i]);\n            d1.Add(l1[i],d2);\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <28d57cf06b374dd7a230681c507ddfa4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <28d57cf06b374dd7a230681c507ddfa4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            var d = new Dictionary<string,Dictionary<string,long>>();\n            var d2 = new Dictionary<string,long>();\n            d2.Add(l2[i], l3[i]);\n            d.Add(l1[i], d2);\n            result.Add(d);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <918203b15ffd44e088785d6ac11a85f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <918203b15ffd44e088785d6ac11a85f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d.ContainsKey(l1[i])) {\n                d[l1[i]].Add(l2[i],l3[i]);\n            } else {\n                d2.Add(l2[i],l3[i]);\n                d.Add(l1[i],d2);\n            }\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc6d306f4fcd4914823916ec37987ff0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc6d306f4fcd4914823916ec37987ff0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d.ContainsKey(l1[i])) {\n                d2 = d[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d.Add(l1[i], d2);\n            }\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f21460a73f7241bc9d6f27120c23619e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f21460a73f7241bc9d6f27120c23619e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var d = new Dictionary<string,Dictionary<string,long>>();\n        for (int i = 0; i < l1.Count; i++) {\n            var d2 = new Dictionary<string,long>();\n            d2.Add(l2[i], l3[i]);\n            d.Add(l1[i], d2);\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aaf187a17dc4404dbee5d5fea20ef702>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aaf187a17dc4404dbee5d5fea20ef702>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i], l3[i]);\n        }\n        d1.Add(l1[0], d2);\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77310eae500e4d0591c6cbccf9421f58>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77310eae500e4d0591c6cbccf9421f58>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i],l3[i]);\n            d1.Add(l1[i],d2);\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <28d57cf06b374dd7a230681c507ddfa4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <28d57cf06b374dd7a230681c507ddfa4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d.ContainsKey(l1[i])) {\n                d2 = d[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d.Add(l1[i], d2);\n            }\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f21460a73f7241bc9d6f27120c23619e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f21460a73f7241bc9d6f27120c23619e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        // Create a new list of dictionaries.\n        List<Dictionary<string,Dictionary<string,long>>> l = new List<Dictionary<string,Dictionary<string,long>>>();\n        // Create a new dictionary.\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        // Create a new dictionary.\n        Dictionary<string,long> d1 = new Dictionary<string,long>();\n        // Loop through the list.\n        for (int i = 0; i < l1.Count; i++) {\n            // Add the values to the dictionary.\n            d1.Add(l2[i], l3[i]);\n        }\n        // Add the dictionary to the list.\n        l.Add(d);\n        // Return the list.\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a52a00bcf9f240488d412205800aadc0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a52a00bcf9f240488d412205800aadc0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n            Dictionary<string,long> d2 = new Dictionary<string,long>();\n            d2.Add(l2[i], l3[i]);\n            d.Add(l1[i], d2);\n            result.Add(d);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd59e5810fcf43549cd5fce156508392>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd59e5810fcf43549cd5fce156508392>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d1[l1[i]].Add(l2[i],l3[i]);\n            } else {\n                d2.Add(l2[i],l3[i]);\n                d1.Add(l1[i],d2);\n                d2 = new Dictionary<string,long>();\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ac1bffb4aaa8489c817e027e8f8ac16f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ac1bffb4aaa8489c817e027e8f8ac16f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        // Create a new list of dictionaries\n        List<Dictionary<string,Dictionary<string,long>>> list = new List<Dictionary<string,Dictionary<string,long>>>();\n        // Create a new dictionary\n        Dictionary<string,Dictionary<string,long>> dict = new Dictionary<string,Dictionary<string,long>>();\n        // Create a new dictionary\n        Dictionary<string,long> dict2 = new Dictionary<string,long>();\n        // Loop through the list\n        for(int i = 0; i < l1.Count; i++) {\n            // Add the values to the dictionary\n            dict2.Add(l2[i],l3[i]);\n        }\n        // Add the values to the dictionary\n        dict.Add(l1[0],dict2);\n        // Add the values to the list\n        list.Add(dict);\n        // Return the list\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dc6130a0ecb940b99c11bc89ec97c89e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dc6130a0ecb940b99c11bc89ec97c89e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var d1 = new Dictionary<string,Dictionary<string,long>>();\n        var d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7c247d30a2cf473ca87aa78fec923b2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7c247d30a2cf473ca87aa78fec923b2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n            Dictionary<string,long> d2 = new Dictionary<string,long>();\n            d2.Add(l2[i], l3[i]);\n            d.Add(l1[i], d2);\n            result.Add(d);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd59e5810fcf43549cd5fce156508392>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd59e5810fcf43549cd5fce156508392>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i], l3[i]);\n        }\n        d1.Add(l1[0], d2);\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77310eae500e4d0591c6cbccf9421f58>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77310eae500e4d0591c6cbccf9421f58>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var dic = new Dictionary<string,Dictionary<string,long>>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!dic.ContainsKey(l1[i])) {\n                dic[l1[i]] = new Dictionary<string,long>();\n            }\n            dic[l1[i]][l2[i]] = l3[i];\n        }\n        result.Add(dic);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <89b3aaeba9484e709c244f9030fea0c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <89b3aaeba9484e709c244f9030fea0c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for(int i = 0; i < l1.Count; i++) {\n            if(!d1.ContainsKey(l1[i])) {\n                d1.Add(l1[i], new Dictionary<string,long>());\n            }\n            d1[l1[i]].Add(l2[i], l3[i]);\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123536,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6ef27e03b82a4c12972be4c32efd45ff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6ef27e03b82a4c12972be4c32efd45ff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            Dictionary<string,Dictionary<string,long>> temp = new Dictionary<string,Dictionary<string,long>>();\n            Dictionary<string,long> temp2 = new Dictionary<string,long>();\n            temp2.Add(l2[i],l3[i]);\n            temp.Add(l1[i],temp2);\n            result.Add(temp);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <134e224cd40d4c5d9639e531d10cc126>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <134e224cd40d4c5d9639e531d10cc126>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        // Write your code here\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var dict = new Dictionary<string,Dictionary<string,long>>();\n        var dict2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!dict.ContainsKey(l1[i])) {\n                dict2 = new Dictionary<string,long>();\n                dict2.Add(l2[i], l3[i]);\n                dict.Add(l1[i], dict2);\n            } else {\n                if (!dict[l1[i]].ContainsKey(l2[i])) {\n                    dict[l1[i]].Add(l2[i], l3[i]);\n                }\n            }\n        }\n        result.Add(dict);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3cd239922bf349d79eb7b0c93fc5e9c5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3cd239922bf349d79eb7b0c93fc5e9c5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n            Dictionary<string,long> d2 = new Dictionary<string,long>();\n            d2.Add(l2[i], l3[i]);\n            d1.Add(l1[i], d2);\n            result.Add(d1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123535,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <687a0af92ce2426ba9b8530afdbbd9e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <687a0af92ce2426ba9b8530afdbbd9e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2[l2[i]] = l3[i];\n            d1[l1[i]] = d2;\n            result.Add(d1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <442c1e27d0704254906bc4f9ce75f481>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <442c1e27d0704254906bc4f9ce75f481>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> listDict = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> dict = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> dict2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (dict.ContainsKey(l1[i])) {\n                dict2 = dict[l1[i]];\n                dict2.Add(l2[i],l3[i]);\n                dict[l1[i]] = dict2;\n            } else {\n                dict2 = new Dictionary<string,long>();\n                dict2.Add(l2[i],l3[i]);\n                dict.Add(l1[i],dict2);\n            }\n        }\n        listDict.Add(dict);\n        return listDict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <afb1c6b4b74a47c6a4b6f1c12789d633>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <afb1c6b4b74a47c6a4b6f1c12789d633>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            var d = new Dictionary<string,Dictionary<string,long>>();\n            var d2 = new Dictionary<string,long>();\n            d2.Add(l2[i], l3[i]);\n            d.Add(l1[i], d2);\n            result.Add(d);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <918203b15ffd44e088785d6ac11a85f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <918203b15ffd44e088785d6ac11a85f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!d1.ContainsKey(l1[i])) {\n                d1.Add(l1[i], new Dictionary<string,long>());\n            }\n            d1[l1[i]].Add(l2[i], l3[i]);\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3b167345da154f4292613b492bbd51c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3b167345da154f4292613b492bbd51c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i], l3[i]);\n            d1.Add(l1[i], d2);\n            result.Add(d1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1ca1664ec70e46e79e1baaf30ddb6e89>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1ca1664ec70e46e79e1baaf30ddb6e89>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d.ContainsKey(l1[i])) {\n                d2 = d[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d.Add(l1[i], d2);\n            }\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f21460a73f7241bc9d6f27120c23619e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f21460a73f7241bc9d6f27120c23619e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d.ContainsKey(l1[i])) {\n                d[l1[i]].Add(l2[i],l3[i]);\n            } else {\n                d2.Add(l2[i],l3[i]);\n                d.Add(l1[i],d2);\n            }\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc6d306f4fcd4914823916ec37987ff0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc6d306f4fcd4914823916ec37987ff0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var d1 = new Dictionary<string,Dictionary<string,long>>();\n        var d2 = new Dictionary<string,long>();\n        for(int i = 0; i < l1.Count; i++) {\n            if(!d1.ContainsKey(l1[i])) {\n                d1.Add(l1[i], new Dictionary<string,long>());\n            }\n            d1[l1[i]].Add(l2[i], l3[i]);\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a2b7f45c661e4130a3891e2d20946086>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a2b7f45c661e4130a3891e2d20946086>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!d.ContainsKey(l1[i])) {\n                d.Add(l1[i], new Dictionary<string,long>());\n            }\n            d[l1[i]].Add(l2[i], l3[i]);\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2492fbd4158f45f98a172f3c906a9c91>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2492fbd4158f45f98a172f3c906a9c91>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!d1.ContainsKey(l1[i])) {\n                d1.Add(l1[i], new Dictionary<string,long>());\n            }\n            d1[l1[i]].Add(l2[i], l3[i]);\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3b167345da154f4292613b492bbd51c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3b167345da154f4292613b492bbd51c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n            Dictionary<string,long> d2 = new Dictionary<string,long>();\n            d2.Add(l2[i], l3[i]);\n            d.Add(l1[i], d2);\n            result.Add(d);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd59e5810fcf43549cd5fce156508392>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd59e5810fcf43549cd5fce156508392>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i],l3[i]);\n        }\n        d1.Add(l1[0],d2);\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4047b69543044ad0b7835d90acb72f3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4047b69543044ad0b7835d90acb72f3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> dict = new Dictionary<string,Dictionary<string,long>>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (dict.ContainsKey(l1[i])) {\n                dict[l1[i]].Add(l2[i], l3[i]);\n            } else {\n                dict.Add(l1[i], new Dictionary<string,long>());\n                dict[l1[i]].Add(l2[i], l3[i]);\n            }\n        }\n        result.Add(dict);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1be3d78fe4244c2abe27d3f42c7e9eee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1be3d78fe4244c2abe27d3f42c7e9eee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a7a0f09ae10344fba8f4ae27d4fa09c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a7a0f09ae10344fba8f4ae27d4fa09c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i], l3[i]);\n        }\n        d1.Add(l1[0], d2);\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77310eae500e4d0591c6cbccf9421f58>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77310eae500e4d0591c6cbccf9421f58>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var dict = new Dictionary<string,Dictionary<string,long>>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!dict.ContainsKey(l1[i])) {\n                dict[l1[i]] = new Dictionary<string,long>();\n            }\n            dict[l1[i]][l2[i]] = l3[i];\n        }\n        result.Add(dict);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123536,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <721f3fd08e67468091362aec5a7f8121>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <721f3fd08e67468091362aec5a7f8121>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2[l2[i]] = l3[i];\n            d1[l1[i]] = d2;\n            result.Add(d1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <442c1e27d0704254906bc4f9ce75f481>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <442c1e27d0704254906bc4f9ce75f481>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for(int i = 0; i < l1.Count; i++) {\n            if(d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i],l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i],l3[i]);\n                d1.Add(l1[i],d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123536,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <70aab50be3544f97bdc1579b9d74e319>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <70aab50be3544f97bdc1579b9d74e319>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var d1 = new Dictionary<string,Dictionary<string,long>>();\n        var d2 = new Dictionary<string,long>();\n        for(int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i], l3[i]);\n        }\n        d1.Add(l1[0], d2);\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123535,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <04449eef40c9497f8abb825340d635f8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <04449eef40c9497f8abb825340d635f8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        // Write your code here\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var dict = new Dictionary<string,Dictionary<string,long>>();\n        for(int i = 0; i < l1.Count; i++) {\n            if(!dict.ContainsKey(l1[i])) {\n                dict.Add(l1[i], new Dictionary<string,long>());\n            }\n            dict[l1[i]].Add(l2[i], l3[i]);\n        }\n        result.Add(dict);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <92b182204d4d41f4a1e727a20aa8c8a9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <92b182204d4d41f4a1e727a20aa8c8a9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var d = new Dictionary<string,Dictionary<string,long>>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d.ContainsKey(l1[i])) {\n                d[l1[i]].Add(l2[i], l3[i]);\n            } else {\n                d.Add(l1[i], new Dictionary<string,long>());\n                d[l1[i]].Add(l2[i], l3[i]);\n            }\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <36b557c633f94a859a3e106274133b92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <36b557c633f94a859a3e106274133b92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d1 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d1.Add(l2[i], l3[i]);\n        }\n        d.Add(l1[0], d1);\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd6c10c1f8c54757bf335cdf92ef0532>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd6c10c1f8c54757bf335cdf92ef0532>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2[l2[i]] = l3[i];\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2[l2[i]] = l3[i];\n                d1[l1[i]] = d2;\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38691e1f5c0d43ae9cb2bed86f7d1284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38691e1f5c0d43ae9cb2bed86f7d1284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> dict = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> dict2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (dict.ContainsKey(l1[i])) {\n                dict2 = dict[l1[i]];\n                dict2.Add(l2[i], l3[i]);\n                dict[l1[i]] = dict2;\n            } else {\n                dict2 = new Dictionary<string,long>();\n                dict2.Add(l2[i], l3[i]);\n                dict.Add(l1[i], dict2);\n            }\n        }\n        result.Add(dict);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123535,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <76e85662208a4050bea66d6e4dcee7d7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <76e85662208a4050bea66d6e4dcee7d7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        // Write your code here\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var dict = new Dictionary<string,Dictionary<string,long>>();\n        for(int i=0; i<l1.Count; i++) {\n            if(!dict.ContainsKey(l1[i])) {\n                dict[l1[i]] = new Dictionary<string,long>();\n            }\n            dict[l1[i]][l2[i]] = l3[i];\n        }\n        result.Add(dict);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7191cfea8dee41a3965aa5b6c4424229>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7191cfea8dee41a3965aa5b6c4424229>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> res = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n            Dictionary<string,long> d2 = new Dictionary<string,long>();\n            d2.Add(l2[i], l3[i]);\n            d1.Add(l1[i], d2);\n            res.Add(d1);\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eb14fb4edeea44f1b3899dc602b826ed>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eb14fb4edeea44f1b3899dc602b826ed>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        // Create a new list of dictionaries.\n        List<Dictionary<string,Dictionary<string,long>>> list = new List<Dictionary<string,Dictionary<string,long>>>();\n        // Create a new dictionary.\n        Dictionary<string,Dictionary<string,long>> dict = new Dictionary<string,Dictionary<string,long>>();\n        // Create a new dictionary.\n        Dictionary<string,long> dict2 = new Dictionary<string,long>();\n        // Loop through the first list.\n        for (int i = 0; i < l1.Count; i++) {\n            // Add the first list to the first dictionary.\n            dict.Add(l1[i],dict2);\n            // Add the second list to the second dictionary.\n            dict2.Add(l2[i],l3[i]);\n            // Add the first dictionary to the list.\n            list.Add(dict);\n        }\n        // Return the list.\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <afbee96791474e1098cb5a285a28165e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <afbee96791474e1098cb5a285a28165e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i],l3[i]);\n            d1.Add(l1[i],d2);\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <28d57cf06b374dd7a230681c507ddfa4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <28d57cf06b374dd7a230681c507ddfa4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> dict = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> dict2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (dict.ContainsKey(l1[i])) {\n                dict2 = dict[l1[i]];\n                dict2.Add(l2[i], l3[i]);\n                dict[l1[i]] = dict2;\n            } else {\n                dict2 = new Dictionary<string,long>();\n                dict2.Add(l2[i], l3[i]);\n                dict.Add(l1[i], dict2);\n            }\n        }\n        result.Add(dict);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123535,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <76e85662208a4050bea66d6e4dcee7d7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <76e85662208a4050bea66d6e4dcee7d7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            var d = new Dictionary<string,Dictionary<string,long>>();\n            d.Add(l1[i], new Dictionary<string,long>());\n            d[l1[i]].Add(l2[i], l3[i]);\n            result.Add(d);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <111d355b7d554810b2b015f018a49405>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <111d355b7d554810b2b015f018a49405>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i], l3[i]);\n        }\n        d1.Add(l1[0], d2);\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77310eae500e4d0591c6cbccf9421f58>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77310eae500e4d0591c6cbccf9421f58>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> l = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n            Dictionary<string,long> d2 = new Dictionary<string,long>();\n            d2.Add(l2[i],l3[i]);\n            d.Add(l1[i],d2);\n            l.Add(d);\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d00e4afd6b894ac696c6ab75796490ed>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d00e4afd6b894ac696c6ab75796490ed>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for(int i = 0; i < l1.Count; i++) {\n            if(d.ContainsKey(l1[i])) {\n                d2 = d[l1[i]];\n                d2.Add(l2[i],l3[i]);\n                d[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i],l3[i]);\n                d.Add(l1[i],d2);\n            }\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <23b6910e6d6a4259bbfac74ceea4e62a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <23b6910e6d6a4259bbfac74ceea4e62a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> dict = new Dictionary<string,Dictionary<string,long>>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (dict.ContainsKey(l1[i])) {\n                dict[l1[i]].Add(l2[i], l3[i]);\n            } else {\n                dict.Add(l1[i], new Dictionary<string,long>());\n                dict[l1[i]].Add(l2[i], l3[i]);\n            }\n        }\n        result.Add(dict);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1be3d78fe4244c2abe27d3f42c7e9eee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1be3d78fe4244c2abe27d3f42c7e9eee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> l = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n            Dictionary<string,long> d2 = new Dictionary<string,long>();\n            d2.Add(l2[i],l3[i]);\n            d.Add(l1[i],d2);\n            l.Add(d);\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d00e4afd6b894ac696c6ab75796490ed>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d00e4afd6b894ac696c6ab75796490ed>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> temp = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> temp2 = new Dictionary<string,long>();\n        for(int i = 0; i < l1.Count; i++) {\n            if(temp.ContainsKey(l1[i])) {\n                temp2 = temp[l1[i]];\n                temp2.Add(l2[i],l3[i]);\n                temp[l1[i]] = temp2;\n            } else {\n                temp2 = new Dictionary<string,long>();\n                temp2.Add(l2[i],l3[i]);\n                temp.Add(l1[i],temp2);\n            }\n        }\n        result.Add(temp);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5859aa1874c24ea2bf8fe963071b6597>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5859aa1874c24ea2bf8fe963071b6597>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        // Write your code here\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for(int i=0;i<l1.Count;i++) {\n            if(d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2[l2[i]] = l3[i];\n                d1[l1[i]] = d2;\n            }\n            else {\n                d2 = new Dictionary<string,long>();\n                d2[l2[i]] = l3[i];\n                d1[l1[i]] = d2;\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c2833d1fdac3432c912156cf8e240480>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c2833d1fdac3432c912156cf8e240480>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var d1 = new Dictionary<string,Dictionary<string,long>>();\n        var d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7c247d30a2cf473ca87aa78fec923b2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7c247d30a2cf473ca87aa78fec923b2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i],l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i],l3[i]);\n                d1.Add(l1[i],d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123536,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bab8800aac394b16a45196437ae806ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bab8800aac394b16a45196437ae806ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var dic = new Dictionary<string,Dictionary<string,long>>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!dic.ContainsKey(l1[i])) {\n                dic[l1[i]] = new Dictionary<string,long>();\n            }\n            dic[l1[i]][l2[i]] = l3[i];\n        }\n        result.Add(dic);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <89b3aaeba9484e709c244f9030fea0c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <89b3aaeba9484e709c244f9030fea0c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i], l3[i]);\n            d.Add(l1[i], d2);\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <deda1e5cb4d94ab2aefb0e70cd85907a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <deda1e5cb4d94ab2aefb0e70cd85907a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!d1.ContainsKey(l1[i])) {\n                d1.Add(l1[i], new Dictionary<string,long>());\n            }\n            if (!d1[l1[i]].ContainsKey(l2[i])) {\n                d1[l1[i]].Add(l2[i], l3[i]);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9307de15a5f4452bacaac106e146dc11>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9307de15a5f4452bacaac106e146dc11>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i], l3[i]);\n        }\n        d1.Add(l1[0], d2);\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77310eae500e4d0591c6cbccf9421f58>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77310eae500e4d0591c6cbccf9421f58>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d.ContainsKey(l1[i])) {\n                d2 = d[l1[i]];\n                d2.Add(l2[i],l3[i]);\n                d[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i],l3[i]);\n                d.Add(l1[i],d2);\n            }\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7c347e91544c482ba9cf3405791fa81d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7c347e91544c482ba9cf3405791fa81d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i], l3[i]);\n        }\n        d1.Add(l1[0], d2);\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77310eae500e4d0591c6cbccf9421f58>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77310eae500e4d0591c6cbccf9421f58>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for(int i = 0; i < l1.Count; i++) {\n            if(d.ContainsKey(l1[i])) {\n                d2 = d[l1[i]];\n                d2.Add(l2[i],l3[i]);\n                d[l1[i]] = d2;\n            }\n            else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i],l3[i]);\n                d.Add(l1[i],d2);\n            }\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c99324a742734e4f9192f50a3c10852b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c99324a742734e4f9192f50a3c10852b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i],l3[i]);\n            d.Add(l1[i],d2);\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8bf76ea662774ba2a9b9fa8ebd816076>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8bf76ea662774ba2a9b9fa8ebd816076>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for(int i = 0; i < l1.Count; i++) {\n            if(d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <896f48afa79f4ff98185a722e4754f8e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <896f48afa79f4ff98185a722e4754f8e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var d1 = new Dictionary<string,Dictionary<string,long>>();\n        var d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i], l3[i]);\n            d1.Add(l1[i], d2);\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123535,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b46a5ac74c804d7583e7cd4e1199233d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b46a5ac74c804d7583e7cd4e1199233d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var dict = new Dictionary<string,Dictionary<string,long>>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!dict.ContainsKey(l1[i])) {\n                dict[l1[i]] = new Dictionary<string,long>();\n            }\n            dict[l1[i]][l2[i]] = l3[i];\n        }\n        result.Add(dict);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123536,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <721f3fd08e67468091362aec5a7f8121>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <721f3fd08e67468091362aec5a7f8121>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var d = new Dictionary<string,Dictionary<string,long>>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!d.ContainsKey(l1[i])) {\n                d.Add(l1[i], new Dictionary<string,long>());\n            }\n            d[l1[i]].Add(l2[i], l3[i]);\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123535,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f226b9a0416b44918570ac52a6faafe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f226b9a0416b44918570ac52a6faafe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i],l3[i]);\n            d1.Add(l1[i],d2);\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <28d57cf06b374dd7a230681c507ddfa4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <28d57cf06b374dd7a230681c507ddfa4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var d = new Dictionary<string,Dictionary<string,long>>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d.ContainsKey(l1[i])) {\n                d[l1[i]].Add(l2[i],l3[i]);\n            } else {\n                d.Add(l1[i],new Dictionary<string,long>());\n                d[l1[i]].Add(l2[i],l3[i]);\n            }\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7048d5261fb144b3a9a141d971a3f313>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7048d5261fb144b3a9a141d971a3f313>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n            Dictionary<string,long> d2 = new Dictionary<string,long>();\n            d2.Add(l2[i], l3[i]);\n            d1.Add(l1[i], d2);\n            result.Add(d1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123535,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <687a0af92ce2426ba9b8530afdbbd9e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <687a0af92ce2426ba9b8530afdbbd9e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var d1 = new Dictionary<string,Dictionary<string,long>>();\n        var d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i], l3[i]);\n            d1.Add(l1[i], d2);\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123535,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b46a5ac74c804d7583e7cd4e1199233d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b46a5ac74c804d7583e7cd4e1199233d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> dict = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> dict2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!dict.ContainsKey(l1[i])) {\n                dict.Add(l1[i], new Dictionary<string,long>());\n            }\n            dict[l1[i]].Add(l2[i], l3[i]);\n        }\n        result.Add(dict);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25e847bb5aa34cde816fef2b88f92e11>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25e847bb5aa34cde816fef2b88f92e11>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        // Create a list of dictionaries.\n        List<Dictionary<string,Dictionary<string,long>>> l = new List<Dictionary<string,Dictionary<string,long>>>();\n        // Create a dictionary.\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        // Create a nested dictionary.\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        // Add the first list to the dictionary.\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l1[i],l3[i]);\n        }\n        // Add the nested dictionary to the dictionary.\n        for (int i = 0; i < l2.Count; i++) {\n            d.Add(l2[i],d2);\n        }\n        // Add the dictionary to the list of dictionaries.\n        for (int i = 0; i < l1.Count; i++) {\n            l.Add(d);\n        }\n        // Return the list of dictionaries.\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <72356ff48a584899bd899830a84d9c0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <72356ff48a584899bd899830a84d9c0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var d = new Dictionary<string,Dictionary<string,long>>();\n        for(int i = 0; i < l1.Count; i++) {\n            if(!d.ContainsKey(l1[i])) {\n                d.Add(l1[i], new Dictionary<string,long>());\n            }\n            d[l1[i]].Add(l2[i], l3[i]);\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e3fb2c3f95bf411eb01aaaab7adb4967>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e3fb2c3f95bf411eb01aaaab7adb4967>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for(int i=0;i<l1.Count;i++) {\n            var d = new Dictionary<string,Dictionary<string,long>>();\n            var d2 = new Dictionary<string,long>();\n            d2.Add(l2[i],l3[i]);\n            d.Add(l1[i],d2);\n            result.Add(d);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0bf80cbb51a34fb088590cd49807bd03>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0bf80cbb51a34fb088590cd49807bd03>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var dict = new Dictionary<string,Dictionary<string,long>>();\n        var innerDict = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            innerDict.Add(l2[i], l3[i]);\n            dict.Add(l1[i], innerDict);\n            result.Add(dict);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bc02b090fda1431d8ca4a109c0ad447f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bc02b090fda1431d8ca4a109c0ad447f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var dict = new Dictionary<string,Dictionary<string,long>>();\n        for (int i = 0; i < l1.Count; i++) {\n            var innerDict = new Dictionary<string,long>();\n            innerDict.Add(l2[i], l3[i]);\n            dict.Add(l1[i], innerDict);\n        }\n        result.Add(dict);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <811812c9d22f480c962a630584428a23>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <811812c9d22f480c962a630584428a23>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var dict = new Dictionary<string,Dictionary<string,long>>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!dict.ContainsKey(l1[i])) {\n                dict[l1[i]] = new Dictionary<string,long>();\n            }\n            dict[l1[i]][l2[i]] = l3[i];\n        }\n        result.Add(dict);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123536,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <721f3fd08e67468091362aec5a7f8121>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <721f3fd08e67468091362aec5a7f8121>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!d.ContainsKey(l1[i])) {\n                d.Add(l1[i], new Dictionary<string,long>());\n            }\n            d[l1[i]].Add(l2[i], l3[i]);\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123536,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4c45310e784846199dedc0b6adb083b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4c45310e784846199dedc0b6adb083b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for(int i = 0; i < l1.Count; i++) {\n            var d = new Dictionary<string,Dictionary<string,long>>();\n            var d2 = new Dictionary<string,long>();\n            d2.Add(l2[i],l3[i]);\n            d.Add(l1[i],d2);\n            result.Add(d);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <232ec1dd1f254923bc93280bf27ab2d7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <232ec1dd1f254923bc93280bf27ab2d7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for(int i=0; i<l1.Count; i++) {\n            if(d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i],l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i],l3[i]);\n                d1.Add(l1[i],d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ea77e38191194511bbdc72500ea19b5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ea77e38191194511bbdc72500ea19b5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> dict = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> dict2 = new Dictionary<string,long>();\n        for(int i = 0; i < l1.Count; i++) {\n            if(!dict.ContainsKey(l1[i])) {\n                dict2.Add(l2[i],l3[i]);\n                dict.Add(l1[i],dict2);\n            }\n            else {\n                dict2 = dict[l1[i]];\n                dict2.Add(l2[i],l3[i]);\n                dict[l1[i]] = dict2;\n            }\n        }\n        result.Add(dict);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <49a85e302f5f409c8bcc97b57742d0e2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <49a85e302f5f409c8bcc97b57742d0e2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!d1.ContainsKey(l1[i])) {\n                d1.Add(l1[i], new Dictionary<string,long>());\n            }\n            d1[l1[i]].Add(l2[i], l3[i]);\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3b167345da154f4292613b492bbd51c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3b167345da154f4292613b492bbd51c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d.ContainsKey(l1[i])) {\n                d2 = d[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d.Add(l1[i], d2);\n            }\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f21460a73f7241bc9d6f27120c23619e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f21460a73f7241bc9d6f27120c23619e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d1 = new Dictionary<string,long>();\n        for(int i = 0; i < l1.Count; i++) {\n            if(d.ContainsKey(l1[i])) {\n                d1 = d[l1[i]];\n                d1.Add(l2[i], l3[i]);\n                d[l1[i]] = d1;\n            } else {\n                d1 = new Dictionary<string,long>();\n                d1.Add(l2[i], l3[i]);\n                d.Add(l1[i], d1);\n            }\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e655e60ac56747029f1ff460d9e5f92a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e655e60ac56747029f1ff460d9e5f92a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        // Write your code here\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var dict = new Dictionary<string,Dictionary<string,long>>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (dict.ContainsKey(l1[i])) {\n                dict[l1[i]].Add(l2[i], l3[i]);\n            } else {\n                dict.Add(l1[i], new Dictionary<string,long>());\n                dict[l1[i]].Add(l2[i], l3[i]);\n            }\n        }\n        result.Add(dict);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <11d2e38b5233465a9388d2b69eb62bce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <11d2e38b5233465a9388d2b69eb62bce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var dict = new Dictionary<string,Dictionary<string,long>>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!dict.ContainsKey(l1[i])) {\n                dict.Add(l1[i], new Dictionary<string,long>());\n            }\n            dict[l1[i]].Add(l2[i], l3[i]);\n        }\n        result.Add(dict);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123536,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <091922007a104d14b626a039fd3da04a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <091922007a104d14b626a039fd3da04a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            var d1 = new Dictionary<string,Dictionary<string,long>>();\n            var d2 = new Dictionary<string,long>();\n            d2.Add(l2[i], l3[i]);\n            d1.Add(l1[i], d2);\n            result.Add(d1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4508c6a78ca14c399faa6a371ed1783d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4508c6a78ca14c399faa6a371ed1783d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        for(int i = 0; i < l1.Count; i++) {\n            if(!d.ContainsKey(l1[i])) {\n                d[l1[i]] = new Dictionary<string,long>();\n            }\n            d[l1[i]][l2[i]] = l3[i];\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <79201da22ae5436f9e639e0d0d253a3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <79201da22ae5436f9e639e0d0d253a3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            var d = new Dictionary<string,Dictionary<string,long>>();\n            var d2 = new Dictionary<string,long>();\n            d2.Add(l2[i], l3[i]);\n            d.Add(l1[i], d2);\n            result.Add(d);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <918203b15ffd44e088785d6ac11a85f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <918203b15ffd44e088785d6ac11a85f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i], l3[i]);\n        }\n        d1.Add(l1[0], d2);\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77310eae500e4d0591c6cbccf9421f58>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77310eae500e4d0591c6cbccf9421f58>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            var d = new Dictionary<string,Dictionary<string,long>>();\n            var d2 = new Dictionary<string,long>();\n            d2.Add(l2[i], l3[i]);\n            d.Add(l1[i], d2);\n            result.Add(d);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <918203b15ffd44e088785d6ac11a85f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <918203b15ffd44e088785d6ac11a85f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d.ContainsKey(l1[i])) {\n                d2 = d[l1[i]];\n                d2.Add(l2[i],l3[i]);\n                d[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i],l3[i]);\n                d.Add(l1[i],d2);\n            }\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7c347e91544c482ba9cf3405791fa81d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7c347e91544c482ba9cf3405791fa81d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var d1 = new Dictionary<string,Dictionary<string,long>>();\n        var d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2[l2[i]] = l3[i];\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2[l2[i]] = l3[i];\n                d1[l1[i]] = d2;\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <614b9507ea574a25ac13a493a33b81a0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <614b9507ea574a25ac13a493a33b81a0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n            Dictionary<string,long> d2 = new Dictionary<string,long>();\n            d2.Add(l2[i], l3[i]);\n            d.Add(l1[i], d2);\n            result.Add(d);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd59e5810fcf43549cd5fce156508392>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd59e5810fcf43549cd5fce156508392>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var d1 = new Dictionary<string,Dictionary<string,long>>();\n        var d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i], l3[i]);\n            d1.Add(l1[i], d2);\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123535,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b46a5ac74c804d7583e7cd4e1199233d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b46a5ac74c804d7583e7cd4e1199233d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var d = new Dictionary<string,Dictionary<string,long>>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!d.ContainsKey(l1[i])) {\n                d[l1[i]] = new Dictionary<string,long>();\n            }\n            d[l1[i]][l2[i]] = l3[i];\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7ee3661c7dbf4cd58b0da5be03787d02>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7ee3661c7dbf4cd58b0da5be03787d02>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for(int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i], l3[i]);\n        }\n        d1.Add(l1[0], d2);\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123541,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c89971a8dfb64bb18af7b94135f70ae3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c89971a8dfb64bb18af7b94135f70ae3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> l = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n            Dictionary<string,long> d2 = new Dictionary<string,long>();\n            d2.Add(l2[i], l3[i]);\n            d.Add(l1[i], d2);\n            l.Add(d);\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <15d73e3ba3bb4beaa6a6f10173dd5bee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <15d73e3ba3bb4beaa6a6f10173dd5bee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for(int i=0; i<l1.Count; i++) {\n            if(d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123541,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd47f2dd8f84414babc3032c61c27d9d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd47f2dd8f84414babc3032c61c27d9d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var dict = new Dictionary<string,Dictionary<string,long>>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!dict.ContainsKey(l1[i])) {\n                dict[l1[i]] = new Dictionary<string,long>();\n            }\n            dict[l1[i]][l2[i]] = l3[i];\n        }\n        result.Add(dict);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123536,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <721f3fd08e67468091362aec5a7f8121>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <721f3fd08e67468091362aec5a7f8121>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i], l3[i]);\n        }\n        d1.Add(l1[0], d2);\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77310eae500e4d0591c6cbccf9421f58>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77310eae500e4d0591c6cbccf9421f58>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n            Dictionary<string,long> d2 = new Dictionary<string,long>();\n            d2.Add(l2[i], l3[i]);\n            d.Add(l1[i], d2);\n            result.Add(d);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd59e5810fcf43549cd5fce156508392>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd59e5810fcf43549cd5fce156508392>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d.ContainsKey(l1[i])) {\n                d2 = d[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d.Add(l1[i], d2);\n            }\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f21460a73f7241bc9d6f27120c23619e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f21460a73f7241bc9d6f27120c23619e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i], l3[i]);\n        }\n        d1.Add(l1[0], d2);\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77310eae500e4d0591c6cbccf9421f58>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77310eae500e4d0591c6cbccf9421f58>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for(int i = 0; i < l1.Count; i++) {\n            if(d.ContainsKey(l1[i])) {\n                d2 = d[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d.Add(l1[i], d2);\n            }\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <130073f9ccb94795b5fdc39e46375a9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <130073f9ccb94795b5fdc39e46375a9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i], l3[i]);\n            d1.Add(l1[i], d2);\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123535,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <202cb2898a734ca1ac2d8cd8cc18469a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <202cb2898a734ca1ac2d8cd8cc18469a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2[l2[i]] = l3[i];\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2[l2[i]] = l3[i];\n                d1[l1[i]] = d2;\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38691e1f5c0d43ae9cb2bed86f7d1284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38691e1f5c0d43ae9cb2bed86f7d1284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i], l3[i]);\n        }\n        d1.Add(l1[0], d2);\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77310eae500e4d0591c6cbccf9421f58>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77310eae500e4d0591c6cbccf9421f58>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!d.ContainsKey(l1[i])) {\n                d.Add(l1[i], new Dictionary<string,long>());\n            }\n            d[l1[i]].Add(l2[i], l3[i]);\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2492fbd4158f45f98a172f3c906a9c91>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2492fbd4158f45f98a172f3c906a9c91>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            }\n            else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123541,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eea8da4122954fedb2419faeac68972c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eea8da4122954fedb2419faeac68972c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var d1 = new Dictionary<string,Dictionary<string,long>>();\n        var d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i], l3[i]);\n        }\n        d1.Add(l1[0], d2);\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9d72ec9da83c4310b1b9f53a5014092a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9d72ec9da83c4310b1b9f53a5014092a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n            Dictionary<string,long> d2 = new Dictionary<string,long>();\n            d2.Add(l2[i], l3[i]);\n            d.Add(l1[i], d2);\n            result.Add(d);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd59e5810fcf43549cd5fce156508392>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd59e5810fcf43549cd5fce156508392>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            var d = new Dictionary<string,Dictionary<string,long>>();\n            var d2 = new Dictionary<string,long>();\n            d2.Add(l2[i], l3[i]);\n            d.Add(l1[i], d2);\n            result.Add(d);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <918203b15ffd44e088785d6ac11a85f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <918203b15ffd44e088785d6ac11a85f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for(int i = 0; i < l1.Count; i++) {\n            if(d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2[l2[i]] = l3[i];\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2[l2[i]] = l3[i];\n                d1[l1[i]] = d2;\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123541,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d0b6938cfacb4e8387b9a3f07691d89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d0b6938cfacb4e8387b9a3f07691d89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n            Dictionary<string,long> d2 = new Dictionary<string,long>();\n            d2.Add(l2[i], l3[i]);\n            d.Add(l1[i], d2);\n            result.Add(d);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd59e5810fcf43549cd5fce156508392>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd59e5810fcf43549cd5fce156508392>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var d1 = new Dictionary<string,Dictionary<string,long>>();\n        var d2 = new Dictionary<string,long>();\n        for(int i = 0; i < l1.Count; i++) {\n            if(d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123541,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <64fdca1679824037a1ae1141bbd9982a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <64fdca1679824037a1ae1141bbd9982a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!d.ContainsKey(l1[i])) {\n                d.Add(l1[i], new Dictionary<string,long>());\n            }\n            d[l1[i]].Add(l2[i], l3[i]);\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2492fbd4158f45f98a172f3c906a9c91>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2492fbd4158f45f98a172f3c906a9c91>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var d1 = new Dictionary<string,Dictionary<string,long>>();\n        var d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i], l3[i]);\n        }\n        d1.Add(l1[0], d2);\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9d72ec9da83c4310b1b9f53a5014092a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9d72ec9da83c4310b1b9f53a5014092a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2[l2[i]] = l3[i];\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2[l2[i]] = l3[i];\n                d1[l1[i]] = d2;\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38691e1f5c0d43ae9cb2bed86f7d1284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38691e1f5c0d43ae9cb2bed86f7d1284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var dict = new Dictionary<string,Dictionary<string,long>>();\n        var dict2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            dict2.Add(l2[i],l3[i]);\n            dict.Add(l1[i],dict2);\n            result.Add(dict);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123541,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <745d8e30238f4b6fababc564a5098e75>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <745d8e30238f4b6fababc564a5098e75>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> list = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            Dictionary<string,Dictionary<string,long>> dict = new Dictionary<string,Dictionary<string,long>>();\n            dict.Add(l1[i], new Dictionary<string,long>());\n            dict[l1[i]].Add(l2[i], l3[i]);\n            list.Add(dict);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123541,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <595d302909254a62a6dfe0669f0c6789>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <595d302909254a62a6dfe0669f0c6789>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var d = new Dictionary<string,Dictionary<string,long>>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!d.ContainsKey(l1[i])) {\n                d.Add(l1[i], new Dictionary<string,long>());\n            }\n            d[l1[i]].Add(l2[i], l3[i]);\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123535,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f226b9a0416b44918570ac52a6faafe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f226b9a0416b44918570ac52a6faafe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i], l3[i]);\n        }\n        d1.Add(l1[0], d2);\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77310eae500e4d0591c6cbccf9421f58>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77310eae500e4d0591c6cbccf9421f58>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for(int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i], l3[i]);\n            d1.Add(l1[i], d2);\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123541,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <69fd9f10a8f34cbbaf19afb53c877814>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <69fd9f10a8f34cbbaf19afb53c877814>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> dict = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> dict2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (dict.ContainsKey(l1[i])) {\n                dict2 = dict[l1[i]];\n                dict2.Add(l2[i], l3[i]);\n                dict[l1[i]] = dict2;\n            } else {\n                dict2 = new Dictionary<string,long>();\n                dict2.Add(l2[i], l3[i]);\n                dict.Add(l1[i], dict2);\n            }\n        }\n        result.Add(dict);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123535,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <76e85662208a4050bea66d6e4dcee7d7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <76e85662208a4050bea66d6e4dcee7d7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n            Dictionary<string,long> d2 = new Dictionary<string,long>();\n            d2.Add(l2[i], l3[i]);\n            d1.Add(l1[i], d2);\n            result.Add(d1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123535,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <687a0af92ce2426ba9b8530afdbbd9e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <687a0af92ce2426ba9b8530afdbbd9e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i], l3[i]);\n            d.Add(l1[i], d2);\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <deda1e5cb4d94ab2aefb0e70cd85907a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <deda1e5cb4d94ab2aefb0e70cd85907a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        // Create a nested dictionary.\n        List<Dictionary<string,Dictionary<string,long>>> d = new List<Dictionary<string,Dictionary<string,long>>>();\n        // Iterate over the list.\n        for (int i = 0; i < l1.Count; i++) {\n            // Create a dictionary.\n            Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n            // Create a dictionary.\n            Dictionary<string,long> d2 = new Dictionary<string,long>();\n            // Add the key and value to the dictionary.\n            d2.Add(l2[i],l3[i]);\n            // Add the key and value to the dictionary.\n            d1.Add(l1[i],d2);\n            // Add the dictionary to the list.\n            d.Add(d1);\n        }\n        // Return the list.\n        return d;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123541,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <474a4ce7e45d4296b8dc310c446b5d05>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <474a4ce7e45d4296b8dc310c446b5d05>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> l = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d1 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d1.Add(l2[i], l3[i]);\n        }\n        d.Add(l1[0], d1);\n        l.Add(d);\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123541,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce793cc18393459a952dabafc8e86a00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce793cc18393459a952dabafc8e86a00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n            Dictionary<string,long> d2 = new Dictionary<string,long>();\n            d2.Add(l2[i], l3[i]);\n            d.Add(l1[i], d2);\n            result.Add(d);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd59e5810fcf43549cd5fce156508392>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd59e5810fcf43549cd5fce156508392>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for(int i=0;i<l1.Count;i++) {\n            d2.Add(l2[i],l3[i]);\n        }\n        d1.Add(l1[0],d2);\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123541,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ca69f11cbb8a456c8ccd6c2bfb295319>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ca69f11cbb8a456c8ccd6c2bfb295319>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for(int i = 0; i < l1.Count; i++) {\n            if(!d1.ContainsKey(l1[i])) {\n                d1.Add(l1[i], new Dictionary<string,long>());\n            }\n            d1[l1[i]].Add(l2[i], l3[i]);\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123536,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6ef27e03b82a4c12972be4c32efd45ff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6ef27e03b82a4c12972be4c32efd45ff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var dict = new Dictionary<string,Dictionary<string,long>>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!dict.ContainsKey(l1[i])) {\n                dict[l1[i]] = new Dictionary<string,long>();\n            }\n            dict[l1[i]][l2[i]] = l3[i];\n        }\n        result.Add(dict);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123536,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <721f3fd08e67468091362aec5a7f8121>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <721f3fd08e67468091362aec5a7f8121>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2[l2[i]] = l3[i];\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2[l2[i]] = l3[i];\n                d1[l1[i]] = d2;\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38691e1f5c0d43ae9cb2bed86f7d1284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38691e1f5c0d43ae9cb2bed86f7d1284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (d1.ContainsKey(l1[i])) {\n                d2 = d1[l1[i]];\n                d2.Add(l2[i], l3[i]);\n                d1[l1[i]] = d2;\n            } else {\n                d2 = new Dictionary<string,long>();\n                d2.Add(l2[i], l3[i]);\n                d1.Add(l1[i], d2);\n            }\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76b774dfb8a48ed8ec3a3b7eb354e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var d = new Dictionary<string,Dictionary<string,long>>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!d.ContainsKey(l1[i])) {\n                d.Add(l1[i], new Dictionary<string,long>());\n            }\n            d[l1[i]].Add(l2[i], l3[i]);\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123535,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f226b9a0416b44918570ac52a6faafe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f226b9a0416b44918570ac52a6faafe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> temp = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> temp2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (temp.ContainsKey(l1[i])) {\n                temp2 = temp[l1[i]];\n                temp2.Add(l2[i], l3[i]);\n                temp[l1[i]] = temp2;\n            } else {\n                temp2 = new Dictionary<string,long>();\n                temp2.Add(l2[i], l3[i]);\n                temp.Add(l1[i], temp2);\n            }\n        }\n        result.Add(temp);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123541,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <22adcdb370dd4707a5b8a7a94ddd57b0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <22adcdb370dd4707a5b8a7a94ddd57b0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        // Write your code here\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var dict = new Dictionary<string,Dictionary<string,long>>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!dict.ContainsKey(l1[i])) {\n                dict.Add(l1[i], new Dictionary<string,long>());\n            }\n            dict[l1[i]].Add(l2[i], l3[i]);\n        }\n        result.Add(dict);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123541,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6c1bfd18fd234adb8c42cf2ca0a565fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6c1bfd18fd234adb8c42cf2ca0a565fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d1 = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!d1.ContainsKey(l1[i])) {\n                d1.Add(l1[i], new Dictionary<string,long>());\n            }\n            d1[l1[i]].Add(l2[i], l3[i]);\n        }\n        result.Add(d1);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3b167345da154f4292613b492bbd51c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3b167345da154f4292613b492bbd51c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        for (int i = 0; i < l1.Count; i++) {\n            var d = new Dictionary<string,Dictionary<string,long>>();\n            var d2 = new Dictionary<string,long>();\n            d2.Add(l2[i], l3[i]);\n            d.Add(l1[i], d2);\n            result.Add(d);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <918203b15ffd44e088785d6ac11a85f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <918203b15ffd44e088785d6ac11a85f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        var result = new List<Dictionary<string,Dictionary<string,long>>>();\n        var dic = new Dictionary<string,Dictionary<string,long>>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (!dic.ContainsKey(l1[i])) {\n                dic.Add(l1[i], new Dictionary<string,long>());\n            }\n            dic[l1[i]].Add(l2[i], l3[i]);\n        }\n        result.Add(dic);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123541,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <59a1e7f4e679462ea61c4c0ab835000f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <59a1e7f4e679462ea61c4c0ab835000f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static List<Dictionary<string,Dictionary<string,long>>> ConvertListDictionary(List<string> l1, List<string> l2, List<long> l3) {\n        List<Dictionary<string,Dictionary<string,long>>> result = new List<Dictionary<string,Dictionary<string,long>>>();\n        Dictionary<string,Dictionary<string,long>> d = new Dictionary<string,Dictionary<string,long>>();\n        Dictionary<string,long> d2 = new Dictionary<string,long>();\n        for (int i = 0; i < l1.Count; i++) {\n            d2.Add(l2[i], l3[i]);\n            d.Add(l1[i], d2);\n        }\n        result.Add(d);\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"S001\", (string)\"S002\", (string)\"S003\", (string)\"S004\"})), (new List<string>(new string[]{(string)\"Adina Park\", (string)\"Leyton Marsh\", (string)\"Duncan Boyle\", (string)\"Saim Richards\"})), (new List<long>(new long[]{(long)85L, (long)98L, (long)89L, (long)92L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S001\", new Dictionary<string,long>(){{\"Adina Park\", 85L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S002\", new Dictionary<string,long>(){{\"Leyton Marsh\", 98L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S003\", new Dictionary<string,long>(){{\"Duncan Boyle\", 89L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"S004\", new Dictionary<string,long>(){{\"Saim Richards\", 92L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"abc\", (string)\"def\", (string)\"ghi\", (string)\"jkl\"})), (new List<string>(new string[]{(string)\"python\", (string)\"program\", (string)\"language\", (string)\"programs\"})), (new List<long>(new long[]{(long)100L, (long)200L, (long)300L, (long)400L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"abc\", new Dictionary<string,long>(){{\"python\", 100L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"def\", new Dictionary<string,long>(){{\"program\", 200L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"ghi\", new Dictionary<string,long>(){{\"language\", 300L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"jkl\", new Dictionary<string,long>(){{\"programs\", 400L}}}}}))));\n    Debug.Assert(ConvertListDictionary((new List<string>(new string[]{(string)\"A1\", (string)\"A2\", (string)\"A3\", (string)\"A4\"})), (new List<string>(new string[]{(string)\"java\", (string)\"C\", (string)\"C++\", (string)\"DBMS\"})), (new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L}))).Equals((new List<Dictionary<string,Dictionary<string,long>>>(new Dictionary<string,Dictionary<string,long>>[]{(Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A1\", new Dictionary<string,long>(){{\"java\", 10L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A2\", new Dictionary<string,long>(){{\"C\", 20L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A3\", new Dictionary<string,long>(){{\"C++\", 30L}}}}, (Dictionary<string,Dictionary<string,long>>)new Dictionary<string,Dictionary<string,long>>(){{\"A4\", new Dictionary<string,long>(){{\"DBMS\", 40L}}}}}))));\n    }\n\n}\n",
      "timestamp": 1666123540,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <deda1e5cb4d94ab2aefb0e70cd85907a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <deda1e5cb4d94ab2aefb0e70cd85907a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    }
  ]
}
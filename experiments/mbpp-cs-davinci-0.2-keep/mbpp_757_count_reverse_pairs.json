{
  "name": "mbpp_757_count_reverse_pairs",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\n    public static long CountReversePairs(List<string> test_list) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_757_count_reverse_pairs.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountReversePairs((new List<string>(new string[]{(string)\"julia\", (string)\"best\", (string)\"tseb\", (string)\"for\", (string)\"ailuj\"}))) == (2L));\n    Debug.Assert(CountReversePairs((new List<string>(new string[]{(string)\"geeks\", (string)\"best\", (string)\"for\", (string)\"skeeg\"}))) == (1L));\n    Debug.Assert(CountReversePairs((new List<string>(new string[]{(string)\"makes\", (string)\"best\", (string)\"sekam\", (string)\"for\", (string)\"rof\"}))) == (2L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == Reverse(test_list[j])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == Reverse(test_list[j])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == ReverseString(test_list[j])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        // Your code here\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == new string(test_list[j].Reverse().ToArray())) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == ReverseString(test_list[j])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == Reverse(test_list[j])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == Reverse(test_list[j])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == Reverse(test_list[j])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == ReverseString(test_list[j])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        // Your code here\n        return 0;",
    "        // Your code here\n        return 0;",
    "        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == Reverse(test_list[j])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == Reverse(test_list[j])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == Reverse(test_list[j])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == Reverse(test_list[j])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == Reverse(test_list[j])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        // Your code here\n        return 0;",
    "        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == Reverse(test_list[j])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == Reverse(test_list[j])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == ReverseString(test_list[j])) {\n                    count++;\n                }\n            }\n        }\n        return count;"
  ]
}
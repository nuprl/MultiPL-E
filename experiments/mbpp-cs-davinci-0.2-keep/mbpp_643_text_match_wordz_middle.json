{
  "name": "mbpp_643_text_match_wordz_middle",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that checks if a strings contains 'z', except at the start and end of the word.\n    public static bool TextMatchWordzMiddle(string text) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_643_text_match_wordz_middle.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(TextMatchWordzMiddle((\"pythonzabc.\")) == (true));\n    Debug.Assert(TextMatchWordzMiddle((\"zxyabc.\")) == (false));\n    Debug.Assert(TextMatchWordzMiddle((\"  lang  .\")) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        // Write your code here\n        return false;",
    "        return Regex.IsMatch(text, @\"\\Bz\\B\");",
    "        return text.Contains(\"z\") && text.IndexOf(\"z\") != 0 && text.IndexOf(\"z\") != text.Length - 1;",
    "        return text.Contains(\"z\") && text.IndexOf(\"z\") != 0 && text.LastIndexOf(\"z\") != text.Length - 1;",
    "        return text.Contains(\"z\") && text.IndexOf(\"z\") != 0 && text.LastIndexOf(\"z\") != text.Length - 1;",
    "        bool found = false;\n        for (int i = 1; i < text.Length - 1; i++) {\n            if (text[i] == 'z') {\n                found = true;\n            }\n        }\n        return found;",
    "        if (text.Length < 3) {\n            return false;\n        }\n        for (int i = 1; i < text.Length - 1; i++) {\n            if (text[i] == 'z') {\n                return true;\n            }\n        }\n        return false;",
    "        return text.Contains(\"z\") && !text.StartsWith(\"z\") && !text.EndsWith(\"z\");",
    "        // Your code here\n        return false;",
    "        return text.Contains(\"z\") && text.IndexOf(\"z\") != 0 && text.LastIndexOf(\"z\") != text.Length - 1;",
    "        // TODO: Implement\n        return false;",
    "        return text.Contains(\"z\") && text.IndexOf(\"z\") != 0 && text.LastIndexOf(\"z\") != text.Length - 1;",
    "        // TODO: Implement this function\n        return false;",
    "        return text.Contains(\"z\") && !text.StartsWith(\"z\") && !text.EndsWith(\"z\");",
    "        // Write your code here\n        return false;",
    "        return text.Contains(\"z\") && text.IndexOf(\"z\") != 0 && text.IndexOf(\"z\") != text.Length - 1;",
    "        return text.Contains(\"z\") && text.IndexOf(\"z\") != 0 && text.LastIndexOf(\"z\") != text.Length - 1;",
    "        return text.Contains(\"z\") && text.IndexOf(\"z\") != 0 && text.LastIndexOf(\"z\") != text.Length - 1;",
    "        return text.Contains(\"z\") && text.IndexOf(\"z\") != 0 && text.LastIndexOf(\"z\") != text.Length - 1;",
    "        if (text.Length < 3) {\n            return false;\n        }\n        for (int i = 1; i < text.Length - 1; i++) {\n            if (text[i] == 'z') {\n                return true;\n            }\n        }\n        return false;"
  ]
}
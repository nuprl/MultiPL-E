{
  "name": "mbpp_279_is_num_decagonal",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_279_is_num_decagonal.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // 3n^2 - n - 2n = 0\n        // n = (1 + sqrt(1 + 12*2))/6\n        // n = (1 + sqrt(25))/6\n        // n = (1 + 5)/6\n        // n = 6/6\n        // n = 1\n        // n = (1 - sqrt(25))/6\n        // n = (-4)/6\n        // n = -2/3\n        // n = -1\n        // n = (1 + sqrt(1 + 12*3))/6\n        // n = (1 + sqrt(37))/6\n        // n = (1 + 6)/6\n        // n = 7/6\n        // n = 1\n        // n = (1 - sqrt(37))/6\n        // n = (-6)/6\n        // n = -1\n        // n = (1 + sqrt(1 + 12*4))/6\n        // n = (1 + sqrt(49))/6\n        // n = (1 + 7)/6\n        // n = 8/6\n        // n = 1\n        // n = (1 - sqrt(49))/6\n        // n = (-8)/6\n        // n = -4/3\n        // n = -1\n        // n = (1 + sqrt(1 + 12*5))/6\n        // n = (1 + sqrt(61))/6\n        // n = (1 + 8)/6\n        // n = 9/6\n        // n = 1\n        // n = (1 - sqrt(61))/6\n        // n = (-10)/6\n        // n = -5/3\n        // n = -1\n        // n = (1 + sqrt(1 + 12*6))/6\n        // n = (1 + sqrt(73))/6\n        // n = (1 + 9)/6\n        // n = 10/6\n        // n = 5/3\n        // n = 1\n        // n = (1 - sqrt(73))/6\n        // n = (-12)/6\n        // n =\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpoxhsgqoj.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 - 3n + 2n = 0\n        // n^2 - n = 0\n        // n(n - 1) = 0\n        // n = 0 or n = 1\n        // n = 1\n        return (n * (3 * n - 1)) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <768c6f15d27c4133918c9f3883bdf010>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <768c6f15d27c4133918c9f3883bdf010>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 3;\n        long c = -2 * n;\n        long d = (long)Math.Sqrt(b * b - 4 * a * c);\n        if (d * d != b * b - 4 * a * c) {\n            return 0;\n        }\n        long x1 = (-b + d) / (2 * a);\n        long x2 = (-b - d) / (2 * a);\n        if (x1 > 0 && x1 % 2 == 0) {\n            return x1;\n        }\n        if (x2 > 0 && x2 % 2 == 0) {\n            return x2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d799f90976434244ad79dd18c81c237c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d799f90976434244ad79dd18c81c237c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3 * x^2 - x) / 2\n        // n = (3 * x^2 - x) / 2\n        // 3 * x^2 - x - 2 * n = 0\n        // x = (1 + sqrt(1 + 24 * n)) / 6\n        double x = (1 + Math.Sqrt(1 + 24 * n)) / 6;\n        return (long)x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3d302a7567f04af987a0ef7b172295aa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3d302a7567f04af987a0ef7b172295aa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 + n - 2*n = 0\n        // n = (-1 + sqrt(1 + 8*k))/3\n        // n = (1 + sqrt(1 + 8*k))/3\n        // n = (1 + sqrt(1 + 24*k))/6\n        // n = (1 + sqrt(1 + 24*k))/6\n        // n = (1 + sqrt(1 + 24*k))/6\n        // n = (1 + sqrt(1 + 24*k))/6\n        // n = (1 + sqrt(1 + 24*k))/6\n        // n = (1 + sqrt(1 + 24*k))/6\n        // n = (1 + sqrt(1 + 24*k))/6\n        // n = (1 + sqrt(1 + 24*k))/6\n        // n = (1 + sqrt(1 + 24*k))/6\n        // n = (1 + sqrt(1 + 24*k))/6\n        // n = (1 + sqrt(1 + 24*k))/6\n        // n = (1 + sqrt(1 + 24*k))/6\n        // n = (1 + sqrt(1 + 24*k))/6\n        // n = (1 + sqrt(1 + 24*k))/6\n        // n = (1 + sqrt(1 + 24*k))/6\n        // n = (1 + sqrt(1 + 24*k))/6\n        // n = (1 + sqrt(1 + 24*k))/6\n        // n = (1 + sqrt(1 + 24*k))/6\n        // n = (1 + sqrt(1 + 24*k))/6\n        // n = (1 + sqrt(1 + 24*k))/6\n        // n = (1 + sqrt(1 + 24*k))/6\n        // n = (1 + sqrt(1 + 24*k))/6\n        // n = (1 + sqrt(1 + 24*k))/6\n        // n = (1 +\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpefy0k7ci.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        double x = (Math.Sqrt(4*n*n + 4*n + 1) + 1)/2;\n        if (x == (int)x) {\n            return (long)x;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9c5c9fb49376486d8b7c4e220d0a816f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9c5c9fb49376486d8b7c4e220d0a816f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 - 3n + 2n = 0\n        // n(n - 3 + 2) = 0\n        // n = 0 or n = 3 - 2\n        // n = 3 - 2\n        // n = 1\n        // n = (3*1^2 - 1)/2\n        // n = (3*1 - 1)/2\n        // n = 1\n        // n = (3*n^2 - n)/2\n        // n = (3*n^2 - n)/2\n        // n = (3*n^2 - n)/2\n        // n = (3*n^2 - n)/2\n        // n = (3*n^2 - n)/2\n        // n = (3*n^2 - n)/2\n        // n = (3*n^2 - n)/2\n        // n = (3*n^2 - n)/2\n        // n = (3*n^2 - n)/2\n        // n = (3*n^2 - n)/2\n        // n = (3*n^2 - n)/2\n        // n = (3*n^2 - n)/2\n        // n = (3*n^2 - n)/2\n        // n = (3*n^2 - n)/2\n        // n = (3*n^2 - n)/2\n        // n = (3*n^2 - n)/2\n        // n = (3*n^2 - n)/2\n        // n = (3*n^2 - n)/2\n        // n = (3*n^2 - n)/2\n        // n = (3*n^2 - n)/2\n        // n = (3*n^2 - n)/2\n        // n = (3*n^2 - n)/2\n        // n = (3*n^2 - n)/2\n        // n = (3*n^2 - n)/2\n        // n = (3*n^2 - n)/2\n        // n = (3*n^2 - n)/2\n        // n = (3*n^2 - n)/2\n        // n =\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpit4kxlrs.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 - 3n + 2n = 0\n        // n^2 - n = 0\n        // n(n - 1) = 0\n        // n = 0 or n = 1\n        // n = 0 is not a decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpchrcn9_2.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        double x = (1 + Math.Sqrt(1 + 24 * n)) / 6;\n        if (x == (int)x) {\n            return (long)x;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5b85d7300b674f1e8fc8168f6829a4b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5b85d7300b674f1e8fc8168f6829a4b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxqohqw5p.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = -3;\n        long c = -2 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) {\n            return 0;\n        }\n        double x1 = (-b + Math.Sqrt(d)) / (2 * a);\n        double x2 = (-b - Math.Sqrt(d)) / (2 * a);\n        if (x1 > 0 && x1 == (int)x1) {\n            return (long)x1;\n        }\n        if (x2 > 0 && x2 == (int)x2) {\n            return (long)x2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0d784e28182640199919a584fb3ff09a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0d784e28182640199919a584fb3ff09a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 1;\n        long c = -2 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) {\n            return -1;\n        }\n        long x1 = (-b + (long)Math.Sqrt(d)) / (2 * a);\n        long x2 = (-b - (long)Math.Sqrt(d)) / (2 * a);\n        if (x1 > 0 && x1 % 10 == 0) {\n            return x1;\n        }\n        if (x2 > 0 && x2 % 10 == 0) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <08841d3cec1b4adc90df608d4f4cb3fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <08841d3cec1b4adc90df608d4f4cb3fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3 * n^2 - n) / 2\n        // n^2 - n - 2n / 3 = 0\n        // n = (1 + sqrt(1 + 24 * n)) / 6\n        double d = 1 + Math.Sqrt(1 + 24 * n);\n        if (d % 6 == 0) {\n            return (long)d / 6;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <16faafca428c4c3fbb81024c8df38418>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <16faafca428c4c3fbb81024c8df38418>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 + n - 2*n = 0\n        // n = (-1 + sqrt(1 + 8*k))/3\n        // n = (-1 + sqrt(1 + 24*k))/6\n        // n = (-1 + sqrt(1 + 8*(3*k)))/3\n        // n = (-1 + sqrt(1 + 24*(2*k)))/6\n        // n = (-1 + sqrt(1 + 8*(3*(2*k)))/3\n        // n = (-1 + sqrt(1 + 24*(4*k)))/6\n        // n = (-1 + sqrt(1 + 8*(3*(4*k)))/3\n        // n = (-1 + sqrt(1 + 24*(8*k)))/6\n        // n = (-1 + sqrt(1 + 8*(3*(8*k)))/3\n        // n = (-1 + sqrt(1 + 24*(16*k)))/6\n        // n = (-1 + sqrt(1 + 8*(3*(16*k)))/3\n        // n = (-1 + sqrt(1 + 24*(32*k)))/6\n        // n = (-1 + sqrt(1 + 8*(3*(32*k)))/3\n        // n = (-1 + sqrt(1 + 24*(64*k)))/6\n        // n = (-1 + sqrt(1 + 8*(3*(64*k)))/3\n        // n = (-1 + sqrt(1 + 24*(128*k)))/6\n        // n = (-1 + sqrt(1 + 8*(3*(128*k)))/3\n        // n = (-1 + sqrt(1 + 24*(256*k)))/6\n        // n = (-1 + sqrt(1 + 8*(3*(256*k)))/3\n        // n = (-1 + sqrt(1 + 24*(512*k)))/6\n        // n = (-1 + sqrt(1 + 8*(3*(512*k)))/3\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplm6dvxvz.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 +- sqrt(1 + 24n)) / 6\n        // x must be an integer\n        // 1 + 24n must be a perfect square\n        // 1 + 24n = y^2\n        // 24n = y^2 - 1\n        // n = (y^2 - 1) / 24\n        // y^2 - 1 must be a multiple of 24\n        // y^2 - 1 = 24k\n        // y^2 = 24k + 1\n        // y = sqrt(24k + 1)\n        // y must be an integer\n        // sqrt(24k + 1) must be an integer\n        // 24k + 1 must be a perfect square\n        // 24k + 1 = z^2\n        // 24k = z^2 - 1\n        // k = (z^2 - 1) / 24\n        // z^2 - 1 must be a multiple of 24\n        // z^2 - 1 = 24m\n        // z^2 = 24m + 1\n        // z = sqrt(24m + 1)\n        // z must be an integer\n        // sqrt(24m + 1) must be an integer\n        // 24m + 1 must be a perfect square\n        // 24m + 1 = w^2\n        // 24m = w^2 - 1\n        // m = (w^2 - 1) / 24\n        // w^2 - 1 must be a multiple of 24\n        // w^2 - 1 = 24n\n        // w^2 = 24n + 1\n        // w = sqrt(24n + 1)\n        // w must be an integer\n        // sqrt(24n + 1) must be an integer\n        // 24n + 1 must be a perfect square\n        // 24n + 1 = x^2\n        // 24n = x^2 - 1\n        // n = (x^2 - 1) / 24\n        // x^2 - 1 must be a multiple of 24\n        // x^2 - 1 = 24p\n        // x^2 = 24p + 1\n        // x = sqrt(24p + 1\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5ys6nzl_.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // 3n^2 - n - 2n = 0\n        // n = (1 +- sqrt(1 + 12*2))/6\n        // n = (1 +- sqrt(25))/6\n        // n = (1 +- 5)/6\n        // n = 6 or -1\n        // n = 6\n        // n = (3*6^2 - 6)/2\n        // n = (3*36 - 6)/2\n        // n = (108 - 6)/2\n        // n = 102/2\n        // n = 51\n        // n = (3*51^2 - 51)/2\n        // n = (3*2601 - 51)/2\n        // n = (7802 - 51)/2\n        // n = 7750/2\n        // n = 3875\n        // n = (3*3875^2 - 3875)/2\n        // n = (3*1550625 - 3875)/2\n        // n = (4661875 - 3875)/2\n        // n = 4628000/2\n        // n = 2314000\n        // n = (3*2314000^2 - 2314000)/2\n        // n = (3*53496000000 - 2314000)/2\n        // n = (160488000000 - 2314000)/2\n        // n = 160464686000/2\n        // n = 802323430\n        // n = (3*802323430^2 - 802323430)/2\n        // n = (3*641858751688900 - 802323430)/2\n        // n = (1925576255066700 - 802323430)/2\n        // n = 1925496022842370/2\n        // n = 96274801421185\n        // n = (3*96274801421185^2 - 96274801421185)/2\n        // n = (3*927492028843470225 - 96274801421185)/2\n        // n = (2782476286304020700 - 96274801421185)/2\n        // n =\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3xyafgac.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 +- sqrt(1 + 24n)) / 6\n        long x = (long)Math.Floor((1 + Math.Sqrt(1 + 24 * n)) / 6);\n        return (3 * x * x - x) / 2 == n ? x : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f88c09e88a2f4c5a95dca69c6b0478cd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f88c09e88a2f4c5a95dca69c6b0478cd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long num = (long)((3 + Math.Sqrt(9 + 8 * n)) / 2);\n        if (num * (3 * num - 1) / 2 == n)\n            return num;\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <990c610caef340ee920694daafa99449>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <990c610caef340ee920694daafa99449>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3 * n * n - n) / 2\n        // 3 * n * n - n - 2 * n = 0\n        // n * (3 * n - 1) - 2 * n = 0\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2 * n\n        // n * (3 * n - 3) = 2\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpspgec4e2.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // 3n^2 - n - 2n = 0\n        // n = (1 +- sqrt(1 + 12(3n^2 - n)))/6\n        // n = (1 +- sqrt(1 + 36n^2 - 12n))/6\n        // n = (1 +- sqrt(36n^2 - 11n + 1))/6\n        // n = (1 +- sqrt(36n^2 - 11n + 1))/6\n        // n = (1 +- sqrt(36n^2 - 11n + 1))/6\n        // n = (1 +- sqrt(36n^2 - 11n + 1))/6\n        // n = (1 +- sqrt(36n^2 - 11n + 1))/6\n        // n = (1 +- sqrt(36n^2 - 11n + 1))/6\n        // n = (1 +- sqrt(36n^2 - 11n + 1))/6\n        // n = (1 +- sqrt(36n^2 - 11n + 1))/6\n        // n = (1 +- sqrt(36n^2 - 11n + 1))/6\n        // n = (1 +- sqrt(36n^2 - 11n + 1))/6\n        // n = (1 +- sqrt(36n^2 - 11n + 1))/6\n        // n = (1 +- sqrt(36n^2 - 11n + 1))/6\n        // n = (1 +- sqrt(36n^2 - 11n + 1))/6\n        // n = (1 +- sqrt(36n^2 - 11n + 1))/6\n        // n = (1 +- sqrt(36n^2 - 11n + 1))/6\n        // n = (1 +- sqrt(36n^2 - 11n + 1))/6\n        // n = (1 +- sqrt(36n^2 - 11n + 1))/6\n        // n = (1 +- sqrt(36n^2 - 11n + 1))/6\n       \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi44khbui.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = -3;\n        long c = -2 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) return -1;\n        long x1 = (-b + (long)Math.Sqrt(d)) / (2 * a);\n        long x2 = (-b - (long)Math.Sqrt(d)) / (2 * a);\n        if (x1 * (3 * x1 - 1) / 2 == n) return x1;\n        if (x2 * (3 * x2 - 1) / 2 == n) return x2;\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123920,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9e02e60665b14bb8b856033b025efbc5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9e02e60665b14bb8b856033b025efbc5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        double x = (Math.Sqrt(4*n*n + 4*n + 1) + 1) / 2;\n        return (long)x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3fe0352feb7a41418cae3c6bca746103>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3fe0352feb7a41418cae3c6bca746103>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        double x = (Math.Sqrt(4*n*n + 4*n + 1) + 1) / 2;\n        if (x == (long)x) {\n            return (long)x;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <250a5fc42e954cb7ba6a3bfc366a4d24>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <250a5fc42e954cb7ba6a3bfc366a4d24>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 +- sqrt(1 + 24n)) / 6\n        long x = (long)Math.Sqrt(1 + 24 * n);\n        if (x * x != 1 + 24 * n) return -1;\n        x += 1;\n        if (x % 6 != 0) return -1;\n        x /= 6;\n        if ((3 * x * x - x) / 2 != n) return -1;\n        return x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <be3d11de121f45f99463b961e16def5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <be3d11de121f45f99463b961e16def5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // 3*n^2 - n - 2*n = 0\n        // n = (1 + sqrt(1 + 12*2))/6\n        // n = (1 + sqrt(25))/6\n        // n = (1 + 5)/6\n        // n = 6/6\n        // n = 1\n        // n = (1 - sqrt(25))/6\n        // n = (-4)/6\n        // n = -2/3\n        // n = -1\n        // n = (1 - sqrt(1 + 12*2))/6\n        // n = (1 - sqrt(25))/6\n        // n = (-4)/6\n        // n = -2/3\n        // n = -1\n        // n = (1 + sqrt(1 + 12*2))/6\n        // n = (1 + sqrt(25))/6\n        // n = (1 + 5)/6\n        // n = 6/6\n        // n = 1\n        // n = (1 - sqrt(1 + 12*2))/6\n        // n = (1 - sqrt(25))/6\n        // n = (-4)/6\n        // n = -2/3\n        // n = -1\n        // n = (1 + sqrt(1 + 12*2))/6\n        // n = (1 + sqrt(25))/6\n        // n = (1 + 5)/6\n        // n = 6/6\n        // n = 1\n        // n = (1 - sqrt(1 + 12*2))/6\n        // n = (1 - sqrt(25))/6\n        // n = (-4)/6\n        // n = -2/3\n        // n = -1\n        // n = (1 + sqrt(1 + 12*2))/6\n        // n = (1 + sqrt(25))/6\n        // n = (1 + 5)/6\n        // n = 6/6\n        // n = 1\n        // n = (1 - sqrt(1 + 12*2))/6\n        // n = (1 - sq\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123919,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpo0upuott.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxqohqw5p.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        double x = (Math.Sqrt(4*n*n + 4*n + 1) + 1) / 2;\n        if (x == (long)x) {\n            return (long)x;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123920,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <418daeb6ff6c4f53a053489cb4725c70>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <418daeb6ff6c4f53a053489cb4725c70>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long p = (long)Math.Sqrt(1 + 4 * 2 * n);\n        if (p * p == 1 + 4 * 2 * n && (p - 1) % 4 == 0)\n            return (p - 1) / 4;\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <02be42ccd36f4a46acf0054a90cf828c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <02be42ccd36f4a46acf0054a90cf828c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 - 3n + 2n = 0\n        // n(n - 3 + 2) = 0\n        // n = 0 or n = 3 - 2\n        // n = 3 - 2\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg1z1pemb.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long x = 1;\n        while (true) {\n            long y = x * (3 * x - 1) / 2;\n            if (y == n)\n                return x;\n            if (y > n)\n                return 0;\n            x++;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <65e110b4dc74427aa55ab13ed42807b1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <65e110b4dc74427aa55ab13ed42807b1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        var x = (1 + Math.Sqrt(1 + 24 * n)) / 6;\n        return x == (long)x ? (long)x : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d6677d793fae46d6a9ee09168b761a14>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d6677d793fae46d6a9ee09168b761a14>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        double a = (3 + Math.Sqrt(9 + 8 * n)) / 2;\n        if (a == (long)a)\n            return (long)a;\n        else\n            return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <769e8d1de7934b179e0fef64aff79e59>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <769e8d1de7934b179e0fef64aff79e59>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // 3*n^2 - n - 2*n = 0\n        // n^2 - (1/3)n - (2/3) = 0\n        // n = (1/3) +- sqrt(1/9 + 8/3)\n        // n = (1/3) +- sqrt(1 + 8)\n        // n = (1/3) +- sqrt(9)\n        // n = (1/3) +- 3\n        // n = 1/3 + 3 = 4/3\n        // n = 1/3 - 3 = -2/3\n        // n = 4/3\n        // n = 1\n        // n = -2/3\n        // n = -1\n        // n = 4/3\n        // n = 1\n        // n = -2/3\n        // n = -1\n        // n = 4/3\n        // n = 1\n        // n = -2/3\n        // n = -1\n        // n = 4/3\n        // n = 1\n        // n = -2/3\n        // n = -1\n        // n = 4/3\n        // n = 1\n        // n = -2/3\n        // n = -1\n        // n = 4/3\n        // n = 1\n        // n = -2/3\n        // n = -1\n        // n = 4/3\n        // n = 1\n        // n = -2/3\n        // n = -1\n        // n = 4/3\n        // n = 1\n        // n = -2/3\n        // n = -1\n        // n = 4/3\n        // n = 1\n        // n = -2/3\n        // n = -1\n        // n = 4/3\n        // n = 1\n        // n = -2/3\n        // n = -1\n        // n = 4/3\n        // n = 1\n        // n = -2/3\n        // n = -1\n        // n = 4/3\n        // n = 1\n        // n = -2/3\n        // n = -\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123921,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx9i7cm4r.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxqohqw5p.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long nth = 0;\n        long num = 0;\n        while (nth < n) {\n            num++;\n            if (IsDecagonal(num)) {\n                nth++;\n            }\n        }\n        return num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123921,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdt084gy.cs(15,17): error CS0103: The name 'IsDecagonal' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x)/2\n        // n = (3x^2 - x - 2n)/2\n        // 3x^2 - x - 2n = 0\n        // x = (1 +- sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123921,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbt5j9oon.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long x = (long)Math.Sqrt(1 + 4 * 2 * n);\n        if (x * x != 1 + 4 * 2 * n) return -1;\n        x = (x - 1) / 2;\n        if (x % 2 == 0) return x / 2;\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b2c5ffacb5c34c93956087ba63602c09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b2c5ffacb5c34c93956087ba63602c09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long nth = n * (3 * n - 2);\n        long sqrt = (long)Math.Sqrt(nth);\n        if (sqrt * sqrt == nth && (sqrt + 1) % 6 == 0) {\n            return nth;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d8cdc89c00dd4dad964ce8a8e2d64a49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d8cdc89c00dd4dad964ce8a8e2d64a49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // n = (3x^2 - x - 2n) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        double x = (1 + Math.Sqrt(1 + 24 * n)) / 6;\n        if (x == (int)x) {\n            return (long)x;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d077abd26c3e406bb9e4ba39ccd2c5c7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d077abd26c3e406bb9e4ba39ccd2c5c7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 + n - 2*n = 0\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 +\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123921,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgta81fe2.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 3;\n        long c = -2 * n;\n        long d = (long)Math.Sqrt(b * b - 4 * a * c);\n        if (d * d != b * b - 4 * a * c) return -1;\n        long x1 = (-b + d) / (2 * a);\n        long x2 = (-b - d) / (2 * a);\n        if (x1 > 0 && x1 * (3 * x1 - 1) / 2 == n) return x1;\n        if (x2 > 0 && x2 * (3 * x2 - 1) / 2 == n) return x2;\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <129f22efdfe24395a85e958f8f64ab0a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <129f22efdfe24395a85e958f8f64ab0a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long nth = 0;\n        long i = 1;\n        while (nth < n) {\n            nth = i * (3 * i - 1) / 2;\n            i++;\n        }\n        if (nth == n) {\n            return nth;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6e9666f558e241de908fc22ba3a05d20>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6e9666f558e241de908fc22ba3a05d20>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // n = 3x^2 - x\n        // x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 8n)) / 3\n        // x = (1 - sqrt(1 + 8n)) / 3\n        // x = (1 + sqrt(1 + 8n)) / 3\n        // x = (1 - sqrt(1 + 8n)) / 3\n        // x = (1 + sqrt(1 + 8n)) / 3\n        // x = (1 - sqrt(1 + 8n)) / 3\n        // x = (1 + sqrt(1 + 8n)) / 3\n        // x = (1 - sqrt(1 + 8n)) / 3\n        // x = (1 + sqrt(1 + 8n)) / 3\n        // x = (1 - sqrt(1 + 8n)) / 3\n        // x = (1 + sqrt(1 + 8n)) / 3\n        // x = (1 - sqrt(1 + 8n)) / 3\n        // x = (1 + sqrt(1 + 8n)) / 3\n        // x = (1 - sqrt(1 + 8n)) / 3\n        // x = (1 + sqrt(1 + 8n)) / 3\n        // x = (1 - sqrt(1 + 8n)) / 3\n        // x = (1 + sqrt(1 + 8n)) / 3\n        // x = (1 - sqrt(1 + 8n)) / 3\n        // x = (1 + sqrt(1 + 8n)) / 3\n        // x = (1 - sqrt(1 + 8n)) / 3\n        // x = (1 + sqrt(1 + 8n)) / 3\n        // x = (1 - sqrt(1 + 8n)) / 3\n        // x = (1 + sqrt(1 + 8n)) / 3\n        // x = (1 - sqrt(1 + 8n)) / 3\n        // x = (1 + sqrt(1 + 8n)) / 3\n        // x = (1 - sqrt(1 + 8n)) / 3\n        // x =\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123921,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcy8cw3pp.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long nth = 0;\n        long i = 1;\n        while (nth < n) {\n            nth = i * (3 * i - 1) / 2;\n            i++;\n        }\n        return nth;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <97cc2135f6e54d79983e33052f22a2ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <97cc2135f6e54d79983e33052f22a2ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 3;\n        long c = -2 * n;\n        long d = (long)Math.Sqrt(b * b - 4 * a * c);\n        if (d * d != b * b - 4 * a * c)\n            return 0;\n        long x1 = (-b + d) / (2 * a);\n        long x2 = (-b - d) / (2 * a);\n        if (x1 > 0 && x1 % 10 == 0)\n            return x1;\n        if (x2 > 0 && x2 % 10 == 0)\n            return x2;\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b6022dbda1a04670b5c756e93513c46f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b6022dbda1a04670b5c756e93513c46f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = (long)Math.Sqrt(n);\n        if (a * a == n) {\n            return a;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b7409f3e8db84baca4dabfe552f03e98>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b7409f3e8db84baca4dabfe552f03e98>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // 3*n^2 - n - 2*n = 0\n        // n = (1 + sqrt(1 + 12*2))/6\n        // n = (1 + sqrt(25))/6\n        // n = (1 + 5)/6\n        // n = 6/6\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n       \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123919,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpz0zg12ij.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long nth = (long)((3 + Math.Sqrt(9 + 8 * n)) / 2);\n        if (nth * (3 * nth - 1) / 2 == n) {\n            return nth;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e87cae2b524d421ea19bdb3d5ad55c99>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e87cae2b524d421ea19bdb3d5ad55c99>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = n;\n        long b = 1;\n        long c = -3 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) {\n            return -1;\n        }\n        long x1 = (-b + (long)Math.Sqrt(d)) / (2 * a);\n        long x2 = (-b - (long)Math.Sqrt(d)) / (2 * a);\n        if (x1 * (3 * x1 - 1) / 2 == n) {\n            return x1;\n        }\n        if (x2 * (3 * x2 - 1) / 2 == n) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d2467f6ba7ae42958aace02e2ae7ca4e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d2467f6ba7ae42958aace02e2ae7ca4e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = -3;\n        long c = -2 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) return -1;\n        long x1 = (-b + (long)Math.Sqrt(d)) / (2 * a);\n        long x2 = (-b - (long)Math.Sqrt(d)) / (2 * a);\n        if (x1 * (3 * x1 - 1) / 2 == n) return x1;\n        if (x2 * (3 * x2 - 1) / 2 == n) return x2;\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123920,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9e02e60665b14bb8b856033b025efbc5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9e02e60665b14bb8b856033b025efbc5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // n = (3x^2 - x) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123920,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgveckv8p.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        double x = (Math.Sqrt(4 * n * n + 4 * n + 1) + 1) / 2;\n        if (x == (int)x)\n            return (long)x;\n        else\n            return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7fd20724b42c4127b3eae17121b57379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7fd20724b42c4127b3eae17121b57379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxqohqw5p.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // n = 3x^2 - x\n        // n + x = 3x^2\n        // x^2 = (n + x) / 3\n        // x = sqrt((n + x) / 3)\n        // x = sqrt(n / 3 + x / 3)\n        // x = sqrt(n / 3) + x / 3\n        // x = sqrt(n / 3) + sqrt(n / 3) / 3\n        // x = sqrt(n / 3) + sqrt(n / 9)\n        // x = sqrt(n / 3) + sqrt(n) / 3\n        // x = sqrt(n / 3) + sqrt(n) / 3\n        // x = sqrt(n / 3) + sqrt(n) / 3\n        // x = sqrt(n / 3) + sqrt(n) / 3\n        // x = sqrt(n / 3) + sqrt(n) / 3\n        // x = sqrt(n / 3) + sqrt(n) / 3\n        // x = sqrt(n / 3) + sqrt(n) / 3\n        // x = sqrt(n / 3) + sqrt(n) / 3\n        // x = sqrt(n / 3) + sqrt(n) / 3\n        // x = sqrt(n / 3) + sqrt(n) / 3\n        // x = sqrt(n / 3) + sqrt(n) / 3\n        // x = sqrt(n / 3) + sqrt(n) / 3\n        // x = sqrt(n / 3) + sqrt(n) / 3\n        // x = sqrt(n / 3) + sqrt(n) / 3\n        // x = sqrt(n / 3) + sqrt(n) / 3\n        // x = sqrt(n / 3) + sqrt(n) / 3\n        // x = sqrt(n / 3) + sqrt(n) / 3\n        // x = sqrt(n / 3) + sqrt(n) / 3\n        // x = sqrt(n / 3)\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphjufwk41.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        double x = (Math.Sqrt(1 + 4 * 2 * n) - 1) / 2;\n        if (x == (long)x)\n            return (long)x;\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <89a1fb4277a04171b70db7080c7c7a62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <89a1fb4277a04171b70db7080c7c7a62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 - 3n + 2n = 0\n        // n = (3 +- sqrt(9 - 24))/2\n        // n = (3 +- sqrt(15))/2\n        double sqrt = Math.Sqrt(15);\n        double n1 = (3 + sqrt)/2;\n        double n2 = (3 - sqrt)/2;\n        if (n1 == n) {\n            return (long)n1;\n        }\n        if (n2 == n) {\n            return (long)n2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d60a74c17d544b80972a319958f9c94c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d60a74c17d544b80972a319958f9c94c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 1;\n        long c = -2 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) {\n            return 0;\n        }\n        long x1 = (-b + (long)Math.Sqrt(d)) / (2 * a);\n        long x2 = (-b - (long)Math.Sqrt(d)) / (2 * a);\n        if (x1 > 0 && x1 % 10 == 0) {\n            return x1;\n        }\n        if (x2 > 0 && x2 % 10 == 0) {\n            return x2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <722261c38b2549099e99c253f66331a8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <722261c38b2549099e99c253f66331a8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 3;\n        long c = -2 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) return 0;\n        long x1 = (-b + (long)Math.Sqrt(d)) / (2 * a);\n        long x2 = (-b - (long)Math.Sqrt(d)) / (2 * a);\n        if (x1 * (3 * x1 - 1) / 2 == n) return x1;\n        if (x2 * (3 * x2 - 1) / 2 == n) return x2;\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <725699228531472aa99f94ebcddd0ae3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <725699228531472aa99f94ebcddd0ae3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        double x = (Math.Sqrt(4*n*n + 4*n + 1) + 1)/2;\n        if (x == (long)x)\n            return (long)x;\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c3a0ecd70cdf4e009d92a4098b1bcbc0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c3a0ecd70cdf4e009d92a4098b1bcbc0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 - 3n + 2n = 0\n        // n(n - 3 + 2) = 0\n        // n = 0 or n = 3 - 2\n        // n = 1 or n = 1\n        // n = 1\n        return n;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123919,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <faee292f9fab4a02a671169d4a2afd86>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <faee292f9fab4a02a671169d4a2afd86>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long nth = 0;\n        long i = 0;\n        while (nth < n) {\n            i++;\n            nth = i * (3 * i - 1) / 2;\n        }\n        if (nth == n) {\n            return i;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <990e282bfff4446c988d870cd0eee092>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <990e282bfff4446c988d870cd0eee092>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 3;\n        long c = -2 * n;\n        long d = (long)Math.Sqrt(b * b - 4 * a * c);\n        long x1 = (-b + d) / (2 * a);\n        long x2 = (-b - d) / (2 * a);\n        if (x1 * (3 * x1 - 1) / 2 == n) {\n            return x1;\n        }\n        if (x2 * (3 * x2 - 1) / 2 == n) {\n            return x2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cc2a197e219a492b94dfbdb1c4ee4d28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cc2a197e219a492b94dfbdb1c4ee4d28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long x = (long)Math.Sqrt(n);\n        if (x * x == n) {\n            return x;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ca00d16e4d9046a7800c41bc7463ce70>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ca00d16e4d9046a7800c41bc7463ce70>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // n = (3x^2 - x - 2n) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6 is not an integer\n        // x = (1 - sqrt(1 + 24n)) / 6 is an integer\n        // x = (1 - sqrt(1 + 24n)) / 6 > 0\n        // 1 - sqrt(1 + 24n) > 0\n        // sqrt(1 + 24n) < 1\n        // 1 + 24n < 1\n        // 24n < 0\n        // n < 0\n        // n = (1 - sqrt(1 + 24n)) / 6\n        // n = (1 - (1 + 24n)^(1/2)) / 6\n        // n = (1 - (1 + 24n)^(1/2)) / 6\n        // n = (1 - (1 + 24n)^(1/2)) / 6\n        // n = (1 - (1 + 24n)^(1/2)) / 6\n        // n = (1 - (1 + 24n)^(1/2)) / 6\n        // n = (1 - (1 + 24n)^(1/2)) / 6\n        // n = (1 - (1 + 24n)^(1/2)) / 6\n        // n = (1 - (1 + 24n)^(1/2)) / 6\n        // n = (1 - (1 + 24n)^(1/2)) / 6\n        // n = (1 - (1 + 24n)^(1/2)) / 6\n        // n = (1 - (1 + 24n)^(1/2)) / 6\n        // n = (1 - (1 + 24n)^(1/2)) / 6\n        // n = (1 - (1 + 24n)^(1/2)) / 6\n        // n = (1 - (1 + 24\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi937uk1r.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // Decagonal numbers are of the form n(3n-1)/2\n        // We want to find the n such that n(3n-1)/2 = x\n        // Solving this quadratic equation gives us two solutions\n        // n = (1 +- sqrt(1 + 24x))/6\n        // We want the positive solution\n        // We also need to check that n is an integer\n        var n1 = (1 + Math.Sqrt(1 + 24 * n)) / 6;\n        if (n1 == (long)n1) return (long)n1;\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0f73ffe591054000b27b2713d0ac4d97>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0f73ffe591054000b27b2713d0ac4d97>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 1;\n        long c = -2 * n;\n        long d = (long)Math.Sqrt(b * b - 4 * a * c);\n        if (d * d != b * b - 4 * a * c) return 0;\n        long x1 = (-b + d) / (2 * a);\n        long x2 = (-b - d) / (2 * a);\n        if (x1 > 0 && x1 % 2 == 0) return x1;\n        if (x2 > 0 && x2 % 2 == 0) return x2;\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d99a41f2012c48778169d6c81256c1fa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d99a41f2012c48778169d6c81256c1fa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 - 3n + 2n = 0\n        // n^2 - n = 0\n        // n(n-1) = 0\n        // n = 0 or n = 1\n        // n = 0 is not a decagonal number\n        // n = 1 is the first decagonal number\n        // n = 2 is the second decagonal number\n        // n = 3 is the third decagonal number\n        // n = 4 is not a decagonal number\n        // n = 5 is the fourth decagonal number\n        // n = 6 is the fifth decagonal number\n        // n = 7 is not a decagonal number\n        // n = 8 is the sixth decagonal number\n        // n = 9 is the seventh decagonal number\n        // n = 10 is not a decagonal number\n        // n = 11 is the eighth decagonal number\n        // n = 12 is the ninth decagonal number\n        // n = 13 is not a decagonal number\n        // n = 14 is the tenth decagonal number\n        // n = 15 is not a decagonal number\n        // n = 16 is the eleventh decagonal number\n        // n = 17 is not a decagonal number\n        // n = 18 is the twelfth decagonal number\n        // n = 19 is not a decagonal number\n        // n = 20 is the thirteenth decagonal number\n        // n = 21 is not a decagonal number\n        // n = 22 is the fourteenth decagonal number\n        // n = 23 is not a decagonal number\n        // n = 24 is the fifteenth decagonal number\n        // n = 25 is not a decagonal number\n        // n = 26 is the sixteenth decagonal number\n        // n = 27 is not a decagonal number\n        // n = 28 is the seventeenth decagonal number\n        // n = 29 is not a decagonal number\n        // n = 30 is the eighteenth decagonal number\n        // n = 31 is not a decagonal number\n        // n = 32 is the nineteenth decagonal number\n        // n = 33 is not a decagonal number\n        // n = 34 is the twentieth decagonal number\n        // n = 35 is not a decagonal number\n        // n = 36 is the twenty-first dec\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpksqbisdd.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // 3*n^2 - n - 2*n = 0\n        // n^2 - (1/3)*n - (2/3) = 0\n        // n = (1/3 +- sqrt(1/9 + 8/3))/2\n        // n = (1/3 + sqrt(25/9))/2\n        // n = (1 + sqrt(25))/6\n        // n = (1 + 5)/6\n        // n = 6/6\n        // n = 1\n        // n = (1/3 - sqrt(25/9))/2\n        // n = (1 - sqrt(25))/6\n        // n = (-4)/6\n        // n = -2/3\n        // n = -1\n        // n = (1/3 +- sqrt(1/9 + 8/3))/2\n        // n = (1/3 + sqrt(25/9))/2\n        // n = (1 + sqrt(25))/6\n        // n = (1 + 5)/6\n        // n = 6/6\n        // n = 1\n        // n = (1/3 - sqrt(25/9))/2\n        // n = (1 - sqrt(25))/6\n        // n = (-4)/6\n        // n = -2/3\n        // n = -1\n        // n = (1/3 +- sqrt(1/9 + 8/3))/2\n        // n = (1/3 + sqrt(25/9))/2\n        // n = (1 + sqrt(25))/6\n        // n = (1 + 5)/6\n        // n = 6/6\n        // n = 1\n        // n = (1/3 - sqrt(25/9))/2\n        // n = (1 - sqrt(25))/6\n        // n = (-4)/6\n        // n = -2/3\n        // n = -1\n        // n = (1/3 +- sqrt(1/9 + 8/3))/2\n        // n = (1/3 +\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgytodyye.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long nth = 0;\n        long i = 1;\n        while (nth < n) {\n            nth = i * (3 * i - 1) / 2;\n            i++;\n        }\n        if (nth == n) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <768061f7cbf74103a3fbe538814dd7f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <768061f7cbf74103a3fbe538814dd7f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        var x = (1 + Math.Sqrt(1 + 24 * n)) / 6;\n        if (x == (long)x) {\n            return (long)x;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123920,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <57d96d23152941b494fb7b719aa7a8ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <57d96d23152941b494fb7b719aa7a8ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // n = (3x^2 - x - 2n) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzup0g8xj.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 3;\n        long c = -2 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) {\n            return -1;\n        }\n        long x1 = (long)((-b + Math.Sqrt(d)) / (2 * a));\n        long x2 = (long)((-b - Math.Sqrt(d)) / (2 * a));\n        if (x1 * (3 * x1 - 1) / 2 == n) {\n            return x1;\n        }\n        if (x2 * (3 * x2 - 1) / 2 == n) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123920,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6409e04036c949ea87bc927f8e66f0e3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6409e04036c949ea87bc927f8e66f0e3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long x = (long)Math.Sqrt(n);\n        if (x * x == n)\n            return x;\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <501f7043705a48fabc23469d55258678>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <501f7043705a48fabc23469d55258678>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3 * n^2 - n) / 2\n        // 3 * n^2 - n - 2 * n = 0\n        // n^2 - (1/3)n - (2/3) = 0\n        // n = (1/3) +- sqrt((1/9) + (8/3))\n        // n = (1/3) +- sqrt(1 + 8)\n        // n = (1/3) +- sqrt(9)\n        // n = (1/3) +- 3\n        // n = 1, 2\n        // n = 2\n        return n;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <53bd73f605ed430da880178f26663ed0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <53bd73f605ed430da880178f26663ed0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3 * n^2 - n) / 2\n        // n^2 - n - 2 * n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123920,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpy0pvqkt3.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long nth = 0;\n        long i = 1;\n        while (nth < n) {\n            nth = i * (3 * i - 1) / 2;\n            i++;\n        }\n        if (nth == n) {\n            return 1;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123920,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <51f701ab376b40819c6a671d6bd9f24d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <51f701ab376b40819c6a671d6bd9f24d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long nth = 0;\n        long i = 1;\n        while (nth < n) {\n            nth = i * (3 * i - 1) / 2;\n            i++;\n        }\n        if (nth == n) {\n            return 1;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123920,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <51f701ab376b40819c6a671d6bd9f24d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <51f701ab376b40819c6a671d6bd9f24d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // n = (3x^2 - x - 2n) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 12n)) / 6\n        // x = (1 - sqrt(1 + 12n)) / 6\n        // x = (1 + sqrt(1 + 12n)) / 6\n        // x = (1 - sqrt(1 + 12n)) / 6\n        // x = (1 + sqrt(1 + 12n)) / 6\n        // x = (1 - sqrt(1 + 12n)) / 6\n        // x = (1 + sqrt(1 + 12n)) / 6\n        // x = (1 - sqrt(1 + 12n)) / 6\n        // x = (1 + sqrt(1 + 12n)) / 6\n        // x = (1 - sqrt(1 + 12n)) / 6\n        // x = (1 + sqrt(1 + 12n)) / 6\n        // x = (1 - sqrt(1 + 12n)) / 6\n        // x = (1 + sqrt(1 + 12n)) / 6\n        // x = (1 - sqrt(1 + 12n)) / 6\n        // x = (1 + sqrt(1 + 12n)) / 6\n        // x = (1 - sqrt(1 + 12n)) / 6\n        // x = (1 + sqrt(1 + 12n)) / 6\n        // x = (1 - sqrt(1 + 12n)) / 6\n        // x = (1 + sqrt(1 + 12n)) / 6\n        // x = (1 - sqrt(1 + 12n)) / 6\n        // x = (1 + sqrt(1 + 12n)) / 6\n        // x = (1 - sqrt(1 + 12n)) / 6\n        // x = (1 + sqrt(1 + 12n)) / 6\n        // x = (1 - sqrt(1 + 12n)) / 6\n        // x = (1 + sqrt(1 + 12n)) / 6\n        // x = (1 - sqrt(1 + 12n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123918,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzxmz_rl2.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // 3n^2 - n - 2n = 0\n        // n = (1 + sqrt(1 + 12*2))/6\n        // n = (1 + sqrt(25))/6\n        // n = (1 + 5)/6\n        // n = 6/6\n        // n = 1\n        // n = (1 - sqrt(25))/6\n        // n = (-4)/6\n        // n = -2/3\n        // n = -1\n        // n = (1 + sqrt(1 + 12*3))/6\n        // n = (1 + sqrt(37))/6\n        // n = (1 + 6)/6\n        // n = 7/6\n        // n = 1\n        // n = (1 - sqrt(37))/6\n        // n = (-6)/6\n        // n = -1\n        // n = (1 + sqrt(1 + 12*4))/6\n        // n = (1 + sqrt(49))/6\n        // n = (1 + 7)/6\n        // n = 8/6\n        // n = 1\n        // n = (1 - sqrt(49))/6\n        // n = (-7)/6\n        // n = -1\n        // n = (1 + sqrt(1 + 12*5))/6\n        // n = (1 + sqrt(61))/6\n        // n = (1 + 8)/6\n        // n = 9/6\n        // n = 1\n        // n = (1 - sqrt(61))/6\n        // n = (-8)/6\n        // n = -1\n        // n = (1 + sqrt(1 + 12*6))/6\n        // n = (1 + sqrt(73))/6\n        // n = (1 + 9)/6\n        // n = 10/6\n        // n = 1\n        // n = (1 - sqrt(73))/6\n        // n = (-9)/6\n        // n = -1\n        // n = (1 + sqrt(1 + 12*7))/6\n        // n =\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptso1_8_m.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // n = (3x^2 - x - 2n) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 +- sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123917,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_rmvc45m.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // 3*n^2 - n - 2*n = 0\n        // n = (1 + sqrt(1 + 12*2))/6\n        // n = (1 + sqrt(25))/6\n        // n = (1 + 5)/6\n        // n = 6/6\n        // n = 1\n        // n = (1 - sqrt(25))/6\n        // n = (-4)/6\n        // n = -2/3\n        // n = -1\n        // n = (1 + sqrt(1 + 12*3))/6\n        // n = (1 + sqrt(37))/6\n        // n = (1 + 6)/6\n        // n = 7/6\n        // n = 1\n        // n = (1 - sqrt(37))/6\n        // n = (-6)/6\n        // n = -1\n        // n = (1 + sqrt(1 + 12*4))/6\n        // n = (1 + sqrt(49))/6\n        // n = (1 + 7)/6\n        // n = 8/6\n        // n = 1\n        // n = (1 - sqrt(49))/6\n        // n = (-7)/6\n        // n = -1\n        // n = (1 + sqrt(1 + 12*5))/6\n        // n = (1 + sqrt(61))/6\n        // n = (1 + 8)/6\n        // n = 9/6\n        // n = 1\n        // n = (1 - sqrt(61))/6\n        // n = (-8)/6\n        // n = -1\n        // n = (1 + sqrt(1 + 12*6))/6\n        // n = (1 + sqrt(73))/6\n        // n = (1 + 9)/6\n        // n = 10/6\n        // n = 1\n        // n = (1 - sqrt(73))/6\n        // n = (-9)/6\n        // n = -1\n        // n = (1 + sqrt(1 + 12*7))/6\n        //\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmj0z5_xn.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // 3*n^2 - n - 2*n = 0\n        // n = (-1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpy4tic08d.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = (long)Math.Sqrt(n);\n        if (a * a == n) {\n            return a;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b7409f3e8db84baca4dabfe552f03e98>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b7409f3e8db84baca4dabfe552f03e98>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // 3*n^2 - n - 2*n = 0\n        // n = (1 + sqrt(1 + 12*2))/6\n        // n = (1 + sqrt(25))/6\n        // n = (1 + 5)/6\n        // n = 6/6\n        // n = 1\n        // n = (1 - sqrt(25))/6\n        // n = (-4)/6\n        // n = -2/3\n        // n = -1\n        // n = (1 + sqrt(1 + 12*3))/6\n        // n = (1 + sqrt(37))/6\n        // n = (1 + 6)/6\n        // n = 7/6\n        // n = 1\n        // n = (1 - sqrt(37))/6\n        // n = (-6)/6\n        // n = -1\n        // n = (1 + sqrt(1 + 12*4))/6\n        // n = (1 + sqrt(49))/6\n        // n = (1 + 7)/6\n        // n = 8/6\n        // n = 1\n        // n = (1 - sqrt(49))/6\n        // n = (-7)/6\n        // n = -1\n        // n = (1 + sqrt(1 + 12*5))/6\n        // n = (1 + sqrt(61))/6\n        // n = (1 + 8)/6\n        // n = 9/6\n        // n = 1\n        // n = (1 - sqrt(61))/6\n        // n = (-8)/6\n        // n = -1\n        // n = (1 + sqrt(1 + 12*6))/6\n        // n = (1 + sqrt(73))/6\n        // n = (1 + 9)/6\n        // n = 10/6\n        // n = 1\n        // n = (1 - sqrt(73))/6\n        // n = (-9)/6\n        // n = -1\n        // n = (1 + sqrt(1 + 12*7))/6\n        //\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmj0z5_xn.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*x^2 - x)/2\n        // 3*x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 - sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 - sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 - sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 - sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 - sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 - sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 - sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 - sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 - sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 - sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 - sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 - sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24n))/6\n        // x = (1 - sqrt(1 + 24n))/6\n        // x = (1 + sqrt(1 + 24\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnhschsv8.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // n = (3x^2 - x - 2n) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzup0g8xj.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x must be an integer\n        // 1 + 24n must be a perfect square\n        // 1 + 24n = y^2\n        // 24n = y^2 - 1\n        // n = (y^2 - 1) / 24\n        // y^2 - 1 must be divisible by 24\n        // y^2 - 1 = 24k\n        // y^2 = 24k + 1\n        // y = sqrt(24k + 1)\n        // y must be an integer\n        // 24k + 1 must be a perfect square\n        // 24k + 1 = z^2\n        // 24k = z^2 - 1\n        // k = (z^2 - 1) / 24\n        // z^2 - 1 must be divisible by 24\n        // z^2 - 1 = 24m\n        // z^2 = 24m + 1\n        // z = sqrt(24m + 1)\n        // z must be an integer\n        // 24m + 1 must be a perfect square\n        // 24m + 1 = w^2\n        // 24m = w^2 - 1\n        // m = (w^2 - 1) / 24\n        // w^2 - 1 must be divisible by 24\n        // w^2 - 1 = 24p\n        // w^2 = 24p + 1\n        // w = sqrt(24p + 1)\n        // w must be an integer\n        // 24p + 1 must be a perfect square\n        // 24p + 1 = q^2\n        // 24p = q^2 - 1\n        // p = (q^2 - 1) / 24\n        // q^2 - 1 must be divisible by 24\n        // q^2 - 1 = 24r\n        // q^2 = 24r + 1\n        // q = sqrt(24r + 1)\n        // q must be an integer\n        // 24r + 1 must be a perfect square\n        // 24r + 1 = s^2\n        // 24r = s^2 - 1\n        //\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpd56dsq47.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*x^2 - x) / 2\n        // 3*x^2 - x - 2*n = 0\n        // x = (1 + sqrt(1 + 24*n)) / 6\n        // x = (1 - sqrt(1 + 24*n)) / 6\n        // x = (1 + sqrt(1 + 24*n)) / 6\n        // x = (1 - sqrt(1 + 24*n)) / 6\n        // x = (1 + sqrt(1 + 24*n)) / 6\n        // x = (1 - sqrt(1 + 24*n)) / 6\n        // x = (1 + sqrt(1 + 24*n)) / 6\n        // x = (1 - sqrt(1 + 24*n)) / 6\n        // x = (1 + sqrt(1 + 24*n)) / 6\n        // x = (1 - sqrt(1 + 24*n)) / 6\n        // x = (1 + sqrt(1 + 24*n)) / 6\n        // x = (1 - sqrt(1 + 24*n)) / 6\n        // x = (1 + sqrt(1 + 24*n)) / 6\n        // x = (1 - sqrt(1 + 24*n)) / 6\n        // x = (1 + sqrt(1 + 24*n)) / 6\n        // x = (1 - sqrt(1 + 24*n)) / 6\n        // x = (1 + sqrt(1 + 24*n)) / 6\n        // x = (1 - sqrt(1 + 24*n)) / 6\n        // x = (1 + sqrt(1 + 24*n)) / 6\n        // x = (1 - sqrt(1 + 24*n)) / 6\n        // x = (1 + sqrt(1 + 24*n)) / 6\n        // x = (1 - sqrt(1 + 24*n)) / 6\n        // x = (1 + sqrt(1 + 24*n)) / 6\n        // x = (1 - sqrt(1 + 24*n)) / 6\n        // x = (1 + sqrt(1 + 24*n)) / 6\n        // x =\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppfym7_sl.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // 3*n^2 - n - 2*n = 0\n        // n^2 + (1/3)*n - (2/3) = 0\n        // n = (-1/3 +- sqrt(1/9 + 8/3))/2\n        // n = (-1/3 +- sqrt(11/9))/2\n        // n = (-1/3 +- sqrt(11)/3)/2\n        // n = (-1 +- sqrt(11))/6\n        // n = (5 +- sqrt(11))/6\n        // n = (5 + sqrt(11))/6\n        // n = (5 - sqrt(11))/6\n        // n = (5 + sqrt(11))/6\n        // n = (5 - sqrt(11))/6\n        // n = (5 + sqrt(11))/6\n        // n = (5 - sqrt(11))/6\n        // n = (5 + sqrt(11))/6\n        // n = (5 - sqrt(11))/6\n        // n = (5 + sqrt(11))/6\n        // n = (5 - sqrt(11))/6\n        // n = (5 + sqrt(11))/6\n        // n = (5 - sqrt(11))/6\n        // n = (5 + sqrt(11))/6\n        // n = (5 - sqrt(11))/6\n        // n = (5 + sqrt(11))/6\n        // n = (5 - sqrt(11))/6\n        // n = (5 + sqrt(11))/6\n        // n = (5 - sqrt(11))/6\n        // n = (5 + sqrt(11))/6\n        // n = (5 - sqrt(11))/6\n        // n = (5 + sqrt(11))/6\n        // n = (5 - sqrt(11))/6\n        // n = (5 + sqrt(11))/6\n        // n = (5 - sqrt(11))/6\n        // n =\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsob_ykni.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long x = (long)Math.Sqrt(n);\n        if (x * x == n) {\n            return x;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123920,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <321d306dd3164d958609422c2499788b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <321d306dd3164d958609422c2499788b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long x = (long)Math.Sqrt(n * 2);\n        if (x * (x + 1) == n * 2) {\n            return x;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a505aee858444c208872175d687db866>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a505aee858444c208872175d687db866>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        double x = (Math.Sqrt(4 * n * n + 4 * n + 1) + 1) / 2;\n        if (x == (long)x)\n            return (long)x;\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <363e13aef88e49ada2675cf9568ed8b5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <363e13aef88e49ada2675cf9568ed8b5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 - 3n + 2n = 0\n        // n^2 - n = 0\n        // n(n-1) = 0\n        // n = 0 or n = 1\n        // n = 0 is not a decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 2 is the second decagonal number\n        // n = 3 is the third decagonal number\n        // n = 4 is the fourth decagonal number\n        // n = 5 is the fifth decagonal number\n        // n = 6 is the sixth decagonal number\n        // n = 7 is the seventh decagonal number\n        // n = 8 is the eighth decagonal number\n        // n = 9 is the ninth decagonal number\n        // n = 10 is the tenth decagonal number\n        // n = 11 is the eleventh decagonal number\n        // n = 12 is the twelfth decagonal number\n        // n = 13 is the thirteenth decagonal number\n        // n = 14 is the fourteenth decagonal number\n        // n = 15 is the fifteenth decagonal number\n        // n = 16 is the sixteenth decagonal number\n        // n = 17 is the seventeenth decagonal number\n        // n = 18 is the eighteenth decagonal number\n        // n = 19 is the nineteenth decagonal number\n        // n = 20 is the twentieth decagonal number\n        // n = 21 is the twenty-first decagonal number\n        // n = 22 is the twenty-second decagonal number\n        // n = 23 is the twenty-third decagonal number\n        // n = 24 is the twenty-fourth decagonal number\n        // n = 25 is the twenty-fifth decagonal number\n        // n = 26 is the twenty-sixth decagonal number\n        // n = 27 is the twenty-seventh decagonal number\n        // n = 28 is the twenty-eighth decagonal number\n        // n = 29 is the twenty-ninth decagonal number\n        // n = 30 is the thirtieth decagonal number\n        // n = 31 is the thirty-first decagonal number\n        // n = 32 is the thirty-second decagonal number\n        // n = 33 is the\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmph3txb4mw.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 + n - 2*n = 0\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 + sqrt(1 + 8*n))/2\n        // n = (-1 +\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123921,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgta81fe2.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        double a = (Math.Sqrt(1 + 4 * 2 * n) - 1) / 2;\n        if (a == (long)a)\n            return (long)a;\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <026019a737ba4968872b1d96d742db79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <026019a737ba4968872b1d96d742db79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 3;\n        long c = -2 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) {\n            return -1;\n        }\n        long x1 = (long)((-b + Math.Sqrt(d)) / (2 * a));\n        long x2 = (long)((-b - Math.Sqrt(d)) / (2 * a));\n        if (x1 * (3 * x1 - 1) / 2 == n) {\n            return x1;\n        }\n        if (x2 * (3 * x2 - 1) / 2 == n) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123920,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6409e04036c949ea87bc927f8e66f0e3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6409e04036c949ea87bc927f8e66f0e3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 3;\n        long c = -2 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) {\n            return -1;\n        }\n        long x1 = (-b + (long)Math.Sqrt(d)) / (2 * a);\n        long x2 = (-b - (long)Math.Sqrt(d)) / (2 * a);\n        if (x1 > 0 && x1 == (x1 / 10) * 10) {\n            return x1;\n        }\n        if (x2 > 0 && x2 == (x2 / 10) * 10) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8c57d84e6231450393329e83f5370322>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8c57d84e6231450393329e83f5370322>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // 3*n^2 - n - 2*n = 0\n        // n = (1 + sqrt(1 + 12*2))/6\n        // n = (1 + sqrt(25))/6\n        // n = (1 + 5)/6\n        // n = 6/6\n        // n = 1\n        // n = (1 - sqrt(25))/6\n        // n = (-4)/6\n        // n = -2/3\n        // n = -1\n        // n = (1 + sqrt(1 + 12*3))/6\n        // n = (1 + sqrt(37))/6\n        // n = (1 + 6)/6\n        // n = 7/6\n        // n = 1\n        // n = (1 - sqrt(37))/6\n        // n = (-6)/6\n        // n = -1\n        // n = (1 + sqrt(1 + 12*4))/6\n        // n = (1 + sqrt(49))/6\n        // n = (1 + 7)/6\n        // n = 8/6\n        // n = 1\n        // n = (1 - sqrt(49))/6\n        // n = (-7)/6\n        // n = -1\n        // n = (1 + sqrt(1 + 12*5))/6\n        // n = (1 + sqrt(61))/6\n        // n = (1 + 8)/6\n        // n = 9/6\n        // n = 1\n        // n = (1 - sqrt(61))/6\n        // n = (-8)/6\n        // n = -1\n        // n = (1 + sqrt(1 + 12*6))/6\n        // n = (1 + sqrt(73))/6\n        // n = (1 + 9)/6\n        // n = 10/6\n        // n = 1\n        // n = (1 - sqrt(73))/6\n        // n = (-9)/6\n        // n = -1\n        // n = (1 + sqrt(1 + 12*7))/6\n        //\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmj0z5_xn.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 - 3n + 2n = 0\n        // n^2 - n = 0\n        // n(n-1) = 0\n        // n = 0 or n = 1\n        // n = 1\n        // n = (3*1^2 - 1)/2\n        // n = (3*1 - 1)/2\n        // n = (3 - 1)/2\n        // n = 1\n        // n = (3*1^2 - 1)/2\n        // n = (3*1 - 1)/2\n        // n = (3 - 1)/2\n        // n = 1\n        // n = (3*1^2 - 1)/2\n        // n = (3*1 - 1)/2\n        // n = (3 - 1)/2\n        // n = 1\n        // n = (3*1^2 - 1)/2\n        // n = (3*1 - 1)/2\n        // n = (3 - 1)/2\n        // n = 1\n        // n = (3*1^2 - 1)/2\n        // n = (3*1 - 1)/2\n        // n = (3 - 1)/2\n        // n = 1\n        // n = (3*1^2 - 1)/2\n        // n = (3*1 - 1)/2\n        // n = (3 - 1)/2\n        // n = 1\n        // n = (3*1^2 - 1)/2\n        // n = (3*1 - 1)/2\n        // n = (3 - 1)/2\n        // n = 1\n        // n = (3*1^2 - 1)/2\n        // n = (3*1 - 1)/2\n        // n = (3 - 1)/2\n        // n = 1\n        // n = (3*1^2 - 1)/2\n        // n = (3*1 - 1)/2\n        // n = (3 - 1)/2\n        // n = 1\n        // n = (3*1^2 - 1)/2\n        // n = (3*1 - 1)/2\n        // n = (3 - 1)/2\n       \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp63nu2rof.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = (long)Math.Sqrt(n);\n        if (a * a == n) {\n            return a;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123919,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0634a885106d4ad6968fc5a3baf56e0d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0634a885106d4ad6968fc5a3baf56e0d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n) / 2\n        // n^2 - 3n + 2n = 0\n        // n = (3 +- sqrt(9 - 8)) / 2\n        // n = (3 +- 1) / 2\n        // n = 1 or 2\n        // n = 1\n        return n;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8395ecd5f4c349a2858a22735683a6f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8395ecd5f4c349a2858a22735683a6f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 3;\n        long c = -2 * n;\n        long d = (long)Math.Sqrt(b * b - 4 * a * c);\n        if (d * d != b * b - 4 * a * c)\n            return -1;\n        long x1 = (-b + d) / (2 * a);\n        long x2 = (-b - d) / (2 * a);\n        if (x1 > 0 && x1 * (3 * x1 - 1) / 2 == n)\n            return x1;\n        if (x2 > 0 && x2 * (3 * x2 - 1) / 2 == n)\n            return x2;\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1746f99aba894ec6a70639256a04c6c7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1746f99aba894ec6a70639256a04c6c7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long nth = 0;\n        long i = 1;\n        while (nth < n) {\n            nth = i * (3 * i - 1) / 2;\n            i++;\n        }\n        if (nth == n)\n            return nth;\n        else\n            return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123920,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5edf9035d03f4da6a52eeef235cd9597>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5edf9035d03f4da6a52eeef235cd9597>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long nth = 0;\n        long i = 1;\n        while (nth < n) {\n            nth = i * (3 * i - 1) / 2;\n            i++;\n        }\n        if (nth == n) {\n            return nth;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6e9666f558e241de908fc22ba3a05d20>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6e9666f558e241de908fc22ba3a05d20>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 +- sqrt(1 + 24n)) / 6\n        // x must be an integer\n        // 1 + 24n must be a perfect square\n        // 1 + 24n = y^2\n        // 24n = y^2 - 1\n        // n = (y^2 - 1) / 24\n        // y^2 - 1 must be divisible by 24\n        // y^2 - 1 = 24k\n        // y^2 = 24k + 1\n        // y = sqrt(24k + 1)\n        // y must be an integer\n        // 24k + 1 must be a perfect square\n        // 24k + 1 = z^2\n        // 24k = z^2 - 1\n        // k = (z^2 - 1) / 24\n        // z^2 - 1 must be divisible by 24\n        // z^2 - 1 = 24m\n        // z^2 = 24m + 1\n        // z = sqrt(24m + 1)\n        // z must be an integer\n        // 24m + 1 must be a perfect square\n        // 24m + 1 = w^2\n        // 24m = w^2 - 1\n        // m = (w^2 - 1) / 24\n        // w^2 - 1 must be divisible by 24\n        // w^2 - 1 = 24n\n        // w^2 = 24n + 1\n        // w = sqrt(24n + 1)\n        // w must be an integer\n        // 24n + 1 must be a perfect square\n        // 24n + 1 = x^2\n        // 24n = x^2 - 1\n        // n = (x^2 - 1) / 24\n        // x^2 - 1 must be divisible by 24\n        // x^2 - 1 = 24n\n        // x^2 = 24n + 1\n        // x = sqrt(24n + 1)\n        // x must be an integer\n        // 24n + 1 must be a perfect square\n        // 24n + 1 = y^2\n        // 24n = y^2 - 1\n       \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwhveafwi.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long nth = 0;\n        long i = 1;\n        while (nth < n) {\n            nth = i * (3 * i - 1) / 2;\n            i++;\n        }\n        return nth;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <97cc2135f6e54d79983e33052f22a2ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <97cc2135f6e54d79983e33052f22a2ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // n = (3x^2 - x - 2n) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzup0g8xj.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // 3n^2 - n - 2n = 0\n        // n = (1 + sqrt(1 + 12*2))/6\n        // n = (1 + sqrt(25))/6\n        // n = (1 + 5)/6\n        // n = 6/6\n        // n = 1\n        // n = (1 - sqrt(25))/6\n        // n = (-4)/6\n        // n = -2/3\n        // n = -1\n        // n = (1 + sqrt(1 + 12*3))/6\n        // n = (1 + sqrt(37))/6\n        // n = (1 + 6)/6\n        // n = 7/6\n        // n = 1\n        // n = (1 - sqrt(37))/6\n        // n = (-6)/6\n        // n = -1\n        // n = (1 + sqrt(1 + 12*4))/6\n        // n = (1 + sqrt(49))/6\n        // n = (1 + 7)/6\n        // n = 8/6\n        // n = 1\n        // n = (1 - sqrt(49))/6\n        // n = (-7)/6\n        // n = -1\n        // n = (1 + sqrt(1 + 12*5))/6\n        // n = (1 + sqrt(61))/6\n        // n = (1 + 8)/6\n        // n = 9/6\n        // n = 1\n        // n = (1 - sqrt(61))/6\n        // n = (-8)/6\n        // n = -1\n        // n = (1 + sqrt(1 + 12*6))/6\n        // n = (1 + sqrt(73))/6\n        // n = (1 + 9)/6\n        // n = 10/6\n        // n = 1\n        // n = (1 - sqrt(73))/6\n        // n = (-9)/6\n        // n = -1\n        // n = (1 + sqrt(1 + 12*7))/6\n        // n =\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptso1_8_m.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 - 3n + 2n = 0\n        // n^2 - n = 0\n        // n(n - 1) = 0\n        // n = 0 or n = 1\n        // n = 0 is not a decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 10 is the second decagonal number\n        // n = 100 is the third decagonal number\n        // n = 1000 is the fourth decagonal number\n        // n = 10000 is the fifth decagonal number\n        // n = 100000 is the sixth decagonal number\n        // n = 1000000 is the seventh decagonal number\n        // n = 10000000 is the eighth decagonal number\n        // n = 100000000 is the ninth decagonal number\n        // n = 1000000000 is the tenth decagonal number\n        // n = 10000000000 is the eleventh decagonal number\n        // n = 100000000000 is the twelfth decagonal number\n        // n = 1000000000000 is the thirteenth decagonal number\n        // n = 10000000000000 is the fourteenth decagonal number\n        // n = 100000000000000 is the fifteenth decagonal number\n        // n = 1000000000000000 is the sixteenth decagonal number\n        // n = 10000000000000000 is the seventeenth decagonal number\n        // n = 100000000000000000 is the eighteenth decagonal number\n        // n = 1000000000000000000 is the nineteenth decagonal number\n        // n = 10000000000000000000 is the twentieth decagonal number\n        // n = 100000000000000000000 is the twenty-first decagonal number\n        // n = 1000000000000000000000 is the twenty-second decagonal number\n        // n = 10000000000000000000000 is the twenty-third decagonal number\n        // n = 100000000000000000000000 is the twenty-fourth decagonal number\n        // n = 1000000000000000000000000 is the twenty-fifth decagonal number\n        // n = 10000000000000000000000000 is the twenty-sixth decagonal number\n        // n = 100000000000000000000000000 is the twenty-seventh decagonal number\n        // n = 1000000000000000000000000000 is the twenty-eighth decagonal number\n        // n = 10000000000000000000000000000 is the twenty-ninth decagonal number\n        // n = 100\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps54qsu36.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp56br52p2.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        double x = (Math.Sqrt(4 * n * n + 4 * n + 1) + 1) / 2;\n        if (x == (long)x)\n            return (long)x;\n        else\n            return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <345ce2726e6d4ad7ad578595b16ab43f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <345ce2726e6d4ad7ad578595b16ab43f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = (long)Math.Sqrt(n);\n        if (a * a == n) {\n            return a;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123919,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0634a885106d4ad6968fc5a3baf56e0d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0634a885106d4ad6968fc5a3baf56e0d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 3;\n        long c = -2 * n;\n        long d = (long)Math.Sqrt(b * b - 4 * a * c);\n        if (d * d != b * b - 4 * a * c) return 0;\n        long x1 = (-b + d) / (2 * a);\n        long x2 = (-b - d) / (2 * a);\n        if (x1 > 0 && x1 * (3 * x1 - 1) / 2 == n) return x1;\n        if (x2 > 0 && x2 * (3 * x2 - 1) / 2 == n) return x2;\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4d9bf9082a0a427bb7033e708ad91611>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4d9bf9082a0a427bb7033e708ad91611>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        double a = (Math.Sqrt(4 * n * n + 4 * n + 1) + 1) / 2;\n        if (a == (long)a)\n            return (long)a;\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5e1fd8815b214fb582c6e81d4beb87b2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5e1fd8815b214fb582c6e81d4beb87b2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 3;\n        long c = -2 * n;\n        long d = (long)Math.Sqrt(b * b - 4 * a * c);\n        if (d * d != b * b - 4 * a * c)\n            return -1;\n        long x1 = (-b + d) / (2 * a);\n        long x2 = (-b - d) / (2 * a);\n        if (x1 <= 0)\n            return -1;\n        if (x1 * (3 * x1 - 1) / 2 == n)\n            return x1;\n        if (x2 * (3 * x2 - 1) / 2 == n)\n            return x2;\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <02b2624936d84343a5f310fc7927cb69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <02b2624936d84343a5f310fc7927cb69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 1;\n        long c = -2 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) {\n            return -1;\n        }\n        long x1 = (long)((-b + Math.Sqrt(d)) / (2 * a));\n        long x2 = (long)((-b - Math.Sqrt(d)) / (2 * a));\n        if (x1 > 0 && x1 % 10 == 0) {\n            return x1;\n        }\n        if (x2 > 0 && x2 % 10 == 0) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b21358fe1c8c4b6e86d6ce7a60fd76f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b21358fe1c8c4b6e86d6ce7a60fd76f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n) / 2\n        // 3*n^2 - n - 2*n = 0\n        // n = (1 +- sqrt(1 + 12*2)) / 6\n        // n = (1 + sqrt(25)) / 6\n        // n = (1 + 5) / 6\n        // n = 6 / 6\n        // n = 1\n        // n = (1 - sqrt(25)) / 6\n        // n = (1 - 5) / 6\n        // n = -4 / 6\n        // n = 0.66666...\n        // n is not an integer\n        // n is not a decagonal number\n        // n = 1\n        // n is a decagonal number\n        // n = 1\n        // n = (1 +- sqrt(1 + 12*2)) / 6\n        // n = (1 + sqrt(25)) / 6\n        // n = (1 + 5) / 6\n        // n = 6 / 6\n        // n = 1\n        // n = (1 - sqrt(25)) / 6\n        // n = (1 - 5) / 6\n        // n = -4 / 6\n        // n = 0.66666...\n        // n is not an integer\n        // n is not a decagonal number\n        // n = 1\n        // n is a decagonal number\n        // n = 1\n        // n = (1 +- sqrt(1 + 12*2)) / 6\n        // n = (1 + sqrt(25)) / 6\n        // n = (1 + 5) / 6\n        // n = 6 / 6\n        // n = 1\n        // n = (1 - sqrt(25)) / 6\n        // n = (1 - 5) / 6\n        // n = -4 / 6\n        // n = 0.66666...\n        // n is not an integer\n        // n is not a decagonal number\n        // n = 1\n        // n is a decagonal number\n        // n = 1\n        // n = (1 +- sqrt(1 + 12*2)) / 6\n        // n = (1 + sqrt(25)) / 6\n        // n = (1\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmph7gficze.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long nth = 0;\n        long i = 1;\n        while (nth < n) {\n            nth = i * (3 * i - 1) / 2;\n            i++;\n        }\n        if (nth == n) {\n            return 1;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123920,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <51f701ab376b40819c6a671d6bd9f24d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <51f701ab376b40819c6a671d6bd9f24d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // 3*n^2 - n - 2*n = 0\n        // n = (1 + sqrt(1 + 12*2))/6\n        // n = (1 + sqrt(25))/6\n        // n = (1 + 5)/6\n        // n = 6/6\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n       \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123919,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpz0zg12ij.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n) / 2\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2*n/3 = 0\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpprhdg673.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 +- sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkoff0zso.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxqohqw5p.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 1;\n        long c = -2 * n;\n        long d = (long)Math.Sqrt(b * b - 4 * a * c);\n        if (d * d != b * b - 4 * a * c) return 0;\n        long x1 = (-b + d) / (2 * a);\n        long x2 = (-b - d) / (2 * a);\n        if (x1 > 0 && x1 % 10 == 0) return x1;\n        if (x2 > 0 && x2 % 10 == 0) return x2;\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123919,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c714c3252c22445188488c775bc2d96d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c714c3252c22445188488c775bc2d96d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // 3*n^2 - n - 2*n = 0\n        // n = (1 + sqrt(1 + 12*2))/6\n        // n = (1 + sqrt(25))/6\n        // n = (1 + 5)/6\n        // n = 6/6\n        // n = 1\n        // n = (1 - sqrt(25))/6\n        // n = (-4)/6\n        // n = -2/3\n        // n = -1\n        // n = (1 - sqrt(1 + 12*2))/6\n        // n = (1 - sqrt(25))/6\n        // n = (-4)/6\n        // n = -2/3\n        // n = -1\n        // n = (1 + sqrt(1 + 12*2))/6\n        // n = (1 + sqrt(25))/6\n        // n = (1 + 5)/6\n        // n = 6/6\n        // n = 1\n        // n = (1 - sqrt(1 + 12*2))/6\n        // n = (1 - sqrt(25))/6\n        // n = (-4)/6\n        // n = -2/3\n        // n = -1\n        // n = (1 + sqrt(1 + 12*2))/6\n        // n = (1 + sqrt(25))/6\n        // n = (1 + 5)/6\n        // n = 6/6\n        // n = 1\n        // n = (1 - sqrt(1 + 12*2))/6\n        // n = (1 - sqrt(25))/6\n        // n = (-4)/6\n        // n = -2/3\n        // n = -1\n        // n = (1 + sqrt(1 + 12*2))/6\n        // n = (1 + sqrt(25))/6\n        // n = (1 + 5)/6\n        // n = 6/6\n        // n = 1\n        // n = (1 - sqrt(1 + 12*2))/6\n        // n = (1 - sq\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123919,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpo0upuott.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 3;\n        long c = -2 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) {\n            return -1;\n        }\n        long x1 = (long)((-b + Math.Sqrt(d)) / (2 * a));\n        long x2 = (long)((-b - Math.Sqrt(d)) / (2 * a));\n        if (x1 > 0 && x1 * (3 * x1 - 1) / 2 == n) {\n            return x1;\n        }\n        if (x2 > 0 && x2 * (3 * x2 - 1) / 2 == n) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1b54f33c59b24c208b13b173bdc5a0db>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1b54f33c59b24c208b13b173bdc5a0db>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // n = (3x^2 - x - 2n) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzup0g8xj.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = (long)Math.Sqrt(n);\n        if (a * a == n) {\n            return a;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123919,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0634a885106d4ad6968fc5a3baf56e0d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0634a885106d4ad6968fc5a3baf56e0d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long x = (long)Math.Sqrt(n);\n        if (x * x == n && (x % 10) == 3)\n            return x;\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <57b272e77054438293b16332f80f5b45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <57b272e77054438293b16332f80f5b45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxqohqw5p.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long nthDecagonal = 0;\n        for (long i = 1; i <= n; i++) {\n            nthDecagonal = i * (3 * i - 1) / 2;\n        }\n        return nthDecagonal;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8fc7e93ea3e3488eaccd294e8cb889bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8fc7e93ea3e3488eaccd294e8cb889bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        double x = (1 + Math.Sqrt(1 + 24 * n)) / 6;\n        return x == (long)x ? (long)x : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123920,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <18d04d212e8246d0962dbf8c4b3399a5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <18d04d212e8246d0962dbf8c4b3399a5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // 3*n^2 - n - 2*n = 0\n        // n = (-1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (1 + sqrt(1 + 12*n))/6\n        // n = (\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpy4tic08d.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        double x = (Math.Sqrt(1 + 4 * 2 * n) - 1) / 2;\n        return x == (long)x ? (long)x : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <80914b91831a4c4b9fab40873b35388a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <80914b91831a4c4b9fab40873b35388a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3 * n^2 - n) / 2\n        // n^2 - n - 2n/3 = 0\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfa864k1o.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 - 3n + 2n = 0\n        // n^2 - n = 0\n        // n(n-1) = 0\n        // n = 0 or n = 1\n        // n = 0 is not a decagonal number\n        // n = 1 is the first decagonal number\n        // n = 2 is the second decagonal number\n        // n = 3 is the third decagonal number\n        // n = 4 is the fourth decagonal number\n        // n = 5 is the fifth decagonal number\n        // n = 6 is the sixth decagonal number\n        // n = 7 is the seventh decagonal number\n        // n = 8 is the eighth decagonal number\n        // n = 9 is the ninth decagonal number\n        // n = 10 is the tenth decagonal number\n        // n = 11 is the eleventh decagonal number\n        // n = 12 is the twelfth decagonal number\n        // n = 13 is the thirteenth decagonal number\n        // n = 14 is the fourteenth decagonal number\n        // n = 15 is the fifteenth decagonal number\n        // n = 16 is the sixteenth decagonal number\n        // n = 17 is the seventeenth decagonal number\n        // n = 18 is the eighteenth decagonal number\n        // n = 19 is the nineteenth decagonal number\n        // n = 20 is the twentieth decagonal number\n        // n = 21 is the twenty-first decagonal number\n        // n = 22 is the twenty-second decagonal number\n        // n = 23 is the twenty-third decagonal number\n        // n = 24 is the twenty-fourth decagonal number\n        // n = 25 is the twenty-fifth decagonal number\n        // n = 26 is the twenty-sixth decagonal number\n        // n = 27 is the twenty-seventh decagonal number\n        // n = 28 is the twenty-eighth decagonal number\n        // n = 29 is the twenty-ninth decagonal number\n        // n = 30 is the thirtieth decagonal number\n        // n = 31 is the thirty-first decagonal number\n        // n = 32 is the thirty-second decagonal number\n        // n = 33 is the thirty-third decagonal number\n        // n = 34\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwacob8p3.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = (long)Math.Sqrt(1 + 4 * 2 * n);\n        if (a * a == 1 + 4 * 2 * n) {\n            return a;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ff5f55eb32034cf1a0ba432f4fcfb723>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ff5f55eb32034cf1a0ba432f4fcfb723>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3 * x^2 - x) / 2\n        // n = (3 * x^2 - x) / 2\n        // 3 * x^2 - x - 2 * n = 0\n        // x = (1 + sqrt(1 + 24 * n)) / 6\n        // x = (1 - sqrt(1 + 24 * n)) / 6\n        // x = (1 + sqrt(1 + 24 * n)) / 6\n        // x = (1 - sqrt(1 + 24 * n)) / 6\n        // x = (1 + sqrt(1 + 24 * n)) / 6\n        // x = (1 - sqrt(1 + 24 * n)) / 6\n        // x = (1 + sqrt(1 + 24 * n)) / 6\n        // x = (1 - sqrt(1 + 24 * n)) / 6\n        // x = (1 + sqrt(1 + 24 * n)) / 6\n        // x = (1 - sqrt(1 + 24 * n)) / 6\n        // x = (1 + sqrt(1 + 24 * n)) / 6\n        // x = (1 - sqrt(1 + 24 * n)) / 6\n        // x = (1 + sqrt(1 + 24 * n)) / 6\n        // x = (1 - sqrt(1 + 24 * n)) / 6\n        // x = (1 + sqrt(1 + 24 * n)) / 6\n        // x = (1 - sqrt(1 + 24 * n)) / 6\n        // x = (1 + sqrt(1 + 24 * n)) / 6\n        // x = (1 - sqrt(1 + 24 * n)) / 6\n        // x = (1 + sqrt(1 + 24 * n)) / 6\n        // x = (1 - sqrt(1 + 24 * n)) / 6\n        // x = (1 + sqrt(1 + 24 * n)) / 6\n        // x = (1 - sqrt(1 + 24 * n)) / 6\n        // x = (1 + sqrt(1 + 24 * n)) / 6\n        // x = (1 - sqrt(1 + 24 * n)) / 6\n        // x = (1 +\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpky3q5vj6.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n) / 2\n        // n^2 - 3n + 2n = 0\n        // n(n - 3 + 2) = 0\n        // n = 0 or n = 3 - 2 = 1\n        // n = 0 is not a decagonal number\n        // n = 1 is a decagonal number\n        // So, n is a decagonal number if n = 1\n        if (n == 1) {\n            return 1;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dfeb1c7bdaf847d1a44a392576450a5e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dfeb1c7bdaf847d1a44a392576450a5e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // n = (3x^2 - x - 2n) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 +- sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123917,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_rmvc45m.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 3;\n        long c = -2 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) {\n            return -1;\n        }\n        long x1 = (-b + (long)Math.Sqrt(d)) / (2 * a);\n        long x2 = (-b - (long)Math.Sqrt(d)) / (2 * a);\n        if (x1 * (3 * x1 - 1) / 2 == n) {\n            return x1;\n        }\n        if (x2 * (3 * x2 - 1) / 2 == n) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cf6aba3aeb7d4a85a9efde577b3a2daf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cf6aba3aeb7d4a85a9efde577b3a2daf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long x = (long)Math.Sqrt(n);\n        if (x * x == n) {\n            return x;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ca00d16e4d9046a7800c41bc7463ce70>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ca00d16e4d9046a7800c41bc7463ce70>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 3;\n        long c = -2 * n;\n        long d = (long)Math.Sqrt(b * b - 4 * a * c);\n        if (d * d != b * b - 4 * a * c) {\n            return -1;\n        }\n        long x1 = (-b + d) / (2 * a);\n        long x2 = (-b - d) / (2 * a);\n        if (x1 > 0 && x1 % 3 == 1) {\n            return x1;\n        }\n        if (x2 > 0 && x2 % 3 == 1) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6f1ce917783b4e7181b7151e9ec6441b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6f1ce917783b4e7181b7151e9ec6441b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 3;\n        long c = -2 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) return -1;\n        long x1 = (-b + (long)Math.Sqrt(d)) / (2 * a);\n        long x2 = (-b - (long)Math.Sqrt(d)) / (2 * a);\n        if (x1 > 0 && x1 % 10 == 0) return x1;\n        if (x2 > 0 && x2 % 10 == 0) return x2;\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfabf955e829479ca447754d94c4fe1e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfabf955e829479ca447754d94c4fe1e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x must be an integer\n        // 1 + 24n must be a perfect square\n        // 24n = y^2 - 1\n        // n = (y^2 - 1) / 24\n        // y^2 = 1 + 24n\n        // y = sqrt(1 + 24n)\n        // y must be an integer\n        // y must be odd\n        // y = 2k + 1\n        // y^2 = 4k^2 + 4k + 1\n        // y^2 = 4(k^2 + k) + 1\n        // y^2 = 4(k + 1/2)^2\n        // y^2 = 4(k + 1/2)^2 - 1\n        // y^2 = 4(k + 1/2)^2 - 4(1/2)^2\n        // y^2 = 4(k + 1/2)^2 - 4(1/2)^2 + 4(1/2)^2 - 4(1/2)^2\n        // y^2 = 4((k + 1/2)^2 - (1/2)^2) + 4(1/2)^2 - 4(1/2)^2\n        // y^2 = 4((k + 1/2)^2 - (1/2)^2 + (1/2)^2 - (1/2)^2)\n        // y^2 = 4((k + 1/2)^2 - (1/2)^2 + (1/2)^2 - (1/2)^2 + (1/2)^2 - (1/2)^2)\n        // y^2 = 4((k + 1/2)^2 - (1/2)^2 + (1/2)^2 - (1/2)^2 + (1/2)^2 - (1/2)^2 + (1/2)^2 - (1/2)^2)\n        // y^2 = 4((k + 1/2)\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppougod35.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 +- sqrt(1 + 24n)) / 6\n        double x = (1 + Math.Sqrt(1 + 24 * n)) / 6;\n        if (x == (int)x) {\n            return (long)x;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b489a7c7bd4e42ee8ff40a4030031e44>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b489a7c7bd4e42ee8ff40a4030031e44>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 1;\n        long c = -2 * n;\n        long d = (long)Math.Sqrt(b * b - 4 * a * c);\n        if (d * d != b * b - 4 * a * c)\n            return 0;\n        long x1 = (-b + d) / (2 * a);\n        long x2 = (-b - d) / (2 * a);\n        if (x1 > 0 && x1 % 10 == 0)\n            return x1;\n        if (x2 > 0 && x2 % 10 == 0)\n            return x2;\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0a7d72d0bb8345599c807b20ac05b29e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0a7d72d0bb8345599c807b20ac05b29e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1, b = 1, c = 1;\n        while (a < n) {\n            c = b;\n            b = a;\n            a = 10 * b + c;\n        }\n        if (a == n) return 1;\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <355dc6542e6d45fa90ff1cd718977f09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <355dc6542e6d45fa90ff1cd718977f09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 3;\n        long c = -2 * n;\n        long d = (long)Math.Sqrt(b * b - 4 * a * c);\n        if ((b + d) % (2 * a) == 0) {\n            return (b + d) / (2 * a);\n        } else if ((b - d) % (2 * a) == 0) {\n            return (b - d) / (2 * a);\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b2133318795c4d9f9842b2843a7bd6c4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b2133318795c4d9f9842b2843a7bd6c4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // 3*n^2 - n - 2*n = 0\n        // n = (1 + sqrt(1 + 12*2))/6\n        // n = (1 + sqrt(25))/6\n        // n = (1 + 5)/6\n        // n = 6/6\n        // n = 1\n        return (long)((1 + Math.Sqrt(1 + 12*n))/6);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9434a09bd9544bbf86cc8d710035aa06>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9434a09bd9544bbf86cc8d710035aa06>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 3;\n        long c = -2 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) {\n            return -1;\n        }\n        long x1 = (-b + (long)Math.Sqrt(d)) / (2 * a);\n        long x2 = (-b - (long)Math.Sqrt(d)) / (2 * a);\n        if (x1 > 0 && x1 % 10 == 0) {\n            return x1;\n        }\n        if (x2 > 0 && x2 % 10 == 0) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1a08a73f5bf44a989df730758445a0ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1a08a73f5bf44a989df730758445a0ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // 3*n^2 - n - 2*n = 0\n        // n = (1 +- sqrt(1 + 12*2))/6\n        // n = (1 +- sqrt(25))/6\n        // n = (1 +- 5)/6\n        // n = 6 or -1\n        // n = 6\n        return n;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c8bd92947b304c21823aac647763e3ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c8bd92947b304c21823aac647763e3ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3 * n^2 - n) / 2\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - 3n - 2n / 3 = 0\n        // n^2 - 5n / 3 = 0\n        // n^2 - 5n = 0\n        // n(n - 5) = 0\n        // n = 0, n = 5\n        // n = 5\n        // n = 5\n        return n;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8a6267c15cc2495c805e81fc96758587>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8a6267c15cc2495c805e81fc96758587>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 3;\n        long c = -2 * n;\n        long d = (long)Math.Sqrt(b * b - 4 * a * c);\n        if (d * d != b * b - 4 * a * c) return 0;\n        long x1 = (-b + d) / (2 * a);\n        long x2 = (-b - d) / (2 * a);\n        if (x1 > 0 && x1 % 10 == 0) return x1;\n        if (x2 > 0 && x2 % 10 == 0) return x2;\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <59eb157972e94a34aca704f065147c22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <59eb157972e94a34aca704f065147c22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // n = (3x^2 - x - 2n) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzup0g8xj.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 3;\n        long c = -2 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) return -1;\n        long x1 = (-b + (long)Math.Sqrt(d)) / (2 * a);\n        long x2 = (-b - (long)Math.Sqrt(d)) / (2 * a);\n        if (x1 * (3 * x1 - 1) / 2 == n) return x1;\n        if (x2 * (3 * x2 - 1) / 2 == n) return x2;\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123919,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baca38327f3d49dc96d6a7c9955a0fbf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baca38327f3d49dc96d6a7c9955a0fbf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        double a = Math.Sqrt(1 + 4 * 2 * n);\n        if (a == Math.Floor(a)) {\n            return (long)a;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eb0c0c5455194ebc96fd7c5e5645c88e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eb0c0c5455194ebc96fd7c5e5645c88e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 - 3n + 2n = 0\n        // n^2 - n = 0\n        // n(n-1) = 0\n        // n = 0 or n = 1\n        // n = 0 is not a decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 2 is the second decagonal number\n        // n = 3 is the third decagonal number\n        // n = 4 is the fourth decagonal number\n        // n = 5 is the fifth decagonal number\n        // n = 6 is the sixth decagonal number\n        // n = 7 is the seventh decagonal number\n        // n = 8 is the eighth decagonal number\n        // n = 9 is the ninth decagonal number\n        // n = 10 is the tenth decagonal number\n        // n = 11 is the eleventh decagonal number\n        // n = 12 is the twelfth decagonal number\n        // n = 13 is the thirteenth decagonal number\n        // n = 14 is the fourteenth decagonal number\n        // n = 15 is the fifteenth decagonal number\n        // n = 16 is the sixteenth decagonal number\n        // n = 17 is the seventeenth decagonal number\n        // n = 18 is the eighteenth decagonal number\n        // n = 19 is the nineteenth decagonal number\n        // n = 20 is the twentieth decagonal number\n        // n = 21 is the twenty-first decagonal number\n        // n = 22 is the twenty-second decagonal number\n        // n = 23 is the twenty-third decagonal number\n        // n = 24 is the twenty-fourth decagonal number\n        // n = 25 is the twenty-fifth decagonal number\n        // n = 26 is the twenty-sixth decagonal number\n        // n = 27 is the twenty-seventh decagonal number\n        // n = 28 is the twenty-eighth decagonal number\n        // n = 29 is the twenty-ninth decagonal number\n        // n = 30 is the thirtieth decagonal number\n        // n = 31 is the thirty-first decagonal number\n        // n = 32 is the thirty-second decagonal number\n        // n = 33 is the\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmph3txb4mw.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long nth = 0;\n        long i = 0;\n        while (nth < n) {\n            i++;\n            nth = i * (3 * i - 1) / 2;\n        }\n        if (nth == n) {\n            return i;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <57fc24436a224a349d5a281a6dc5a3ba>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <57fc24436a224a349d5a281a6dc5a3ba>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long nth = 0;\n        long i = 0;\n        while (nth < n) {\n            i++;\n            nth = i * (3 * i - 1) / 2;\n        }\n        if (nth == n) {\n            return i;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <57fc24436a224a349d5a281a6dc5a3ba>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <57fc24436a224a349d5a281a6dc5a3ba>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 3;\n        long c = -2 * n;\n        long d = (long)Math.Sqrt(b * b - 4 * a * c);\n        if (d * d != b * b - 4 * a * c) {\n            return -1;\n        }\n        long x1 = (-b + d) / (2 * a);\n        long x2 = (-b - d) / (2 * a);\n        if (x1 > 0 && x1 % 2 == 0) {\n            return x1;\n        }\n        if (x2 > 0 && x2 % 2 == 0) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <22929f7eb6f74235b522517c06c4e097>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <22929f7eb6f74235b522517c06c4e097>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long nth = 0;\n        long i = 1;\n        while (nth < n) {\n            nth = i * (3 * i - 1) / 2;\n            i++;\n        }\n        if (nth == n) {\n            return nth;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <414663a5be0649d3b1c191556832f8d5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <414663a5be0649d3b1c191556832f8d5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3 * n^2 - n) / 2\n        // 3 * n^2 - n - 2n = 0\n        // n = (1 + sqrt(1 + 12 * 2)) / 6\n        // n = (1 + sqrt(25)) / 6\n        // n = (1 + 5) / 6\n        // n = 6 / 6\n        // n = 1\n        // n = (1 - sqrt(25)) / 6\n        // n = (-4) / 6\n        // n = -2 / 3\n        // n = -1\n        // n = (1 + sqrt(1 + 12 * 3)) / 6\n        // n = (1 + sqrt(37)) / 6\n        // n = (1 + 6) / 6\n        // n = 7 / 6\n        // n = 1\n        // n = (1 - sqrt(37)) / 6\n        // n = (-6) / 6\n        // n = -1\n        // n = (1 + sqrt(1 + 12 * 4)) / 6\n        // n = (1 + sqrt(49)) / 6\n        // n = (1 + 7) / 6\n        // n = 8 / 6\n        // n = 1\n        // n = (1 - sqrt(49)) / 6\n        // n = (-8) / 6\n        // n = -4 / 3\n        // n = -1\n        // n = (1 + sqrt(1 + 12 * 5)) / 6\n        // n = (1 + sqrt(61)) / 6\n        // n = (1 + 8) / 6\n        // n = 9 / 6\n        // n = 1\n        // n = (1 - sqrt(61)) / 6\n        // n = (-10) / 6\n        // n = -5 / 3\n        // n = -1\n        // n = (1 + sqrt(1 + 12 * 6)) / 6\n        // n = (1 + sqrt(73)) / 6\n        // n = (1 + 9) / 6\n        // n = 10 / 6\n        // n = 5 / 3\n        // n = 1\n        // n = (1 - sqrt(73)) / 6\n        //\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvrryny1m.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long n2 = n * 2;\n        long n3 = n * 3;\n        long n4 = n * 4;\n        long n5 = n * 5;\n        long n6 = n * 6;\n        long n7 = n * 7;\n        long n8 = n * 8;\n        long n9 = n * 9;\n        long n10 = n * 10;\n        long n11 = n * 11;\n        long n12 = n * 12;\n        long n13 = n * 13;\n        long n14 = n * 14;\n        long n15 = n * 15;\n        long n16 = n * 16;\n        long n17 = n * 17;\n        long n18 = n * 18;\n        long n19 = n * 19;\n        long n20 = n * 20;\n        long n21 = n * 21;\n        long n22 = n * 22;\n        long n23 = n * 23;\n        long n24 = n * 24;\n        long n25 = n * 25;\n        long n26 = n * 26;\n        long n27 = n * 27;\n        long n28 = n * 28;\n        long n29 = n * 29;\n        long n30 = n * 30;\n        long n31 = n * 31;\n        long n32 = n * 32;\n        long n33 = n * 33;\n        long n34 = n * 34;\n        long n35 = n * 35;\n        long n36 = n * 36;\n        long n37 = n * 37;\n        long n38 = n * 38;\n        long n39 = n * 39;\n        long n40 = n * 40;\n        long n41 = n * 41;\n        long n42 = n * 42;\n        long n43 = n * 43;\n        long n44 = n * 44;\n        long n45 = n * 45;\n        long n46 = n * 46;\n        long n47 = n * 47;\n        long n48 = n * 48;\n        long n49 = n * 49;\n        long n50 = n * 50;\n        long n51 = n * 51;\n        long n52 = n * 52;\n       \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp64cucgca.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long x = (long)Math.Sqrt(n);\n        if (x * x == n) {\n            return x;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ca00d16e4d9046a7800c41bc7463ce70>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ca00d16e4d9046a7800c41bc7463ce70>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long nth = (long)Math.Pow(10, 2) * n + (long)Math.Pow(10, 1) * n + n;\n        long sqrt = (long)Math.Sqrt(nth);\n        if (sqrt * sqrt == nth) {\n            return sqrt;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <23b29d4650294e5f801d3458278360ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <23b29d4650294e5f801d3458278360ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long nth = 0;\n        long i = 1;\n        while (nth < n) {\n            nth = i * (3 * i - 1) / 2;\n            i++;\n        }\n        if (nth == n) {\n            return nth;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <be0acde6e9c047efaa00c7009b07b4c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <be0acde6e9c047efaa00c7009b07b4c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // 3*n^2 - n - 2*n = 0\n        // n^2 - (1/3)n - (2/3) = 0\n        // n = (1/3) +/- sqrt((1/9) + (8/3))\n        // n = (1/3) +/- (1 + sqrt(33))/6\n        // n = (1 + sqrt(33))/6\n        // n = (1 - sqrt(33))/6\n        // n = (1 + sqrt(33))/6\n        // n = (1 - sqrt(33))/6\n        // n = (1 + sqrt(33))/6\n        // n = (1 - sqrt(33))/6\n        // n = (1 + sqrt(33))/6\n        // n = (1 - sqrt(33))/6\n        // n = (1 + sqrt(33))/6\n        // n = (1 - sqrt(33))/6\n        // n = (1 + sqrt(33))/6\n        // n = (1 - sqrt(33))/6\n        // n = (1 + sqrt(33))/6\n        // n = (1 - sqrt(33))/6\n        // n = (1 + sqrt(33))/6\n        // n = (1 - sqrt(33))/6\n        // n = (1 + sqrt(33))/6\n        // n = (1 - sqrt(33))/6\n        // n = (1 + sqrt(33))/6\n        // n = (1 - sqrt(33))/6\n        // n = (1 + sqrt(33))/6\n        // n = (1 - sqrt(33))/6\n        // n = (1 + sqrt(33))/6\n        // n = (1 - sqrt(33))/6\n        // n = (1 + sqrt(33))/6\n        // n = (1 - sqrt(33))/6\n        // n = (1 + sqrt(33))/6\n        // n = (1 - sqrt\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphg29q2om.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxqohqw5p.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long num = n;\n        long nth = 0;\n        long i = 1;\n        while (nth < num) {\n            nth = i * (3 * i - 1) / 2;\n            i++;\n        }\n        if (nth == num) {\n            return 1;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8f37fb7e82634c819fb8722d1cd51d84>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8f37fb7e82634c819fb8722d1cd51d84>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long nth = 0;\n        long i = 1;\n        while (nth < n) {\n            nth = i * (3 * i - 1) / 2;\n            i++;\n        }\n        return nth;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <97cc2135f6e54d79983e33052f22a2ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <97cc2135f6e54d79983e33052f22a2ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        double x = (Math.Sqrt(4 * n * n + 4 * n + 1) + 1) / 2;\n        if (x == (long)x)\n            return (long)x;\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <363e13aef88e49ada2675cf9568ed8b5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <363e13aef88e49ada2675cf9568ed8b5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        double x = (1 + Math.Sqrt(1 + 24 * n)) / 6;\n        return x == (long)x ? (long)x : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123920,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <18d04d212e8246d0962dbf8c4b3399a5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <18d04d212e8246d0962dbf8c4b3399a5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // 3*n^2 - n - 2*n = 0\n        // n = (1 + sqrt(1 + 12*2))/6\n        // n = (1 + sqrt(25))/6\n        // n = (1 + 5)/6\n        // n = 6/6\n        // n = 1\n        return (long)((1 + Math.Sqrt(1 + 12*n))/6);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9434a09bd9544bbf86cc8d710035aa06>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9434a09bd9544bbf86cc8d710035aa06>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 - 3n + 2n = 0\n        // n^2 - n = 0\n        // n(n - 1) = 0\n        // n = 0 or n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n       \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123924,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpo1dweqx_.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 - 3n + 2n = 0\n        // n = (3 + sqrt(9 + 8*n))/2\n        // n = (3 + sqrt(9 + 8*n))/2\n        // n = (3 + sqrt(9 + 8*n))/2\n        // n = (3 + sqrt(9 + 8*n))/2\n        // n = (3 + sqrt(9 + 8*n))/2\n        // n = (3 + sqrt(9 + 8*n))/2\n        // n = (3 + sqrt(9 + 8*n))/2\n        // n = (3 + sqrt(9 + 8*n))/2\n        // n = (3 + sqrt(9 + 8*n))/2\n        // n = (3 + sqrt(9 + 8*n))/2\n        // n = (3 + sqrt(9 + 8*n))/2\n        // n = (3 + sqrt(9 + 8*n))/2\n        // n = (3 + sqrt(9 + 8*n))/2\n        // n = (3 + sqrt(9 + 8*n))/2\n        // n = (3 + sqrt(9 + 8*n))/2\n        // n = (3 + sqrt(9 + 8*n))/2\n        // n = (3 + sqrt(9 + 8*n))/2\n        // n = (3 + sqrt(9 + 8*n))/2\n        // n = (3 + sqrt(9 + 8*n))/2\n        // n = (3 + sqrt(9 + 8*n))/2\n        // n = (3 + sqrt(9 + 8*n))/2\n        // n = (3 + sqrt(9 + 8*n))/2\n        // n = (3 + sqrt(9 + 8*n))/2\n        // n = (3 + sqrt(9 + 8*n))/2\n        // n = (3 + sqrt(9 + 8*n))/2\n        // n = (3 +\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123924,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1c5t_0i8.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long x = 1;\n        while (x * (3 * x - 1) / 2 < n) {\n            x++;\n        }\n        if (x * (3 * x - 1) / 2 == n) {\n            return x;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ca16a13cb99b487aa7cbd7a9d3089598>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ca16a13cb99b487aa7cbd7a9d3089598>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // n = (3x^2 - x - 2n) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzup0g8xj.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 3;\n        long c = -2 * n;\n        long d = (long)Math.Sqrt(b * b - 4 * a * c);\n        if (d * d != b * b - 4 * a * c) return -1;\n        long x1 = (-b + d) / (2 * a);\n        long x2 = (-b - d) / (2 * a);\n        if (x1 * (3 * x1 - 1) / 2 == n) return x1;\n        if (x2 * (3 * x2 - 1) / 2 == n) return x2;\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <815a644305e2480e87be6e4745253ede>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <815a644305e2480e87be6e4745253ede>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        double x = (Math.Sqrt(4*n*n + 4*n + 1) + 1) / 2;\n        if (x == (int)x)\n            return (long)x;\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8315c9ac42af4048897256b741b1f653>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8315c9ac42af4048897256b741b1f653>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // n = (3x^2 - x - 2n) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzup0g8xj.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 1;\n        long c = -2 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) {\n            return -1;\n        }\n        long x1 = (-b + (long)Math.Sqrt(d)) / (2 * a);\n        long x2 = (-b - (long)Math.Sqrt(d)) / (2 * a);\n        if (x1 > 0 && x1 % 10 == 0) {\n            return x1;\n        }\n        if (x2 > 0 && x2 % 10 == 0) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <08841d3cec1b4adc90df608d4f4cb3fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <08841d3cec1b4adc90df608d4f4cb3fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 - 3n + 2n = 0\n        // n(n - 3 + 2) = 0\n        // n = 0 or n = 3 - 2\n        // n = 3 - 2\n        // n = 1\n        // n = 1\n        return n;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9cd5557efe444e859097a05fb8542a36>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9cd5557efe444e859097a05fb8542a36>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long x = (long)Math.Sqrt(n);\n        if (x * x == n) {\n            return x;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ca00d16e4d9046a7800c41bc7463ce70>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ca00d16e4d9046a7800c41bc7463ce70>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 - 3n + 2n = 0\n        // n^2 - n = 0\n        // n(n-1) = 0\n        // n = 0 or n = 1\n        // n = 0 is not a decagonal number\n        // n = 1 is the first decagonal number\n        // n = 2 is the second decagonal number\n        // n = 3 is the third decagonal number\n        // n = 4 is the fourth decagonal number\n        // n = 5 is the fifth decagonal number\n        // n = 6 is the sixth decagonal number\n        // n = 7 is the seventh decagonal number\n        // n = 8 is the eighth decagonal number\n        // n = 9 is the ninth decagonal number\n        // n = 10 is the tenth decagonal number\n        // n = 11 is the eleventh decagonal number\n        // n = 12 is the twelfth decagonal number\n        // n = 13 is the thirteenth decagonal number\n        // n = 14 is the fourteenth decagonal number\n        // n = 15 is the fifteenth decagonal number\n        // n = 16 is the sixteenth decagonal number\n        // n = 17 is the seventeenth decagonal number\n        // n = 18 is the eighteenth decagonal number\n        // n = 19 is the nineteenth decagonal number\n        // n = 20 is the twentieth decagonal number\n        // n = 21 is the twenty-first decagonal number\n        // n = 22 is the twenty-second decagonal number\n        // n = 23 is the twenty-third decagonal number\n        // n = 24 is the twenty-fourth decagonal number\n        // n = 25 is the twenty-fifth decagonal number\n        // n = 26 is the twenty-sixth decagonal number\n        // n = 27 is the twenty-seventh decagonal number\n        // n = 28 is the twenty-eighth decagonal number\n        // n = 29 is the twenty-ninth decagonal number\n        // n = 30 is the thirtieth decagonal number\n        // n = 31 is the thirty-first decagonal number\n        // n = 32 is the thirty-second decagonal number\n        // n = 33 is the thirty-third decagonal number\n        // n = 34\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwacob8p3.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3 * n^2 - n) / 2\n        // 3n^2 - n - 2n = 0\n        // n = (1 +- sqrt(1 + 12 * 2)) / 6\n        // n = (1 +- sqrt(25)) / 6\n        // n = (1 + 5) / 6\n        // n = 6 / 6\n        // n = 1\n        // n = (1 - 5) / 6\n        // n = -4 / 6\n        // n = -2 / 3\n        // n = -1\n        // n = (3 * n^2 - n) / 2\n        // 3n^2 - n - 2n = 0\n        // n = (1 +- sqrt(1 + 12 * 2)) / 6\n        // n = (1 +- sqrt(25)) / 6\n        // n = (1 + 5) / 6\n        // n = 6 / 6\n        // n = 1\n        // n = (1 - 5) / 6\n        // n = -4 / 6\n        // n = -2 / 3\n        // n = -1\n        // n = (3 * n^2 - n) / 2\n        // 3n^2 - n - 2n = 0\n        // n = (1 +- sqrt(1 + 12 * 2)) / 6\n        // n = (1 +- sqrt(25)) / 6\n        // n = (1 + 5) / 6\n        // n = 6 / 6\n        // n = 1\n        // n = (1 - 5) / 6\n        // n = -4 / 6\n        // n = -2 / 3\n        // n = -1\n        // n = (3 * n^2 - n) / 2\n        // 3n^2 - n - 2n = 0\n        // n = (1 +- sqrt(1 + 12 * 2)) / 6\n        // n = (1 +- sqrt(25)) / 6\n        // n = (1 + 5) / 6\n        // n = 6 / 6\n        // n = 1\n        // n = (1 - 5) / 6\n        // n = -4 / 6\n        // n = -2 / 3\n        //\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123924,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkbx20pwn.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        double x = (Math.Sqrt(1 + 4 * 2 * n) - 1) / 2;\n        if (x == (long)x) {\n            return (long)x;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123920,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a10975b224d14fa7af7f5f7193c91f60>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a10975b224d14fa7af7f5f7193c91f60>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // n = (3x^2 - x - 2n) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 +- sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123917,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_rmvc45m.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // n = (3x^2 - x - 2n) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzup0g8xj.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // 3*n^2 - n - 2*n = 0\n        // n = (1 +- sqrt(1 + 12*2))/6\n        // n = (1 +- sqrt(25))/6\n        // n = (1 +- 5)/6\n        // n = 1/6 or 5/6\n        // n = 1/6\n        // n = (1 + sqrt(25))/6\n        // n = (1 + 5)/6\n        // n = 6/6\n        // n = 1\n        // n = (1 - sqrt(25))/6\n        // n = (1 - 5)/6\n        // n = -4/6\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n = -2/3\n        // n =\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123919,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpir0lm4pf.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        var d = (Math.Sqrt(4 * n * n + 4 * n + 1) + 1) / 2;\n        if (d == (long)d)\n            return (long)d;\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <acf411c84486427986bac72fe05cafc2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <acf411c84486427986bac72fe05cafc2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        double a = (3 + Math.Sqrt(9 + 8 * n)) / 2;\n        if (a == (int)a) {\n            return (long)a;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <88b484419de548b381a20e1919f4a32c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <88b484419de548b381a20e1919f4a32c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3 * x^2 - x) / 2\n        // 3 * x^2 - x - 2 * n = 0\n        // x = (1 + sqrt(1 + 24 * n)) / 6\n        long x = (long)Math.Floor((1 + Math.Sqrt(1 + 24 * n)) / 6);\n        return (3 * x * x - x) / 2 == n ? x : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1676983e5f3b40229083126b25e05975>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1676983e5f3b40229083126b25e05975>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 - 3n + 2n = 0\n        // n(n - 3 + 2) = 0\n        // n = 0 or n = 3 - 2\n        // n = 1 or n = 1\n        // n = 1\n        return n;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123919,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <faee292f9fab4a02a671169d4a2afd86>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <faee292f9fab4a02a671169d4a2afd86>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        double a = 3;\n        double b = -1;\n        double c = -2 * n;\n        double x = (-b + Math.Sqrt(b * b - 4 * a * c)) / (2 * a);\n        if (x == Math.Round(x))\n            return (long)x;\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <876a233d67cb40eca41a2b541680e77e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <876a233d67cb40eca41a2b541680e77e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long num = n * (3 * n - 2);\n        long sqrt = (long)Math.Sqrt(num);\n        if (sqrt * sqrt == num) {\n            return sqrt;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6b51101c5bee40efa65f4ad1151dbcf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6b51101c5bee40efa65f4ad1151dbcf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long nth = 0;\n        long i = 1;\n        while (nth < n) {\n            nth = i * (3 * i - 1) / 2;\n            i++;\n        }\n        if (nth == n) {\n            return nth;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <414663a5be0649d3b1c191556832f8d5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <414663a5be0649d3b1c191556832f8d5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // 3*n^2 - n - 2*n = 0\n        // n = (1 + sqrt(1 + 12*2))/6\n        // n = (1 + sqrt(25))/6\n        // n = (1 + 5)/6\n        // n = 6/6\n        // n = 1\n        // n = 1 + 5\n        // n = 6\n        // n = 6 + 5\n        // n = 11\n        // n = 11 + 5\n        // n = 16\n        // n = 16 + 5\n        // n = 21\n        // n = 21 + 5\n        // n = 26\n        // n = 26 + 5\n        // n = 31\n        // n = 31 + 5\n        // n = 36\n        // n = 36 + 5\n        // n = 41\n        // n = 41 + 5\n        // n = 46\n        // n = 46 + 5\n        // n = 51\n        // n = 51 + 5\n        // n = 56\n        // n = 56 + 5\n        // n = 61\n        // n = 61 + 5\n        // n = 66\n        // n = 66 + 5\n        // n = 71\n        // n = 71 + 5\n        // n = 76\n        // n = 76 + 5\n        // n = 81\n        // n = 81 + 5\n        // n = 86\n        // n = 86 + 5\n        // n = 91\n        // n = 91 + 5\n        // n = 96\n        // n = 96 + 5\n        // n = 101\n        // n = 101 + 5\n        // n = 106\n        // n = 106 + 5\n        // n = 111\n        // n = 111 + 5\n        // n = 116\n        // n = 116 + 5\n        // n = 121\n        // n = 121 + 5\n        // n = 126\n        // n = 126 + 5\n        // n = 131\n        // n = 131 + 5\n        // n = 136\n        // n = 136 + 5\n        // n = 141\n        // n = 141 + 5\n        // n = 146\n        // n = 146 + 5\n        // n = 151\n       \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123924,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1wrfocyx.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        long a = 1;\n        long b = 3;\n        long c = -2 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) return -1;\n        long x1 = (-b + (long)Math.Sqrt(d)) / (2 * a);\n        long x2 = (-b - (long)Math.Sqrt(d)) / (2 * a);\n        if (x1 > 0 && x1 % 2 == 0) return x1;\n        if (x2 > 0 && x2 % 2 == 0) return x2;\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <06d019308e5d45ca998a70b565191ad7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <06d019308e5d45ca998a70b565191ad7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // n = (3x^2 - x - 2n) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzup0g8xj.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long IsNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // 3*n^2 - n - 2*n = 0\n        // n^2 - (1/3)n - (2/3) = 0\n        // n = (1/3 +- sqrt(1/9 + 8/3))/2\n        // n = (1/3 +- sqrt(11/9))/2\n        // n = (1/3 +- sqrt(11)/3)/2\n        // n = (1 +- sqrt(11))/6\n        // n = (1 + sqrt(11))/6\n        // n = (1 - sqrt(11))/6\n        // n = (1 + sqrt(11))/6\n        // n = (1 - sqrt(11))/6\n        // n = (1 + sqrt(11))/6\n        // n = (1 - sqrt(11))/6\n        // n = (1 + sqrt(11))/6\n        // n = (1 - sqrt(11))/6\n        // n = (1 + sqrt(11))/6\n        // n = (1 - sqrt(11))/6\n        // n = (1 + sqrt(11))/6\n        // n = (1 - sqrt(11))/6\n        // n = (1 + sqrt(11))/6\n        // n = (1 - sqrt(11))/6\n        // n = (1 + sqrt(11))/6\n        // n = (1 - sqrt(11))/6\n        // n = (1 + sqrt(11))/6\n        // n = (1 - sqrt(11))/6\n        // n = (1 + sqrt(11))/6\n        // n = (1 - sqrt(11))/6\n        // n = (1 + sqrt(11))/6\n        // n = (1 - sqrt(11))/6\n        // n = (1 + sqrt(11))/6\n        // n = (1 - sqrt(11))/6\n        // n = (1 + sqrt(11))/6\n        // n = (\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNumDecagonal((3L)) == (27L));\n    Debug.Assert(IsNumDecagonal((7L)) == (175L));\n    Debug.Assert(IsNumDecagonal((10L)) == (370L));\n    }\n\n}\n",
      "timestamp": 1666123924,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5djy9hu7.cs(10,24): error CS0161: 'Problem.IsNumDecagonal(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_95_Find_Min_Length",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the length of the smallest list in a list of lists.\n    public static long FindMinLength(List<List<long>> lst) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_95_Find_Min_Length.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMinLength((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L}), (List<long>)new List<long>(new long[]{(long)1L, (long)2L})}))) == (1L));\n    Debug.Assert(FindMinLength((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L}), (List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})}))) == (2L));\n    Debug.Assert(FindMinLength((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)3L, (long)3L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L})}))) == (3L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long min = long.MaxValue;\n        foreach (List<long> l in lst) {\n            if (l.Count < min) {\n                min = l.Count;\n            }\n        }\n        return min;",
    "        // Write your code here\n        long min = long.MaxValue;\n        foreach (List<long> l in lst) {\n            if (l.Count < min) {\n                min = l.Count;\n            }\n        }\n        return min;",
    "        long min = long.MaxValue;\n        foreach (List<long> l in lst) {\n            if (l.Count < min) {\n                min = l.Count;\n            }\n        }\n        return min;",
    "        long min = long.MaxValue;\n        foreach (List<long> l in lst) {\n            if (l.Count < min) {\n                min = l.Count;\n            }\n        }\n        return min;",
    "        long min = lst[0].Count;\n        for (int i = 1; i < lst.Count; i++) {\n            if (lst[i].Count < min) {\n                min = lst[i].Count;\n            }\n        }\n        return min;",
    "        long min = long.MaxValue;\n        foreach (List<long> l in lst) {\n            if (l.Count < min) {\n                min = l.Count;\n            }\n        }\n        return min;",
    "        long min = lst[0].Count;\n        foreach (List<long> l in lst) {\n            if (l.Count < min) {\n                min = l.Count;\n            }\n        }\n        return min;",
    "        long minLength = long.MaxValue;\n        foreach (List<long> l in lst) {\n            if (l.Count < minLength) {\n                minLength = l.Count;\n            }\n        }\n        return minLength;",
    "        long min = long.MaxValue;\n        foreach (var l in lst) {\n            if (l.Count < min) {\n                min = l.Count;\n            }\n        }\n        return min;",
    "        long min = lst[0].Count;\n        foreach (List<long> l in lst) {\n            if (l.Count < min) {\n                min = l.Count;\n            }\n        }\n        return min;",
    "        long min = long.MaxValue;\n        foreach (List<long> l in lst) {\n            if (l.Count < min) {\n                min = l.Count;\n            }\n        }\n        return min;",
    "        long min = lst[0].Count;\n        for (int i = 0; i < lst.Count; i++) {\n            if (lst[i].Count < min) {\n                min = lst[i].Count;\n            }\n        }\n        return min;",
    "        long min = long.MaxValue;\n        foreach (List<long> l in lst) {\n            if (l.Count < min) {\n                min = l.Count;\n            }\n        }\n        return min;",
    "        long min = long.MaxValue;\n        foreach (List<long> l in lst) {\n            if (l.Count < min) {\n                min = l.Count;\n            }\n        }\n        return min;",
    "        long min = long.MaxValue;\n        foreach (var l in lst) {\n            if (l.Count < min) {\n                min = l.Count;\n            }\n        }\n        return min;",
    "        long min = lst[0].Count;\n        foreach (List<long> l in lst) {\n            if (l.Count < min) {\n                min = l.Count;\n            }\n        }\n        return min;",
    "        long min = long.MaxValue;\n        foreach (List<long> sublist in lst) {\n            if (sublist.Count < min) {\n                min = sublist.Count;\n            }\n        }\n        return min;",
    "        long min = long.MaxValue;\n        foreach (List<long> sublist in lst) {\n            if (sublist.Count < min) {\n                min = sublist.Count;\n            }\n        }\n        return min;",
    "        long min = lst[0].Count;\n        foreach (List<long> l in lst) {\n            if (l.Count < min) {\n                min = l.Count;\n            }\n        }\n        return min;",
    "        long min = long.MaxValue;\n        foreach (var item in lst) {\n            if (item.Count < min) {\n                min = item.Count;\n            }\n        }\n        return min;"
  ]
}
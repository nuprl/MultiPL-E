{
  "name": "mbpp_731_lateralsurface_cone",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the lateral surface area of a cone given radius r and the height h.\n    public static float LateralsurfaceCone(long r, long h) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_731_lateralsurface_cone.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(LateralsurfaceCone((5L), (12L)) == (204.20352248333654f));\n    Debug.Assert(LateralsurfaceCone((10L), (15L)) == (566.3586699569488f));\n    Debug.Assert(LateralsurfaceCone((19L), (17L)) == (1521.8090132193388f));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return (float)(Math.PI * r * Math.Sqrt(r * r + h * h));",
    "        return (float)(Math.PI * r * Math.Sqrt(r * r + h * h));",
    "        float pi = 3.14f;\n        float area = pi * r * (float)Math.Sqrt(r * r + h * h);\n        return area;",
    "        return (float)(Math.PI * r * Math.Sqrt(r * r + h * h));",
    "        return (float)(Math.PI * r * Math.Sqrt(r * r + h * h));",
    "        return (float)(Math.PI * r * Math.Sqrt(r * r + h * h));",
    "        return (float)(Math.PI * r * Math.Sqrt(r * r + h * h));",
    "        return (float)(Math.PI * r * Math.Sqrt(r * r + h * h));",
    "        return (float)Math.PI * r * (float)Math.Sqrt(r * r + h * h);",
    "        return (float)(Math.PI * r * Math.Sqrt(r * r + h * h));",
    "        return (float)(Math.PI * r * Math.Sqrt(r * r + h * h));",
    "        return (float)(Math.PI * r * Math.Sqrt(r * r + h * h));",
    "        return (float)Math.PI * (float)r * (float)Math.Sqrt((float)r * (float)r + (float)h * (float)h);",
    "        return (float)(Math.PI * r * Math.Sqrt(r * r + h * h));",
    "        return (float)(Math.PI * r * Math.Sqrt(r * r + h * h));",
    "        return (float)(Math.PI * r * Math.Sqrt(r * r + h * h));",
    "        return (float)(Math.PI * r * Math.Sqrt(r * r + h * h));",
    "        return (float)(Math.PI * r * Math.Sqrt(r * r + h * h));",
    "        return (float)(Math.PI * r * Math.Sqrt(r * r + h * h));",
    "        return (float)(Math.PI * r * Math.Sqrt(r * r + h * h));"
  ]
}
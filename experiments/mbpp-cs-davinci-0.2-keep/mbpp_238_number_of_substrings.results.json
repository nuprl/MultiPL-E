{
  "name": "mbpp_238_number_of_substrings",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_238_number_of_substrings.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i + 1; j <= str.Length; j++) {\n                if (str.Substring(i, j - i) != \"\") {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code goes here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6b2b1d9b5e16404d9935c0ca8c0683e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6b2b1d9b5e16404d9935c0ca8c0683e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i + 1; j <= str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // your code here\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i + 1; j <= str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <edf547870b5b4e3bb9119044b56c2e87>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <edf547870b5b4e3bb9119044b56c2e87>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i + 1; j <= str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code goes here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6b2b1d9b5e16404d9935c0ca8c0683e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6b2b1d9b5e16404d9935c0ca8c0683e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code goes here\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        int n = str.Length;\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j <= n; j++) {\n                if (str.Substring(i, j - i) != \"\") {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i + 1; j <= str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // We can use the formula n(n+1)/2 to calculate the number of substrings.\n        // We can also use the formula n(n+1)(2n+1)/6 to calculate the number of substrings.\n        // We can also use the formula n(n+1)(n+2)/6 to calculate the number of substrings.\n        // We can also use the formula n(n+1)(n+2)(n+3)/24 to calculate the number of substrings.\n        // We can also use the formula n(n+1)(n+2)(n+3)(n+4)/120 to calculate the number of substrings.\n        // We can also use the formula n(n+1)(n+2)(n+3)(n+4)(n+5)/720 to calculate the number of substrings.\n        // We can also use the formula n(n+1)(n+2)(n+3)(n+4)(n+5)(n+6)/5040 to calculate the number of substrings.\n        // We can also use the formula n(n+1)(n+2)(n+3)(n+4)(n+5)(n+6)(n+7)/40320 to calculate the number of substrings.\n        // We can also use the formula n(n+1)(n+2)(n+3)(n+4)(n+5)(n+6)(n+7)(n+8)/362880 to calculate the number of substrings.\n        // We can also use the formula n(n+1)(n+2)(n+3)(n+4)(n+5)(n+6)(n+7)(n+8)(n+9)/3628800 to calculate the number of substrings.\n        // We can also use the formula n(n+1)(n+2)(n+3)(n+4)(n+5)(n+6)(n+7)(n+8)(n+9)(n+10)/39916800 to calculate the number of substrings.\n        // We can also use the formula n(n+1)(n+2)(n+3)(n+4)(n+5)(n+6)(n+7)(n+8)(n+9)(n+10)(n+11)/47\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1h559u5.cs(10,24): error CS0161: 'Problem.NumberOfSubstrings(string)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Write your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <50a436db17114c62bcc0087cf7bbda07>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <50a436db17114c62bcc0087cf7bbda07>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i + 1; j <= str.Length; j++) {\n                if (str.Substring(i, j - i) != \"\") {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        int n = str.Length;\n        long ans = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                ans++;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        return str.Length * (str.Length + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code goes here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6b2b1d9b5e16404d9935c0ca8c0683e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6b2b1d9b5e16404d9935c0ca8c0683e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i + 1; j <= str.Length; j++) {\n                if (str.Substring(i, j - i) != \"\") {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i + 1; j <= str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <edf547870b5b4e3bb9119044b56c2e87>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <edf547870b5b4e3bb9119044b56c2e87>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i + 1; j <= str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code goes here\n        return str.Length * (str.Length + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code goes here.\n        // You can add other methods.\n        return str.Length * (str.Length + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                if (str[i] != str[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd24c62bbb3146389aa4c150b13c0031>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd24c62bbb3146389aa4c150b13c0031>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        return str.Length * (str.Length + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i + 1; j <= str.Length; j++) {\n                if (str.Substring(i, j - i) != \"\") {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code goes here\n        return str.Length * (str.Length + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // return str.Length * (str.Length + 1) / 2;\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Write your code here\n        return str.Length * (str.Length + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Write your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <50a436db17114c62bcc0087cf7bbda07>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <50a436db17114c62bcc0087cf7bbda07>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                if (str[i] != str[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd24c62bbb3146389aa4c150b13c0031>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd24c62bbb3146389aa4c150b13c0031>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Write your code here\n        return str.Length * (str.Length + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        return str.Length * (str.Length + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code goes here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8e8ccb85eb1a4ce3ac4d14df68d6d16f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8e8ccb85eb1a4ce3ac4d14df68d6d16f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                if (str[i] == str[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ef62e59be73449e295d3cfcdb6989255>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ef62e59be73449e295d3cfcdb6989255>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i + 1; j <= str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        return str.Length * (str.Length + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i + 1; j <= str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // your code goes here\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code goes here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8e8ccb85eb1a4ce3ac4d14df68d6d16f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8e8ccb85eb1a4ce3ac4d14df68d6d16f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ac27ff1599694e94b5a0ac99fb5258f7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ac27ff1599694e94b5a0ac99fb5258f7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        int n = str.Length;\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j <= n; j++) {\n                if (str.Substring(i, j - i) != \"\") {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Write your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <50a436db17114c62bcc0087cf7bbda07>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <50a436db17114c62bcc0087cf7bbda07>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code goes here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6b2b1d9b5e16404d9935c0ca8c0683e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6b2b1d9b5e16404d9935c0ca8c0683e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Write your code here\n        return str.Length * (str.Length + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Write your code here\n        return str.Length * (str.Length + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // The number of substrings is the sum of the length of the string and the number of characters in the string.\n        // For example, the string \"abc\" has 3 substrings: \"a\", \"b\", and \"c\".\n        // The string \"ab\" has 2 substrings: \"a\" and \"b\".\n        // The string \"a\" has 1 substring: \"a\".\n        // The string \"\" has 0 substrings.\n        return str.Length + str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f5137252c6b4efa94d3ebe07fc50ab6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1f5137252c6b4efa94d3ebe07fc50ab6>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Write your code here\n        return str.Length * (str.Length + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i + 1; j <= str.Length; j++) {\n                if (str.Substring(i, j - i) != \"\") {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code goes here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8e8ccb85eb1a4ce3ac4d14df68d6d16f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8e8ccb85eb1a4ce3ac4d14df68d6d16f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // return str.Length * (str.Length + 1) / 2;\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <edf547870b5b4e3bb9119044b56c2e87>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <edf547870b5b4e3bb9119044b56c2e87>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // We can use the formula n(n+1)/2 to calculate the number of substrings in a string of length n.\n        return (long)str.Length * (str.Length + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                if (str[i] != str[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd24c62bbb3146389aa4c150b13c0031>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd24c62bbb3146389aa4c150b13c0031>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        return str.Length * (str.Length + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code goes here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6b2b1d9b5e16404d9935c0ca8c0683e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6b2b1d9b5e16404d9935c0ca8c0683e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count += 1;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code goes here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6b2b1d9b5e16404d9935c0ca8c0683e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6b2b1d9b5e16404d9935c0ca8c0683e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        return str.Length * (str.Length + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Write your code here\n        return str.Length * (str.Length + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // your code here\n        return str.Length * (str.Length + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // O(n)\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i + 1; j <= str.Length; j++) {\n                if (str.Substring(i, j - i) != \"\") {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <edf547870b5b4e3bb9119044b56c2e87>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <edf547870b5b4e3bb9119044b56c2e87>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // your code goes here\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        return str.Length * (str.Length + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code goes here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8e8ccb85eb1a4ce3ac4d14df68d6d16f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8e8ccb85eb1a4ce3ac4d14df68d6d16f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i + 1; j <= str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i + 1; j <= str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        return str.Length * (str.Length + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Write your code here\n        return str.Length * (str.Length + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        return str.Length * (str.Length + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code goes here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6b2b1d9b5e16404d9935c0ca8c0683e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6b2b1d9b5e16404d9935c0ca8c0683e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code goes here.\n        return str.Length * (str.Length + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code goes here\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i + 1; j <= str.Length; j++) {\n                if (str.Substring(i, j - i) != \"\") {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Write your code here\n        return str.Length * (str.Length + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <edf547870b5b4e3bb9119044b56c2e87>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <edf547870b5b4e3bb9119044b56c2e87>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code goes here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8e8ccb85eb1a4ce3ac4d14df68d6d16f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8e8ccb85eb1a4ce3ac4d14df68d6d16f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code here\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code goes here\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code goes here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6b2b1d9b5e16404d9935c0ca8c0683e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6b2b1d9b5e16404d9935c0ca8c0683e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Write your code here\n        int n = str.Length;\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j <= n; j++) {\n                if (str.Substring(i, j - i) != \"\") {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122650,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i + 1; j <= str.Length; j++) {\n                if (str.Substring(i, j - i) != \"\") {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        return str.Length * (str.Length + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        int n = str.Length;\n        long result = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122650,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        int n = str.Length;\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                if (str[i] != ' ') {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122650,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        int n = str.Length;\n        long result = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                if (str[i] != '0') {\n                    result++;\n                }\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122650,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i + 1; j <= str.Length; j++) {\n                if (str.Substring(i, j - i) != \"\") {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        return str.Length * (str.Length + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                if (str.Substring(i, j - i + 1).Length > 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122650,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i + 1; j <= str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i + 1; j <= str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                if (str[i] != str[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd24c62bbb3146389aa4c150b13c0031>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd24c62bbb3146389aa4c150b13c0031>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // TODO: Implement this function\n        // return 0;\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i + 1; j <= str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122650,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code goes here\n        return str.Length * (str.Length + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122650,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <19c4fab1ae50473aa2155ddccd0834de>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <19c4fab1ae50473aa2155ddccd0834de>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i + 1; j <= str.Length; j++) {\n                if (str.Substring(i, j - i) != \"\") {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code goes here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8e8ccb85eb1a4ce3ac4d14df68d6d16f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8e8ccb85eb1a4ce3ac4d14df68d6d16f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        // Your code goes here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6b2b1d9b5e16404d9935c0ca8c0683e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6b2b1d9b5e16404d9935c0ca8c0683e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of non-empty substrings of a given string.\n    public static long NumberOfSubstrings(string str) {\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            for (int j = i; j < str.Length; j++) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumberOfSubstrings((\"abc\")) == (6L));\n    Debug.Assert(NumberOfSubstrings((\"abcd\")) == (10L));\n    Debug.Assert(NumberOfSubstrings((\"abcde\")) == (15L));\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
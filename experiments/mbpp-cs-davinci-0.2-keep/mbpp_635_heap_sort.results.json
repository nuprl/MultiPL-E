{
  "name": "mbpp_635_heap_sort",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_635_heap_sort.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: implement this function.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <75301755d25b4c7ab88398d9c8b6fd8d>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <75301755d25b4c7ab88398d9c8b6fd8d>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement HeapSort\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc1e0f1b3c664a3598a8e8fa43b1d38a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc1e0f1b3c664a3598a8e8fa43b1d38a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        return heap.Sort();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps9l4dusq.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement heap sort.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <503210ab616640be9d7ebb2cd239ba00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <503210ab616640be9d7ebb2cd239ba00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cd0847640113417b916fee9fff398faf>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cd0847640113417b916fee9fff398faf>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement HeapSort\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc1e0f1b3c664a3598a8e8fa43b1d38a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc1e0f1b3c664a3598a8e8fa43b1d38a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement heap sort.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // Your code here.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <367d8a0da7cd46569069006b9b13a6c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <367d8a0da7cd46569069006b9b13a6c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <503210ab616640be9d7ebb2cd239ba00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <503210ab616640be9d7ebb2cd239ba00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        return heap.Sort();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps9l4dusq.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return new List<long>();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fcb4d9746af440c3a3a4313f1adeee37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fcb4d9746af440c3a3a4313f1adeee37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cd0847640113417b916fee9fff398faf>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cd0847640113417b916fee9fff398faf>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // Your code here.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <367d8a0da7cd46569069006b9b13a6c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <367d8a0da7cd46569069006b9b13a6c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return new List<long>();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fcb4d9746af440c3a3a4313f1adeee37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fcb4d9746af440c3a3a4313f1adeee37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement heap sort.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement this function.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cb90043d40ec47239690818d05399392>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cb90043d40ec47239690818d05399392>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap<long>(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6bbwjn4e.cs(11,24): error CS0246: The type or namespace name 'Heap<>' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp6bbwjn4e.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        return heap.Sort();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps9l4dusq.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement heap sort.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement HeapSort\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc1e0f1b3c664a3598a8e8fa43b1d38a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc1e0f1b3c664a3598a8e8fa43b1d38a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement Heap Sort\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124222,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7ce9e940e09a466f830b404ad21eace1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7ce9e940e09a466f830b404ad21eace1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement HeapSort\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc1e0f1b3c664a3598a8e8fa43b1d38a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc1e0f1b3c664a3598a8e8fa43b1d38a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement heap sort.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement this function.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f111afe48a0a42cabe0eef2f48216533>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f111afe48a0a42cabe0eef2f48216533>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        return heap.Sort();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps9l4dusq.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap<long>(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6bbwjn4e.cs(11,24): error CS0246: The type or namespace name 'Heap<>' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp6bbwjn4e.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement this function.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f111afe48a0a42cabe0eef2f48216533>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f111afe48a0a42cabe0eef2f48216533>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        return heap.Sort();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps9l4dusq.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <503210ab616640be9d7ebb2cd239ba00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <503210ab616640be9d7ebb2cd239ba00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement the heap sort algorithm.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2b2c6406c2ec455ebada99475369e445>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2b2c6406c2ec455ebada99475369e445>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        return heap.Sort();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps9l4dusq.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap<long>(iterable);\n        var sorted = new List<long>();\n        while (heap.Count > 0) {\n            sorted.Add(heap.Pop());\n        }\n        return sorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124222,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3n3djhgp.cs(11,24): error CS0246: The type or namespace name 'Heap<>' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp3n3djhgp.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        return heap.Sort();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps9l4dusq.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement heap sort.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement HeapSort\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc1e0f1b3c664a3598a8e8fa43b1d38a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc1e0f1b3c664a3598a8e8fa43b1d38a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Write your code here\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124222,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <e57810f2988c4310aa327c4fe145a64d>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <e57810f2988c4310aa327c4fe145a64d>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cd0847640113417b916fee9fff398faf>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cd0847640113417b916fee9fff398faf>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement heap sort here.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6b96055da194438c8c14a1411ad435d8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6b96055da194438c8c14a1411ad435d8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap();\n        foreach (var item in iterable) {\n            heap.Push(item);\n        }\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4dyje_up.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp4dyje_up.cs(16,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement HeapSort\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc1e0f1b3c664a3598a8e8fa43b1d38a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc1e0f1b3c664a3598a8e8fa43b1d38a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        return heap.Sort();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps9l4dusq.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement this function.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f111afe48a0a42cabe0eef2f48216533>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f111afe48a0a42cabe0eef2f48216533>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124222,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <605e3002b68c48bf86fbd5b474645fb9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <605e3002b68c48bf86fbd5b474645fb9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement heap sort.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        return heap.Sort();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps9l4dusq.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement this function.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f111afe48a0a42cabe0eef2f48216533>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f111afe48a0a42cabe0eef2f48216533>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap();\n        foreach (var item in iterable) {\n            heap.Insert(item);\n        }\n        var result = new List<long>();\n        while (!heap.IsEmpty()) {\n            result.Add(heap.ExtractMin());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124222,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp89tlxduv.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement heap sort.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement this function.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f111afe48a0a42cabe0eef2f48216533>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f111afe48a0a42cabe0eef2f48216533>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cd0847640113417b916fee9fff398faf>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cd0847640113417b916fee9fff398faf>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement this function.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f111afe48a0a42cabe0eef2f48216533>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f111afe48a0a42cabe0eef2f48216533>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap();\n        foreach (var item in iterable) {\n            heap.Push(item);\n        }\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4dyje_up.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp4dyje_up.cs(16,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement heap sort.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement heap sort.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <503210ab616640be9d7ebb2cd239ba00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <503210ab616640be9d7ebb2cd239ba00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement heap sort.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return new List<long>();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fcb4d9746af440c3a3a4313f1adeee37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fcb4d9746af440c3a3a4313f1adeee37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap<long>(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6bbwjn4e.cs(11,24): error CS0246: The type or namespace name 'Heap<>' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp6bbwjn4e.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return new List<long>();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fcb4d9746af440c3a3a4313f1adeee37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fcb4d9746af440c3a3a4313f1adeee37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        return heap.Sort();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps9l4dusq.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement a heap sort algorithm.\n        // You can use the Heap class provided below.\n        // You can also use the built-in List.Sort() method, but you will not receive any points for that.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124222,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee1509dcd4b34cc08c85c41e1e05d8de>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee1509dcd4b34cc08c85c41e1e05d8de>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <503210ab616640be9d7ebb2cd239ba00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <503210ab616640be9d7ebb2cd239ba00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap<long>(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6bbwjn4e.cs(11,24): error CS0246: The type or namespace name 'Heap<>' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp6bbwjn4e.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <503210ab616640be9d7ebb2cd239ba00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <503210ab616640be9d7ebb2cd239ba00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <503210ab616640be9d7ebb2cd239ba00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <503210ab616640be9d7ebb2cd239ba00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <503210ab616640be9d7ebb2cd239ba00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <503210ab616640be9d7ebb2cd239ba00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement HeapSort\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc1e0f1b3c664a3598a8e8fa43b1d38a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc1e0f1b3c664a3598a8e8fa43b1d38a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Write your code here.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <039374361be344989ff584d9eba9ca56>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <039374361be344989ff584d9eba9ca56>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // Your code here.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <367d8a0da7cd46569069006b9b13a6c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <367d8a0da7cd46569069006b9b13a6c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap();\n        foreach (var item in iterable) {\n            heap.Push(item);\n        }\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4dyje_up.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp4dyje_up.cs(16,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cd0847640113417b916fee9fff398faf>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cd0847640113417b916fee9fff398faf>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap();\n        foreach (long x in iterable) {\n            heap.Push(x);\n        }\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124222,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3lkhyvd0.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp3lkhyvd0.cs(16,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <503210ab616640be9d7ebb2cd239ba00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <503210ab616640be9d7ebb2cd239ba00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // Your code here.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <367d8a0da7cd46569069006b9b13a6c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <367d8a0da7cd46569069006b9b13a6c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement this function.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cb90043d40ec47239690818d05399392>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cb90043d40ec47239690818d05399392>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement heap sort.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cd0847640113417b916fee9fff398faf>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cd0847640113417b916fee9fff398faf>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
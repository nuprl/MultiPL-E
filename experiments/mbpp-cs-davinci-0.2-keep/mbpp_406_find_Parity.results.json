{
  "name": "mbpp_406_find_Parity",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_406_find_Parity.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        // x & 1 == 1 if x is odd\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        int parity = 0;\n        while (x != 0) {\n            parity ^= (int)(x & 1);\n            x >>= 1;\n        }\n        return parity == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        // The parity of a number is odd if the number of 1's in its binary representation is odd.\n        // The parity of a number is even if the number of 1's in its binary representation is even.\n        // The parity of a number is odd if the number of 1's in its binary representation is odd.\n        // The parity of a number is even if the number of 1's in its binary representation is even.\n        // The parity of a number is odd if the number of 1's in its binary representation is odd.\n        // The parity of a number is even if the number of 1's in its binary representation is even.\n        // The parity of a number is odd if the number of 1's in its binary representation is odd.\n        // The parity of a number is even if the number of 1's in its binary representation is even.\n        // The parity of a number is odd if the number of 1's in its binary representation is odd.\n        // The parity of a number is even if the number of 1's in its binary representation is even.\n        // The parity of a number is odd if the number of 1's in its binary representation is odd.\n        // The parity of a number is even if the number of 1's in its binary representation is even.\n        // The parity of a number is odd if the number of 1's in its binary representation is odd.\n        // The parity of a number is even if the number of 1's in its binary representation is even.\n        // The parity of a number is odd if the number of 1's in its binary representation is odd.\n        // The parity of a number is even if the number of 1's in its binary representation is even.\n        // The parity of a number is odd if the number of 1's in its binary representation is odd.\n        // The parity of a number is even if the number of 1's in its binary representation is even.\n        // The parity of a number is odd if the number of 1's in its binary representation is odd.\n        // The parity of a number is even if the number of 1's in its binary representation is even.\n        // The parity of a number is odd if the number of 1's in its binary representation is odd.\n        // The parity of a number is even if the number of 1's in its binary representation is even.\n        // The parity of\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxm2_eod9.cs(10,24): error CS0161: 'Problem.FindParity(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5497a3c0000b47bf8312d8629e04641b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        // TODO: Implement me!\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <301f3bb420864f3d9b18ad145cd30001>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c881ee552a0e4a2680431eda5fa9f649>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        int parity = 0;\n        while (x != 0) {\n            parity ^= (int)(x & 1);\n            x >>= 1;\n        }\n        return parity == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        bool parity = false;\n        while (x != 0) {\n            parity = !parity;\n            x &= (x - 1);\n        }\n        return parity;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        // return true if x is odd\n        // return false if x is even\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c881ee552a0e4a2680431eda5fa9f649>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        long parity = 0;\n        while (x != 0) {\n            parity ^= x & 1;\n            x >>= 1;\n        }\n        return parity == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        bool parity = false;\n        while (x != 0) {\n            parity = !parity;\n            x &= (x - 1);\n        }\n        return parity;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c881ee552a0e4a2680431eda5fa9f649>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        int parity = 0;\n        while (x != 0) {\n            parity ^= (int)(x & 1);\n            x >>= 1;\n        }\n        return parity == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        // return true if x is odd, false if x is even\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5497a3c0000b47bf8312d8629e04641b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5497a3c0000b47bf8312d8629e04641b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        // This is a naive solution, but it's the only one that I can think of.\n        // I'm not sure if there's a better way to do this.\n        // I'm also not sure if this is the most efficient way to do this.\n        // I'm also not sure if this is the most efficient way to do this.\n        // I'm also not sure if this is the most efficient way to do this.\n        // I'm also not sure if this is the most efficient way to do this.\n        // I'm also not sure if this is the most efficient way to do this.\n        // I'm also not sure if this is the most efficient way to do this.\n        // I'm also not sure if this is the most efficient way to do this.\n        // I'm also not sure if this is the most efficient way to do this.\n        // I'm also not sure if this is the most efficient way to do this.\n        // I'm also not sure if this is the most efficient way to do this.\n        // I'm also not sure if this is the most efficient way to do this.\n        // I'm also not sure if this is the most efficient way to do this.\n        // I'm also not sure if this is the most efficient way to do this.\n        // I'm also not sure if this is the most efficient way to do this.\n        // I'm also not sure if this is the most efficient way to do this.\n        // I'm also not sure if this is the most efficient way to do this.\n        // I'm also not sure if this is the most efficient way to do this.\n        // I'm also not sure if this is the most efficient way to do this.\n        // I'm also not sure if this is the most efficient way to do this.\n        // I'm also not sure if this is the most efficient way to do this.\n        // I'm also not sure if this is the most efficient way to do this.\n        // I'm also not sure if this is the most efficient way to do this.\n        // I'm also not sure if this is the most efficient way to do this.\n        // I'm also not sure if this is the most efficient way to do this.\n        // I'm also not sure if this is the most efficient way to do this\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2ymcu_9e.cs(10,24): error CS0161: 'Problem.FindParity(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        // return x % 2 == 1;\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        // x & 1 == 1 if x is odd\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5497a3c0000b47bf8312d8629e04641b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        long parity = 0;\n        while (x != 0) {\n            parity ^= x & 1;\n            x >>= 1;\n        }\n        return parity == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        // x & 1 is the same as x % 2\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        // return (x & 1) == 1;\n        return (x % 2) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        int count = 0;\n        while (x > 0) {\n            count += (int)(x & 1);\n            x >>= 1;\n        }\n        return count % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        // x & 1 == 1 if x is odd\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c881ee552a0e4a2680431eda5fa9f649>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        bool parity = false;\n        while (x != 0) {\n            parity = !parity;\n            x &= (x - 1);\n        }\n        return parity;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        bool parity = false;\n        while (x != 0) {\n            parity = !parity;\n            x &= (x - 1);\n        }\n        return parity;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x % 2 == 0);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <413eea99fc4b45688ef7e0e45643f5dd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <413eea99fc4b45688ef7e0e45643f5dd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        // TODO: Implement this function.\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b39c0d2c113340c59cd9a893ac03179d>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 != 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x % 2 == 0);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <413eea99fc4b45688ef7e0e45643f5dd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <413eea99fc4b45688ef7e0e45643f5dd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5497a3c0000b47bf8312d8629e04641b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        bool parity = false;\n        while (x != 0) {\n            parity = !parity;\n            x &= (x - 1);\n        }\n        return parity;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        // TODO: Implement\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cda968f3666b4fb0bf0da4625887f4d4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        // TODO\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8554b32cd62b4780b79c3463e0397fd6>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        bool parity = true;\n        while (x > 0) {\n            parity = !parity;\n            x = x & (x - 1);\n        }\n        return parity;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <21e6df475d284d20890e8439d01efad9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <21e6df475d284d20890e8439d01efad9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        if (x % 2 == 0) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <44af954b67a74677af43ed182202c82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return x % 2 == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        return (x & 1) == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether the parity of a given number is odd.\n    public static bool FindParity(long x) {\n        bool parity = false;\n        while (x != 0) {\n            parity = !parity;\n            x &= (x - 1);\n        }\n        return parity;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindParity((12L)) == (false));\n    Debug.Assert(FindParity((7L)) == (true));\n    Debug.Assert(FindParity((10L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666124000,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
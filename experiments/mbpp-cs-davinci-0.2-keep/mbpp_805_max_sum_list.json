{
  "name": "mbpp_805_max_sum_list",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that returns the list in a list of lists whose sum of elements is the highest.\n    public static List<long> MaxSumList(List<List<long>> lists) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_805_max_sum_list.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxSumList((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)10L, (long)11L, (long)12L}))));\n    Debug.Assert(MaxSumList((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)3L, (long)2L, (long)1L}), (List<long>)new List<long>(new long[]{(long)6L, (long)5L, (long)4L}), (List<long>)new List<long>(new long[]{(long)12L, (long)11L, (long)10L})}))).Equals((new List<long>(new long[]{(long)12L, (long)11L, (long)10L}))));\n    Debug.Assert(MaxSumList((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)2L, (long)3L, (long)1L})}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)1L}))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long maxSum = 0;\n        List<long> maxList = new List<long>();\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // Write your code here\n        List<long> maxList = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // TODO: Implement this function\n        return new List<long>();",
    "        long maxSum = 0;\n        List<long> maxList = null;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long element in list) {\n                sum += element;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // TODO: Implement this function.\n        return new List<long>();",
    "        List<long> maxList = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // Your code here\n        return null;",
    "        // Your code here\n        return null;",
    "        // TODO: Implement this function\n        return null;",
    "        // Your code here\n        return new List<long>();",
    "        // TODO: Implement this function\n        return null;",
    "        // Your code goes here.\n        return null;",
    "        // Your code here\n        return null;",
    "        // Your code here\n        return lists.OrderByDescending(x => x.Sum()).First();",
    "        // TODO: Implement this function\n        return null;",
    "        List<long> maxList = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // Your code here\n        return null;",
    "        // Your code here.\n        return null;",
    "        // Your code here\n        return new List<long>();",
    "        // TODO: Implement this function\n        return null;"
  ]
}
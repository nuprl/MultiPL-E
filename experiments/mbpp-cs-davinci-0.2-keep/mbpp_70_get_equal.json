{
  "name": "mbpp_70_get_equal",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    public static bool GetEqual(List<long> Input) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_70_get_equal.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetEqual((new List<long>(new Tuple<long, long, long>[]{(Tuple<long, long, long>)Tuple.Create(11L, 22L, 33L), (Tuple<long, long, long>)Tuple.Create(44L, 55L, 66L)}))) == (true));\n    Debug.Assert(GetEqual((new List<long>(new object[]{Tuple.Create(1L, 2L, 3L), Tuple.Create(4L, 5L, 6L, 7L)}))) == (false));\n    Debug.Assert(GetEqual((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(3L, 4L)}))) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        for (int i = 0; i < Input.Count - 1; i++) {\n            if (Input[i] != Input[i + 1]) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input[0].ToString().Length;\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i].ToString().Length != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input.Count;\n        long Sum = 0;\n        for (long i = 0; i < Length; i++) {\n            Sum += Input[(int)i];\n        }\n        if (Sum % Length == 0) {\n            return true;\n        }\n        return false;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        return Input.Distinct().Count() == 1;",
    "        long Length = Input[0].ToString().Length;\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i].ToString().Length != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input[0].ToString().Length;\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i].ToString().Length != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        int Length = Input.Count;\n        for (int i = 0; i < Length; i++) {\n            if (Input[i] != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) return true;\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (First != Input[i]) return false;\n        }\n        return true;",
    "        long Length = Input[0].ToString().Length;\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i].ToString().Length != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        var Length = Input.Count;\n        for (var i = 0; i < Length - 1; i++) {\n            if (Input[i] != Input[i + 1]) {\n                return false;\n            }\n        }\n        return true;",
    "        return Input.All(x => x == Input[0]);",
    "        long Length = Input[0].ToString().Length;\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i].ToString().Length != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        return Input.Distinct().Count() == 1;",
    "        long first = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (First != Input[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        return Input.Distinct().Count() == 1;",
    "        var length = Input[0].ToString().Length;\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i].ToString().Length != length) {\n                return false;\n            }\n        }\n        return true;",
    "        long length = Input[0].ToString().Length;\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i].ToString().Length != length) {\n                return false;\n            }\n        }\n        return true;",
    "        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (First != Input[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        long length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != length) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) return true;\n        long first = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != first) return false;\n        }\n        return true;",
    "        // Write your code here.\n        return true;",
    "        long Length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (First != Input[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input[0].ToString().Length;\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i].ToString().Length != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        return Input.Distinct().Count() == 1;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        for (int i = 0; i < Input.Count - 1; i++) {\n            if (Input[i] != Input[i + 1]) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        return Input.Distinct().Count() == 1;",
    "        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (First != Input[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) return true;\n        long first = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != first) return false;\n        }\n        return true;",
    "        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != Input[i - 1]) {\n                return false;\n            }\n        }\n        return true;",
    "        return Input.All(x => x == Input[0]);",
    "        return Input.All(x => x == Input[0]);",
    "        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (First != Input[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input[0].ToString().Length;\n        for (int i = 1; i < Input.Count; i++) {\n            if (Length != Input[i].ToString().Length) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input.Count;\n        long Count = 0;\n        long Sum = 0;\n        for (long i = 0; i < Length; i++) {\n            Count = Count + 1;\n            Sum = Sum + Input[(int)i];\n        }\n        if (Length == Count && Length == Sum) {\n            return true;\n        }\n        return false;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        long length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != length) {\n                return false;\n            }\n        }\n        return true;",
    "        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (First != Input[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (First != Input[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        for (int i = 0; i < Input.Count - 1; i++) {\n            if (Input[i] != Input[i + 1]) {\n                return false;\n            }\n        }\n        return true;",
    "        return Input.All(x => x == Input[0]);",
    "        if (Input.Count == 0) return true;\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) return false;\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        for (int i = 0; i < Input.Count - 1; i++) {\n            if (Input[i] != Input[i + 1]) {\n                return false;\n            }\n        }\n        return true;",
    "        long Last = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != Last) {\n                return false;\n            }\n        }\n        return true;",
    "        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (First != Input[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        long length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != length) {\n                return false;\n            }\n        }\n        return true;",
    "        return Input.Distinct().Count() == 1;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        return Input.Distinct().Count() == 1;",
    "        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (First != Input[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        long length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != length) {\n                return false;\n            }\n        }\n        return true;",
    "        long length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != length) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input.Count;\n        long Sum = 0;\n        for (long i = 0; i < Length; i++) {\n            Sum += Input[(int)i];\n        }\n        if (Sum % Length == 0) {\n            return true;\n        }\n        return false;",
    "        return Input.Distinct().Count() == 1;",
    "        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input[0].ToString().Length;\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i].ToString().Length != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        long first = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        long first = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        return Input.All(x => x == Input[0]);",
    "        int Length = Input.Count;\n        for (int i = 0; i < Length; i++) {\n            if (Input[i] != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) return true;\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) return false;\n        }\n        return true;",
    "        return Input.Distinct().Count() == 1;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != length) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) return true;\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (First != Input[i]) return false;\n        }\n        return true;",
    "        if (Input.Count == 0) return true;\n        long length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != length) return false;\n        }\n        return true;",
    "        long Length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        return Input.All(x => x == Input[0]);",
    "        return Input.Distinct().Count() == 1;",
    "        long length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != length) {\n                return false;\n            }\n        }\n        return true;",
    "        long first = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        long[] Lengths = new long[Input.Count];\n        for (int i = 0; i < Input.Count; i++) {\n            Lengths[i] = Input[i].ToString().Length;\n        }\n        return Lengths.Distinct().Count() == 1;",
    "        long first = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (first != Input[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (First != Input[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Length != Input[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        long length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != length) {\n                return false;\n            }\n        }\n        return true;",
    "        long N = Input.Count;\n        long[] A = new long[N];\n        long[] B = new long[N];\n        for (long i = 0; i < N; i++) {\n            A[i] = Input[i] / 1000000;\n            B[i] = Input[i] % 1000000;\n        }\n        long[] C = new long[N];\n        for (long i = 0; i < N; i++) {\n            C[i] = A[i] - B[i];\n        }\n        long[] D = new long[N];\n        for (long i = 0; i < N; i++) {\n            D[i] = A[i] + B[i];\n        }\n        long[] E = new long[N];\n        for (long i = 0; i < N; i++) {\n            E[i] = A[i] * B[i];\n        }\n        long[] F = new long[N];\n        for (long i = 0; i < N; i++) {\n            F[i] = A[i] * A[i];\n        }\n        long[] G = new long[N];\n        for (long i = 0; i < N; i++) {\n            G[i] = B[i] * B[i];\n        }\n        long[] H = new long[N];\n        for (long i = 0; i < N; i++) {\n            H[i] = A[i] * A[i] * A[i];\n        }\n        long[] I = new long[N];\n        for (long i = 0; i < N; i++) {\n            I[i] = B[i] * B[i] * B[i];\n        }\n        long[] J = new long[N];\n        for (long i = 0; i < N; i++) {\n            J[i] = A[i] * A[i] * A[i] * A[i];\n        }\n        long[] K = new long[N];\n        for (long i = 0; i < N; i++) {\n            K[i] = B[i] * B[i] *",
    "        var Length = Input.Count;\n        var Count = 0;\n        for (int i = 0; i < Length; i++) {\n            if (Input[i] == Length) {\n                Count++;\n            }\n        }\n        if (Count == Length) {\n            return true;\n        }\n        return false;",
    "        long Length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        return Input.All(x => x == Input[0]);",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        return Input.Distinct().Count() == 1;",
    "        long length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != length) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input[0].ToString().Length;\n        for (int i = 0; i < Input.Count; i++) {\n            if (Input[i].ToString().Length != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (First != Input[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) return true;\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) return false;\n        }\n        return true;",
    "        long N = Input.Count;\n        long[] Count = new long[N];\n        for (long i = 0; i < N; i++) {\n            Count[i] = Input[i].ToString().Length;\n        }\n        for (long i = 1; i < N; i++) {\n            if (Count[i] != Count[i - 1]) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        long length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != length) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0)\n            return true;\n        long Length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != Length)\n                return false;\n        }\n        return true;",
    "        long Length = Input[0].ToString().Length;\n        foreach (long Number in Input) {\n            if (Number.ToString().Length != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) return true;\n        long first = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != first) return false;\n        }\n        return true;",
    "        long Length = Input.Count;\n        if (Length == 0)\n            return true;\n        long First = Input[0];\n        for (long i = 1; i < Length; i++)\n            if (Input[(int)i] != First)\n                return false;\n        return true;",
    "        long Min = Input.Min();\n        long Max = Input.Max();\n        return Min == Max;",
    "        long Length = Input[0].ToString().Length;\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i].ToString().Length != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (First != Input[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        long length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != length) {\n                return false;\n            }\n        }\n        return true;",
    "        long Last = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != Last) {\n                return false;\n            }\n        }\n        return true;",
    "        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input[0].ToString().Length;\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i].ToString().Length != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long Length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input[0].ToString().Length;\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i].ToString().Length != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        long first = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        long length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != length) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) return true;\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) return false;\n        }\n        return true;",
    "        long length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != length) {\n                return false;\n            }\n        }\n        return true;",
    "        long length = Input[0].ToString().Length;\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i].ToString().Length != length) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        return Input.Distinct().Count() == 1;",
    "        long Length = Input.Count;\n        for (long i = 0; i < Length; i++) {\n            if (Input[(int)i] != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        return Input.Distinct().Count() == 1;",
    "        if (Input.Count == 0) {\n            return false;\n        }\n        long Length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        return Input.All(x => x == Input[0]);",
    "        if (Input.Count == 0) return true;\n        long first = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != first) return false;\n        }\n        return true;",
    "        // Write your code here\n        return true;",
    "        long first = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) return true;\n        long first = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != first) return false;\n        }\n        return true;",
    "        long Length = Input[0].ToString().Length;\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i].ToString().Length != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Length != Input[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        return Input.Distinct().Count() == 1;",
    "        long Length = Input.Count;\n        long First = Input[0];\n        for (long i = 1; i < Length; i++) {\n            if (Input[(int)i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (First != Input[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long Length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        long length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != length) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        long first = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (first != Input[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        var First = Input[0];\n        var Second = Input[1];\n        var Third = Input[2];\n        var Fourth = Input[3];\n        var Fifth = Input[4];\n        var Sixth = Input[5];\n        var Seventh = Input[6];\n        var Eighth = Input[7];\n        var Ninth = Input[8];\n        var Tenth = Input[9];\n        var Eleventh = Input[10];\n        var Twelfth = Input[11];\n        var Thirteenth = Input[12];\n        var Fourteenth = Input[13];\n        var Fifteenth = Input[14];\n        var Sixteenth = Input[15];\n        var Seventeenth = Input[16];\n        var Eighteenth = Input[17];\n        var Nineteenth = Input[18];\n        var Twentieth = Input[19];\n        var Twentyfirst = Input[20];\n        var Twentysecond = Input[21];\n        var Twentythird = Input[22];\n        var Twentyfourth = Input[23];\n        var Twentyfifth = Input[24];\n        var Twentysixth = Input[25];\n        var Twentyseventh = Input[26];\n        var Twentyeighth = Input[27];\n        var Twentyninth = Input[28];\n        var Thirtieth = Input[29];\n        var Thirtyfirst = Input[30];\n        var Thirtysecond = Input[31];\n        var Thirtythird = Input[32];\n        var Thirtyfourth = Input[33];\n        var Thirtyfifth = Input[34];\n        var Thirtysixth = Input[35];\n        var Thirtyseventh = Input[36];\n        var Thirtyeighth = Input[37];\n        var Thirtyninth = Input[38];\n        var Fortieth = Input[39];\n        var Fortyfirst = Input[40];\n        var Fortysecond = Input[41];\n        var Fortythird = Input[42];\n        var Fortyfourth = Input[43];\n        var Fortyfifth = Input[44];\n        var Fortysixth = Input[45];\n        var Fortyseventh = Input[46];\n        var Fortyeighth = Input[47];\n        var Fortyninth = Input[48];\n        var Fiftieth = Input[49];\n        var",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (First != Input[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) return true;\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) return false;\n        }\n        return true;",
    "        long len = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != len) {\n                return false;\n            }\n        }\n        return true;",
    "        return Input.Distinct().Count() == 1;",
    "        if (Input.Count == 0) return true;\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) return false;\n        }\n        return true;",
    "        int length = Input.Count;\n        if (length == 0) {\n            return true;\n        }\n        long first = Input[0];\n        for (int i = 1; i < length; i++) {\n            if (first != Input[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input[0].ToString().Length;\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i].ToString().Length != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        for (int i = 0; i < Input.Count - 1; i++) {\n            if (Input[i] != Input[i + 1]) {\n                return false;\n            }\n        }\n        return true;",
    "        long length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != length) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) return true;\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (First != Input[i]) return false;\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        var Length = Input[0].ToString().Length;\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i].ToString().Length != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (First != Input[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        return Input.Distinct().Count() == 1;",
    "        if (Input.Count == 0) return true;\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) return false;\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        for (int i = 0; i < Input.Count - 1; i++) {\n            if (Input[i] != Input[i + 1]) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long Length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) return true;\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) return false;\n        }\n        return true;",
    "        if (Input.Count == 0) return true;\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) return false;\n        }\n        return true;",
    "        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        long length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != length) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != Input[i - 1]) {\n                return false;\n            }\n        }\n        return true;",
    "        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (First != Input[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        var First = Input[0];\n        foreach (var Item in Input) {\n            if (Item != First) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) return true;\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) return false;\n        }\n        return true;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        bool Result = true;\n        for (int i = 0; i < Input.Count; i++) {\n            if (Input[i] != Input[0]) {\n                Result = false;\n                break;\n            }\n        }\n        return Result;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long Length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input[0].ToString().Length;\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i].ToString().Length != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        if (Input.Count == 0) return true;\n        long length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != length) return false;\n        }\n        return true;",
    "        // Write your code here\n        long length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != length) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input[0].ToString().Length;\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i].ToString().Length != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != Input[i - 1]) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        long Length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != Length) {\n                return false;\n            }\n        }\n        return true;",
    "        for (int i = 0; i < Input.Count - 1; i++) {\n            if (Input[i] != Input[i + 1]) {\n                return false;\n            }\n        }\n        return true;",
    "        bool Result = true;\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != Input[i - 1]) {\n                Result = false;\n                break;\n            }\n        }\n        return Result;",
    "        if (Input.Count == 0) {\n            return true;\n        }\n        long First = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != First) {\n                return false;\n            }\n        }\n        return true;",
    "        long length = Input[0];\n        for (int i = 1; i < Input.Count; i++) {\n            if (Input[i] != length) {\n                return false;\n            }\n        }\n        return true;"
  ]
}
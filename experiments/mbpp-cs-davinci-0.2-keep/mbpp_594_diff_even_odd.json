{
  "name": "mbpp_594_diff_even_odd",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the difference of the first even and first odd number of a given list.\n    public static long DiffEvenOdd(List<long> list1) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_594_diff_even_odd.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(DiffEvenOdd((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)4L, (long)1L, (long)6L, (long)8L}))) == (3L));\n    Debug.Assert(DiffEvenOdd((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (1L));\n    Debug.Assert(DiffEvenOdd((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L, (long)10L}))) == (9L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long l in list1) {\n            if (l % 2 == 0) {\n                if (!evenFound) {\n                    even = l;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = l;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long i in list1) {\n            if (i % 2 == 0 && !evenFound) {\n                even = i;\n                evenFound = true;\n            }\n            if (i % 2 != 0 && !oddFound) {\n                odd = i;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        // Your code here\n        return 0;",
    "        long even = list1.Find(x => x % 2 == 0);\n        long odd = list1.Find(x => x % 2 != 0);\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool foundEven = false;\n        bool foundOdd = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !foundEven) {\n                even = list1[i];\n                foundEven = true;\n            }\n            if (list1[i] % 2 != 0 && !foundOdd) {\n                odd = list1[i];\n                foundOdd = true;\n            }\n            if (foundEven && foundOdd) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = list1.Find(x => x % 2 == 0);\n        long odd = list1.Find(x => x % 2 != 0);\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long i in list1) {\n            if (i % 2 == 0 && !evenFound) {\n                even = i;\n                evenFound = true;\n            }\n            if (i % 2 != 0 && !oddFound) {\n                odd = i;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 == 1 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 == 1 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long i in list1) {\n            if (i % 2 == 0) {\n                even = i;\n                evenFound = true;\n                break;\n            }\n        }\n        foreach (long i in list1) {\n            if (i % 2 != 0) {\n                odd = i;\n                oddFound = true;\n                break;\n            }\n        }\n        if (evenFound && oddFound) {\n            return even - odd;\n        }\n        else if (evenFound) {\n            return even;\n        }\n        else if (oddFound) {\n            return -odd;\n        }\n        else {\n            return 0;\n        }",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 == 1 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                evenFound = true;\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                oddFound = true;\n                break;\n            }\n        }\n        if (evenFound && oddFound) {\n            return even - odd;\n        } else {\n            return 0;\n        }",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                even = num;\n                break;\n            }\n        }\n        foreach (long num in list1) {\n            if (num % 2 != 0) {\n                odd = num;\n                break;\n            }\n        }\n        return even - odd;",
    "        // Write your code here\n        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 == 1 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                even = num;\n                break;\n            }\n        }\n        foreach (long num in list1) {\n            if (num % 2 != 0) {\n                odd = num;\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                even = num;\n                evenFound = true;\n                break;\n            }\n        }\n        foreach (long num in list1) {\n            if (num % 2 != 0) {\n                odd = num;\n                oddFound = true;\n                break;\n            }\n        }\n        if (evenFound && oddFound) {\n            return even - odd;\n        } else if (evenFound) {\n            return even;\n        } else if (oddFound) {\n            return -odd;\n        } else {\n            return 0;\n        }",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        var even = list1.Where(x => x % 2 == 0);\n        var odd = list1.Where(x => x % 2 != 0);\n        if (even.Count() == 0 || odd.Count() == 0) {\n            return 0;\n        }\n        return even.First() - odd.First();",
    "        long even = 0;\n        long odd = 0;\n        bool foundEven = false;\n        bool foundOdd = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!foundEven) {\n                    even = num;\n                    foundEven = true;\n                }\n            } else {\n                if (!foundOdd) {\n                    odd = num;\n                    foundOdd = true;\n                }\n            }\n            if (foundEven && foundOdd) {\n                break;\n            }\n        }\n        return even - odd;",
    "        // Write your code here\n        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            } else if (list1[i] % 2 == 1 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        int i = 0;\n        while (even == 0 || odd == 0) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n            }\n            else {\n                odd = list1[i];\n            }\n            i++;\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 == 1 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        // Your code goes here.\n        return 0;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                even = num;\n                evenFound = true;\n                break;\n            }\n        }\n        foreach (long num in list1) {\n            if (num % 2 != 0) {\n                odd = num;\n                oddFound = true;\n                break;\n            }\n        }\n        if (evenFound && oddFound) {\n            return even - odd;\n        } else {\n            return 0;\n        }",
    "        long even = 0;\n        long odd = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                evenFound = true;\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                oddFound = true;\n                break;\n            }\n        }\n        if (evenFound && oddFound) {\n            return even - odd;\n        } else if (evenFound) {\n            return even;\n        } else if (oddFound) {\n            return -odd;\n        } else {\n            return 0;\n        }",
    "        long even = 0;\n        long odd = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long i in list1) {\n            if (i % 2 == 0 && !evenFound) {\n                even = i;\n                evenFound = true;\n            }\n            if (i % 2 != 0 && !oddFound) {\n                odd = i;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 == 1 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                even = num;\n                evenFound = true;\n                break;\n            }\n        }\n        foreach (long num in list1) {\n            if (num % 2 != 0) {\n                odd = num;\n                oddFound = true;\n                break;\n            }\n        }\n        if (evenFound && oddFound) {\n            return even - odd;\n        } else {\n            return 0;\n        }",
    "        long even = 0;\n        long odd = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                evenFound = true;\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                oddFound = true;\n                break;\n            }\n        }\n        if (evenFound && oddFound) {\n            return even - odd;\n        }\n        else if (evenFound) {\n            return even;\n        }\n        else if (oddFound) {\n            return -odd;\n        }\n        else {\n            return 0;\n        }",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        int i = 0;\n        while (even == 0 || odd == 0) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n            } else {\n                odd = list1[i];\n            }\n            i++;\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                even = num;\n                evenFound = true;\n                break;\n            }\n        }\n        foreach (long num in list1) {\n            if (num % 2 != 0) {\n                odd = num;\n                oddFound = true;\n                break;\n            }\n        }\n        if (evenFound && oddFound) {\n            return even - odd;\n        } else {\n            return 0;\n        }",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            } else if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long i in list1) {\n            if (i % 2 == 0) {\n                if (!evenFound) {\n                    even = i;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = i;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                even = num;\n                break;\n            }\n        }\n        foreach (long num in list1) {\n            if (num % 2 != 0) {\n                odd = num;\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                even = num;\n                break;\n            }\n        }\n        foreach (long num in list1) {\n            if (num % 2 != 0) {\n                odd = num;\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                if (!evenFound) {\n                    even = list1[i];\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = list1[i];\n                    oddFound = true;\n                }\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 == 1 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                even = num;\n                evenFound = true;\n                break;\n            }\n        }\n        foreach (long num in list1) {\n            if (num % 2 == 1) {\n                odd = num;\n                oddFound = true;\n                break;\n            }\n        }\n        if (evenFound && oddFound) {\n            return even - odd;\n        } else {\n            return 0;\n        }",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                evenFound = true;\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                oddFound = true;\n                break;\n            }\n        }\n        if (evenFound && oddFound) {\n            return even - odd;\n        } else {\n            return 0;\n        }",
    "        long even = 0;\n        long odd = 0;\n        foreach (long i in list1) {\n            if (i % 2 == 0) {\n                even = i;\n                break;\n            }\n        }\n        foreach (long i in list1) {\n            if (i % 2 != 0) {\n                odd = i;\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 == 1 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                even = num;\n                evenFound = true;\n                break;\n            }\n        }\n        foreach (long num in list1) {\n            if (num % 2 != 0) {\n                odd = num;\n                oddFound = true;\n                break;\n            }\n        }\n        if (evenFound && oddFound) {\n            return even - odd;\n        }\n        else {\n            return 0;\n        }",
    "        long even = 0, odd = 0;\n        bool evenFound = false, oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            } else if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        var even = list1.Where(x => x % 2 == 0).First();\n        var odd = list1.Where(x => x % 2 != 0).First();\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 == 1 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long item in list1) {\n            if (item % 2 == 0) {\n                even = item;\n                evenFound = true;\n                break;\n            }\n        }\n        foreach (long item in list1) {\n            if (item % 2 != 0) {\n                odd = item;\n                oddFound = true;\n                break;\n            }\n        }\n        if (evenFound && oddFound) {\n            return even - odd;\n        }\n        else if (evenFound) {\n            return even;\n        }\n        else if (oddFound) {\n            return odd;\n        }\n        else {\n            return 0;\n        }",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 == 1 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool foundEven = false;\n        bool foundOdd = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                foundEven = true;\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                foundOdd = true;\n                break;\n            }\n        }\n        if (foundEven && foundOdd) {\n            return even - odd;\n        } else {\n            return 0;\n        }",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        return list1.Where(x => x % 2 == 0).First() - list1.Where(x => x % 2 != 0).First();",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 == 1 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long i in list1) {\n            if (i % 2 == 0) {\n                even = i;\n                evenFound = true;\n                break;\n            }\n        }\n        foreach (long i in list1) {\n            if (i % 2 != 0) {\n                odd = i;\n                oddFound = true;\n                break;\n            }\n        }\n        if (evenFound && oddFound) {\n            return even - odd;\n        }\n        return 0;",
    "        long even = 0;\n        long odd = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                even = num;\n                evenFound = true;\n                break;\n            }\n        }\n        foreach (long num in list1) {\n            if (num % 2 != 0) {\n                odd = num;\n                oddFound = true;\n                break;\n            }\n        }\n        if (evenFound && oddFound) {\n            return even - odd;\n        } else {\n            return 0;\n        }",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long i in list1) {\n            if (i % 2 == 0) {\n                if (!evenFound) {\n                    even = i;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = i;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long i in list1) {\n            if (i % 2 == 0 && !evenFound) {\n                even = i;\n                evenFound = true;\n            }\n            if (i % 2 == 1 && !oddFound) {\n                odd = i;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        long diff = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        diff = even - odd;\n        return diff;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool foundEven = false;\n        bool foundOdd = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && foundEven == false) {\n                even = list1[i];\n                foundEven = true;\n            }\n            if (list1[i] % 2 != 0 && foundOdd == false) {\n                odd = list1[i];\n                foundOdd = true;\n            }\n            if (foundEven && foundOdd) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            } else if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        long diff = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        diff = even - odd;\n        return diff;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool foundEven = false;\n        bool foundOdd = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                foundEven = true;\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                foundOdd = true;\n                break;\n            }\n        }\n        if (foundEven && foundOdd) {\n            return even - odd;\n        }\n        else {\n            return 0;\n        }",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                evenFound = true;\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                oddFound = true;\n                break;\n            }\n        }\n        if (evenFound && oddFound) {\n            return even - odd;\n        }\n        else if (evenFound) {\n            return even;\n        }\n        else if (oddFound) {\n            return -odd;\n        }\n        else {\n            return 0;\n        }",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            }\n            else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                even = num;\n                break;\n            }\n        }\n        foreach (long num in list1) {\n            if (num % 2 != 0) {\n                odd = num;\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long i in list1) {\n            if (i % 2 == 0 && !evenFound) {\n                even = i;\n                evenFound = true;\n            }\n            if (i % 2 != 0 && !oddFound) {\n                odd = i;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool foundEven = false;\n        bool foundOdd = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!foundEven) {\n                    even = num;\n                    foundEven = true;\n                }\n            } else {\n                if (!foundOdd) {\n                    odd = num;\n                    foundOdd = true;\n                }\n            }\n            if (foundEven && foundOdd) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 == 1 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            else if (list1[i] % 2 == 1 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                evenFound = true;\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                oddFound = true;\n                break;\n            }\n        }\n        if (evenFound && oddFound) {\n            return even - odd;\n        } else if (evenFound) {\n            return even;\n        } else if (oddFound) {\n            return -odd;\n        } else {\n            return 0;\n        }",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            } else if (list1[i] % 2 == 1 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                return even - odd;\n            }\n        }\n        return 0;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long i in list1) {\n            if (i % 2 == 0) {\n                if (!evenFound) {\n                    even = i;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = i;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                even = num;\n                break;\n            }\n        }\n        foreach (long num in list1) {\n            if (num % 2 != 0) {\n                odd = num;\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long l in list1) {\n            if (l % 2 == 0 && !evenFound) {\n                even = l;\n                evenFound = true;\n            } else if (l % 2 != 0 && !oddFound) {\n                odd = l;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long i in list1) {\n            if (i % 2 == 0 && !evenFound) {\n                even = i;\n                evenFound = true;\n            }\n            if (i % 2 == 1 && !oddFound) {\n                odd = i;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 == 1 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        // Write your code here\n        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long i in list1) {\n            if (i % 2 == 0 && !evenFound) {\n                even = i;\n                evenFound = true;\n            }\n            if (i % 2 != 0 && !oddFound) {\n                odd = i;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 == 1 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 == 1 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach(long num in list1) {\n            if(num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            else if(num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if(evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        // Write your code here\n        long even = 0;\n        long odd = 0;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                even = num;\n                break;\n            }\n        }\n        foreach (long num in list1) {\n            if (num % 2 != 0) {\n                odd = num;\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            else if (num % 2 == 1 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                even = num;\n                break;\n            }\n        }\n        foreach (long num in list1) {\n            if (num % 2 != 0) {\n                odd = num;\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            } else if (list1[i] % 2 == 1 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                if (!evenFound) {\n                    even = num;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = num;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long i in list1) {\n            if (i % 2 == 0) {\n                if (!evenFound) {\n                    even = i;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = i;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                return even - odd;\n            }\n        }\n        return 0;",
    "        long even = 0;\n        long odd = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        long diff = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        diff = even - odd;\n        return diff;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 == 1 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        foreach (long num in list1) {\n            if (num % 2 == 0) {\n                even = num;\n                break;\n            }\n        }\n        foreach (long num in list1) {\n            if (num % 2 != 0) {\n                odd = num;\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long num in list1) {\n            if (num % 2 == 0 && !evenFound) {\n                even = num;\n                evenFound = true;\n            }\n            if (num % 2 != 0 && !oddFound) {\n                odd = num;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0) {\n                even = list1[i];\n                break;\n            }\n        }\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 != 0) {\n                odd = list1[i];\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long i in list1) {\n            if (i % 2 == 0 && !evenFound) {\n                even = i;\n                evenFound = true;\n            }\n            if (i % 2 != 0 && !oddFound) {\n                odd = i;\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long i in list1) {\n            if (i % 2 == 0) {\n                if (!evenFound) {\n                    even = i;\n                    evenFound = true;\n                }\n            } else {\n                if (!oddFound) {\n                    odd = i;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 == 1 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        foreach (long i in list1) {\n            if (i % 2 == 0) {\n                if (!evenFound) {\n                    even = i;\n                    evenFound = true;\n                }\n            }\n            else {\n                if (!oddFound) {\n                    odd = i;\n                    oddFound = true;\n                }\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;",
    "        long even = 0;\n        long odd = 0;\n        bool evenFound = false;\n        bool oddFound = false;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] % 2 == 0 && !evenFound) {\n                even = list1[i];\n                evenFound = true;\n            }\n            if (list1[i] % 2 != 0 && !oddFound) {\n                odd = list1[i];\n                oddFound = true;\n            }\n            if (evenFound && oddFound) {\n                break;\n            }\n        }\n        return even - odd;"
  ]
}
{
  "name": "mbpp_782_odd_length_sum",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_782_odd_length_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aadd334f6b9a488eb0e6a4780b76ab9d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aadd334f6b9a488eb0e6a4780b76ab9d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aadd334f6b9a488eb0e6a4780b76ab9d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aadd334f6b9a488eb0e6a4780b76ab9d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i) % 2 == 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aadd334f6b9a488eb0e6a4780b76ab9d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aadd334f6b9a488eb0e6a4780b76ab9d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i) % 2 == 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aadd334f6b9a488eb0e6a4780b76ab9d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aadd334f6b9a488eb0e6a4780b76ab9d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i) % 2 == 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i) % 2 == 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aadd334f6b9a488eb0e6a4780b76ab9d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aadd334f6b9a488eb0e6a4780b76ab9d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            sum += arr[i];\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j += 2) {\n                sum += arr[i] + arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0039545333ff4821af90a15e56db3684>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0039545333ff4821af90a15e56db3684>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            sum += arr[i] * (i + 1) * (arr.Count - i);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1666122410,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09505b0e5c2c4473b1fd892059c83594>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09505b0e5c2c4473b1fd892059c83594>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i) % 2 == 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for(int i = 0; i < arr.Count; i++) {\n            for(int j = i; j < arr.Count; j++) {\n                if((j - i + 1) % 2 == 1) {\n                    for(int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aadd334f6b9a488eb0e6a4780b76ab9d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aadd334f6b9a488eb0e6a4780b76ab9d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i) % 2 == 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i) % 2 == 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i) % 2 == 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for(int i = 0; i < arr.Count; i++) {\n            for(int j = i; j < arr.Count; j++) {\n                if((j - i) % 2 == 0) {\n                    for(int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i) % 2 == 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i) % 2 == 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i) % 2 == 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    public static long OddLengthSum(List<long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i; j < arr.Count; j++) {\n                if ((j - i + 1) % 2 != 0) {\n                    for (int k = i; k <= j; k++) {\n                        sum += arr[k];\n                    }\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)4L}))) == (14L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (15L));\n    Debug.Assert(OddLengthSum((new List<long>(new long[]{(long)1L, (long)7L}))) == (8L));\n    }\n\n}\n",
      "timestamp": 1665509942,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
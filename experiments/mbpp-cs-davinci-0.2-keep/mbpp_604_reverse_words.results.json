{
  "name": "mbpp_604_reverse_words",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_604_reverse_words.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        Array.Reverse(words);\n        return string.Join(\" \", words);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = new string(words[i].Reverse().ToArray());\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = words.Reverse();\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        string result = \"\";\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result += words[i] + \" \";\n        }\n        return result.Trim();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var result = \"\";\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result += words[i] + \" \";\n        }\n        return result.Trim();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = new string(words[i].Reverse().ToArray());\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for(int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if(i > 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var result = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result.Append(words[i]);\n            if (i > 0) {\n                result.Append(' ');\n            }\n        }\n        return result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new List<string>();\n        foreach (var word in words) {\n            reversed.Add(new string(word.Reverse().ToArray()));\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cb952a8cf7604d01ad0366f99c4bdaab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cb952a8cf7604d01ad0366f99c4bdaab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var result = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result.Append(words[i]);\n            if (i != 0) {\n                result.Append(\" \");\n            }\n        }\n        return result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = new string(words[i].Reverse().ToArray());\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        Array.Reverse(words);\n        return string.Join(\" \", words);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        if (s == null) {\n            return null;\n        }\n        string[] words = s.Split(' ');\n        StringBuilder sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            sb.Append(' ');\n        }\n        return sb.ToString().Trim();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124101,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        Array.Reverse(words);\n        return string.Join(\" \", words);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = new string(words[i].Reverse().ToArray());\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        // Split the string into words.\n        string[] words = s.Split(' ');\n        // Reverse the words.\n        Array.Reverse(words);\n        // Return the reversed string.\n        return string.Join(\" \", words);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124101,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        string result = \"\";\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result += words[i] + \" \";\n        }\n        return result.Trim();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        StringBuilder sb = new StringBuilder();\n        int i = s.Length - 1;\n        while (i >= 0) {\n            while (i >= 0 && s[i] == ' ') i--;\n            if (i < 0) break;\n            if (sb.Length > 0) sb.Append(' ');\n            StringBuilder word = new StringBuilder();\n            while (i >= 0 && s[i] != ' ') {\n                word.Append(s[i]);\n                i--;\n            }\n            sb.Append(word.ToString().Reverse().ToArray());\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124101,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        string result = \"\";\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result += words[i];\n            if (i != 0) {\n                result += \" \";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124101,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        Array.Reverse(words);\n        return string.Join(\" \", words);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var result = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result.Append(words[i]);\n            if (i != 0) {\n                result.Append(\" \");\n            }\n        }\n        return result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        Array.Reverse(words);\n        return string.Join(\" \", words);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = new string(words[i].Reverse().ToArray());\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        Array.Reverse(words);\n        return string.Join(\" \", words);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = ReverseString(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124099,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplkvly8be.cs(14,27): error CS0103: The name 'ReverseString' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        Array.Reverse(words);\n        return string.Join(\" \", words);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        char[] arr = s.ToCharArray();\n        int start = 0;\n        for (int i = 0; i < arr.Length; i++) {\n            if (arr[i] == ' ') {\n                Reverse(arr, start, i - 1);\n                start = i + 1;\n            }\n        }\n        Reverse(arr, start, arr.Length - 1);\n        Reverse(arr, 0, arr.Length - 1);\n        return new string(arr);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124101,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8oye9okf.cs(15,17): error CS0103: The name 'Reverse' does not exist in the current context\n/tmp/tmp8oye9okf.cs(19,9): error CS0103: The name 'Reverse' does not exist in the current context\n/tmp/tmp8oye9okf.cs(20,9): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(\" \");\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = ReverseString(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124099,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplkvly8be.cs(14,27): error CS0103: The name 'ReverseString' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = new string(words[i].Reverse().ToArray());\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(\" \");\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new List<string>();\n        foreach (var word in words) {\n            reversed.Add(ReverseString(word));\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124101,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmcy39y6c.cs(14,26): error CS0103: The name 'ReverseString' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var result = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result.Append(words[i]);\n            if (i > 0) {\n                result.Append(' ');\n            }\n        }\n        return result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = new string(words[i].Reverse().ToArray());\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        Array.Reverse(words);\n        return string.Join(\" \", words);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var result = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result.Append(words[i]);\n            if (i > 0) {\n                result.Append(' ');\n            }\n        }\n        return result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        string result = \"\";\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result += words[i] + \" \";\n        }\n        return result.Trim();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        Array.Reverse(words);\n        return string.Join(\" \", words);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(\" \");\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversedWords = words.Reverse();\n        return string.Join(\" \", reversedWords);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124101,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = new string(words[i].Reverse().ToArray());\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = new string(words[i].Reverse().ToArray());\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        string result = \"\";\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result += words[i] + \" \";\n        }\n        return result.Trim();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        string reversed = \"\";\n        for (int i = words.Length - 1; i >= 0; i--) {\n            reversed += words[i];\n            if (i != 0) {\n                reversed += \" \";\n            }\n        }\n        return reversed;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124101,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new List<string>();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            reversed.Add(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124101,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = new string(words[i].Reverse().ToArray());\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        // Split the string into words\n        string[] words = s.Split(' ');\n        // Reverse the words\n        Array.Reverse(words);\n        // Join the words back together\n        return string.Join(\" \", words);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        string result = \"\";\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result += words[i] + \" \";\n        }\n        return result.Trim();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = new string(words[i].Reverse().ToArray());\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        Array.Reverse(words);\n        return string.Join(\" \", words);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        Array.Reverse(words);\n        return string.Join(\" \", words);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        string result = \"\";\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result += words[i] + \" \";\n        }\n        return result.Trim();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = new string(words[i].Reverse().ToArray());\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var result = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result.Append(words[i]);\n            if (i > 0) {\n                result.Append(' ');\n            }\n        }\n        return result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = new string(words[i].Reverse().ToArray());\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var result = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            if (words[i] != \"\") {\n                result.Append(words[i]);\n                if (i != 0) {\n                    result.Append(\" \");\n                }\n            }\n        }\n        return result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124101,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = new string(words[i].Reverse().ToArray());\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        string result = \"\";\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result += words[i] + \" \";\n        }\n        return result.TrimEnd();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        string result = \"\";\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result += words[i] + \" \";\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124101,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3bede80471304bc6b51616c423714f40>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3bede80471304bc6b51616c423714f40>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(\" \");\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return String.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124099,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkrxa0bxx.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var result = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result.Append(words[i]);\n            if (i > 0) {\n                result.Append(\" \");\n            }\n        }\n        return result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var result = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result.Append(words[i]);\n            if (i > 0) {\n                result.Append(' ');\n            }\n        }\n        return result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        Array.Reverse(words);\n        return string.Join(\" \", words);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = new string(words[i].Reverse().ToArray());\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        string result = \"\";\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result += words[i] + \" \";\n        }\n        return result.Trim();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return String.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124099,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkrxa0bxx.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        Array.Reverse(words);\n        return string.Join(\" \", words);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        string result = \"\";\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result += words[i] + \" \";\n        }\n        return result.TrimEnd(' ');\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124101,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var result = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result.Append(words[i]);\n            if (i != 0) {\n                result.Append(' ');\n            }\n        }\n        return result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = words.Reverse();\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        string reversed = \"\";\n        for (int i = words.Length - 1; i >= 0; i--) {\n            reversed += words[i] + \" \";\n        }\n        return reversed.Trim();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124101,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversedWords = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversedWords[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversedWords);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124101,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphrur6gz1.cs(14,32): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(\" \");\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        Array.Reverse(words);\n        return string.Join(\" \", words);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        Array.Reverse(words);\n        return string.Join(\" \", words);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        Array.Reverse(words);\n        return string.Join(\" \", words);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = new string(words[i].Reverse().ToArray());\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        string result = \"\";\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result += words[i] + \" \";\n        }\n        return result.Trim();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = new string(words[i].Reverse().ToArray());\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        Array.Reverse(words);\n        return string.Join(\" \", words);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        StringBuilder sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(\" \");\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124101,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        Array.Reverse(words);\n        return string.Join(\" \", words);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = new string(words[i].Reverse().ToArray());\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        char[] arr = s.ToCharArray();\n        Reverse(arr, 0, arr.Length - 1);\n        int start = 0;\n        for (int i = 0; i < arr.Length; i++) {\n            if (arr[i] == ' ') {\n                Reverse(arr, start, i - 1);\n                start = i + 1;\n            }\n        }\n        Reverse(arr, start, arr.Length - 1);\n        return new string(arr);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124101,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_vr3twdi.cs(12,9): error CS0103: The name 'Reverse' does not exist in the current context\n/tmp/tmp_vr3twdi.cs(16,17): error CS0103: The name 'Reverse' does not exist in the current context\n/tmp/tmp_vr3twdi.cs(20,9): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        Array.Reverse(words);\n        return string.Join(\" \", words);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        Array.Reverse(words);\n        return string.Join(\" \", words);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i > 0) {\n                sb.Append(\" \");\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        string result = \"\";\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result += words[i];\n            if (i != 0) {\n                result += \" \";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124101,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        string result = \"\";\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result += words[i] + \" \";\n        }\n        return result.Trim();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        Array.Reverse(words);\n        return string.Join(\" \", words);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        string result = \"\";\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result += words[i] + \" \";\n        }\n        return result.Trim();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        string result = \"\";\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result += words[i] + \" \";\n        }\n        return result.Trim();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = new string(words[i].Reverse().ToArray());\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(\" \");\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(\" \");\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = ReverseString(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124099,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplkvly8be.cs(14,27): error CS0103: The name 'ReverseString' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        Array.Reverse(words);\n        return string.Join(\" \", words);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = Reverse(words[i]);\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplb2mvrk2.cs(14,27): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(\" \");\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = new string(words[i].Reverse().ToArray());\n        }\n        return string.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bbc1fad057fd48609ee3a35b2450a5ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            reversed.Append(words[i]);\n            if (i != 0) {\n                reversed.Append(' ');\n            }\n        }\n        return reversed.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124101,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        string[] words = s.Split(' ');\n        string result = \"\";\n        for (int i = words.Length - 1; i >= 0; i--) {\n            result += words[i] + \" \";\n        }\n        return result.Trim();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var reversed = new string[words.Length];\n        for (int i = 0; i < words.Length; i++) {\n            reversed[i] = ReverseString(words[i]);\n        }\n        return String.Join(\" \", reversed);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1666124101,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpe82dnodj.cs(14,27): error CS0103: The name 'ReverseString' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to reverse words seperated by spaces in a given string.\n    public static string ReverseWords(string s) {\n        var words = s.Split(' ');\n        var sb = new StringBuilder();\n        for (int i = words.Length - 1; i >= 0; i--) {\n            sb.Append(words[i]);\n            if (i != 0) {\n                sb.Append(' ');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseWords((\"python program\")).Equals((\"program python\")));\n    Debug.Assert(ReverseWords((\"java language\")).Equals((\"language java\")));\n    Debug.Assert(ReverseWords((\"indian man\")).Equals((\"man indian\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
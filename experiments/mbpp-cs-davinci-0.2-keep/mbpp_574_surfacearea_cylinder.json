{
  "name": "mbpp_574_surfacearea_cylinder",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the surface area of a cylinder.\n    public static float SurfaceareaCylinder(long r, long h) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_574_surfacearea_cylinder.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(SurfaceareaCylinder((10L), (5L)) == (942.45f));\n    Debug.Assert(SurfaceareaCylinder((4L), (5L)) == (226.18800000000002f));\n    Debug.Assert(SurfaceareaCylinder((4L), (10L)) == (351.848f));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return (float)(2 * Math.PI * r * (r + h));",
    "        return (float)(2 * Math.PI * r * h + 2 * Math.PI * r * r);",
    "        float area = (float)(2 * Math.PI * r * h + 2 * Math.PI * r * r);\n        return area;",
    "        return (float)(2 * Math.PI * r * h + 2 * Math.PI * r * r);",
    "        return (float)(2 * Math.PI * r * (r + h));",
    "        return (float)(2 * Math.PI * r * h + 2 * Math.PI * r * r);",
    "        return (float)(2 * Math.PI * r * (r + h));",
    "        return (float)(2 * Math.PI * r * h + 2 * Math.PI * r * r);",
    "        return (float)(2 * Math.PI * r * h + 2 * Math.PI * r * r);",
    "        return 2 * (float)Math.PI * r * (r + h);",
    "        return (float)(2 * Math.PI * r * h + 2 * Math.PI * r * r);",
    "        return (float)(2 * Math.PI * r * (r + h));",
    "        return 2 * (float)Math.PI * r * (r + h);",
    "        return (float)(2 * Math.PI * r * h + 2 * Math.PI * r * r);",
    "        return (float)(2 * Math.PI * r * (r + h));",
    "        return (float)(2 * Math.PI * r * (r + h));",
    "        return 2 * (float)Math.PI * r * (r + h);",
    "        return (float)(2 * Math.PI * r * (r + h));",
    "        return (float)(2 * Math.PI * r * (r + h));",
    "        return (float)(2 * Math.PI * r * (r + h));"
  ]
}
{
  "name": "mbpp_584_find_adverbs",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the first adverb ending with ly and its positions in a given string.\n    public static string FindAdverbs(string text) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_584_find_adverbs.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindAdverbs((\"Clearly, he has no excuse for such behavior.\")).Equals((\"0-7: Clearly\")));\n    Debug.Assert(FindAdverbs((\"Please handle the situation carefuly\")).Equals((\"28-36: carefuly\")));\n    Debug.Assert(FindAdverbs((\"Complete the task quickly\")).Equals((\"18-25: quickly\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        // Write your code here\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result += words[i] + \" \" + i + \" \";\n            }\n        }\n        return result;",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        if (adverbs.Count == 0) {\n            return \"There is no adverb in the text!\";\n        }\n        var result = new StringBuilder();\n        for (int i = 0; i < adverbs.Count; i++) {\n            result.AppendLine($\"{adverbs[i]} - {positions[i]}\");\n        }\n        return result.ToString();",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} {i}\";\n            }\n        }\n        return \"Not found\";",
    "        string[] words = text.Split(' ');\n        string adverb = \"\";\n        int index = 0;\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverb = words[i];\n                index = i;\n                break;\n            }\n        }\n        return adverb + \" \" + index;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" at position \" + i;\n            }\n        }\n        return \"No adverb found\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result += words[i] + \" \" + i + \" \";\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} {i}\";\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var adverbs = new List<string>();\n        var positions = new List<int>();\n        var words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return string.Join(\", \", adverbs) + \": \" + string.Join(\", \", positions);",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return adverbs.Count > 0 ? $\"{adverbs[0]} {positions[0]}\" : \"\";",
    "        var words = text.Split(' ');\n        var adverbs = words.Where(w => w.EndsWith(\"ly\"));\n        var first = adverbs.FirstOrDefault();\n        if (first == null) return \"\";\n        var index = text.IndexOf(first);\n        return $\"{first} {index}\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return adverbs.Count == 0 ? \"There are no adverbs in the text\" : $\"The first adverb is {adverbs[0]} and its position is {positions[0]}\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return $\"{adverbs[0]} {positions[0]}\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result += words[i] + \" \" + i + \" \";\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = words.Where(w => w.EndsWith(\"ly\"));\n        var firstAdverb = adverbs.FirstOrDefault();\n        if (firstAdverb == null) {\n            return \"No adverbs ending with ly found!\";\n        }\n        var index = Array.IndexOf(words, firstAdverb);\n        return $\"First adverb ending with ly: {firstAdverb}, index: {index}\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} {i}\";\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i];\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = words.Where(w => w.EndsWith(\"ly\"));\n        var firstAdverb = adverbs.FirstOrDefault();\n        if (firstAdverb == null) {\n            return \"No adverbs ending with ly\";\n        }\n        var index = text.IndexOf(firstAdverb);\n        return $\"{firstAdverb} at {index}\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i.ToString();\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return $\"{adverbs[0]} {positions[0]}\";",
    "        var adverbs = new List<string>();\n        var words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n            }\n        }\n        return string.Join(\", \", adverbs);",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} {i}\";\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = words.Where(w => w.EndsWith(\"ly\"));\n        var firstAdverb = adverbs.FirstOrDefault();\n        if (firstAdverb == null) {\n            return \"No adverbs found\";\n        }\n        var index = Array.IndexOf(words, firstAdverb);\n        return $\"First adverb: {firstAdverb}, position: {index}\";",
    "        // Write your code here.\n        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i];\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i];\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i];\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].Length > 2 && words[i].Substring(words[i].Length - 2) == \"ly\") {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} {i}\";\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i];\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        // Your code goes here\n        return \"\";",
    "        // Write your code here\n        string[] words = text.Split(' ');\n        int index = 0;\n        foreach (string word in words) {\n            if (word.EndsWith(\"ly\")) {\n                return word + \" \" + index;\n            }\n            index++;\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string result = \"\";\n        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result += words[i] + \" \" + i + \" \";\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} {i}\";\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i];\n                break;\n            }\n        }\n        return result;",
    "        // Write your code here\n        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i];\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        var words = text.Split(' ');\n        var adverbs = words.Where(w => w.EndsWith(\"ly\"));\n        if (adverbs.Count() == 0) {\n            return \"No adverbs found\";\n        }\n        var firstAdverb = adverbs.First();\n        var index = text.IndexOf(firstAdverb);\n        return $\"First adverb: {firstAdverb}, position: {index}\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = words.Where(w => w.EndsWith(\"ly\"));\n        var first = adverbs.FirstOrDefault();\n        if (first == null) {\n            return \"No adverbs found\";\n        }\n        var index = text.IndexOf(first);\n        return $\"First adverb: {first}, index: {index}\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        // Write your code here\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        var words = text.Split(' ');\n        var adverbs = words.Where(w => w.EndsWith(\"ly\"));\n        var firstAdverb = adverbs.FirstOrDefault();\n        if (firstAdverb == null) {\n            return \"No adverbs found!\";\n        }\n        var index = text.IndexOf(firstAdverb);\n        return $\"First adverb: {firstAdverb} at position {index}\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        // Write your code here.\n        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(new char[] { ' ', '.', ',' }, StringSplitOptions.RemoveEmptyEntries);\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return adverbs.Count > 0 ? $\"{adverbs[0]} {positions[0]}\" : \"\";",
    "        var adverbs = new List<string>();\n        var words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            var word = words[i];\n            if (word.EndsWith(\"ly\")) {\n                adverbs.Add(word);\n            }\n        }\n        return string.Join(\", \", adverbs);",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].Length > 2 && words[i].Substring(words[i].Length - 2) == \"ly\") {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var result = new List<string>();\n        var words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result.Add(words[i]);\n                result.Add(i.ToString());\n                return string.Join(\" \", result);\n            }\n        }\n        return \"No adverbs found\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (var i = 0; i < words.Length; i++) {\n            var word = words[i];\n            if (word.EndsWith(\"ly\")) {\n                adverbs.Add(word);\n                positions.Add(i);\n            }\n        }\n        return adverbs.Count == 0 ? \"No adverbs found\" : $\"{adverbs[0]} at position {positions[0]}\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        var words = text.Split(' ');\n        var adverbs = words.Where(w => w.EndsWith(\"ly\"));\n        var firstAdverb = adverbs.FirstOrDefault();\n        if (firstAdverb == null) {\n            return \"No adverbs found\";\n        }\n        var index = text.IndexOf(firstAdverb);\n        return $\"First adverb: {firstAdverb}, index: {index}\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i];\n            }\n        }\n        return null;",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return $\"{adverbs[0]} {positions[0]}\";",
    "        var result = new StringBuilder();\n        var words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result.Append(words[i] + \" \" + i + \" \");\n            }\n        }\n        return result.ToString();",
    "        string[] words = text.Split(' ');\n        for(int i = 0; i < words.Length; i++) {\n            if(words[i].EndsWith(\"ly\")) {\n                return words[i];\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            var word = words[i];\n            if (word.EndsWith(\"ly\")) {\n                adverbs.Add(word);\n                positions.Add(i);\n            }\n        }\n        if (adverbs.Count == 0) {\n            return \"No adverbs found\";\n        }\n        var result = new StringBuilder();\n        for (int i = 0; i < adverbs.Count; i++) {\n            result.AppendLine($\"{adverbs[i]} at position {positions[i]}\");\n        }\n        return result.ToString();",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        var result = new StringBuilder();\n        var words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result.AppendFormat(\"{0} {1}\", words[i], i);\n                break;\n            }\n        }\n        return result.ToString();",
    "        // Write your code here\n        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        // Write your code here\n        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i];\n                break;\n            }\n        }\n        return result;",
    "        var words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} {i}\";\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return $\"{adverbs[0]} {positions[0]}\";",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return $\"{adverbs[0]} {positions[0]}\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = words.Where(w => w.EndsWith(\"ly\"));\n        var firstAdverb = adverbs.FirstOrDefault();\n        var firstAdverbIndex = words.ToList().IndexOf(firstAdverb);\n        return $\"{firstAdverb} - {firstAdverbIndex}\";",
    "        var words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} at {i}\";\n            }\n        }\n        return \"No adverbs found\";",
    "        string[] words = text.Split(' ');\n        int i = 0;\n        foreach (string word in words) {\n            if (word.EndsWith(\"ly\")) {\n                return word + \" \" + i;\n            }\n            i++;\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        // Write your code here\n        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result += words[i] + \" \" + i + \" \";\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i];\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i];\n            }\n        }\n        return null;",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i];\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result += words[i] + \" \" + i + \" \";\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"No adverbs ending with ly\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result += words[i] + \" \" + i + \" \";\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i];\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        // Write your code here\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = words.Where(w => w.EndsWith(\"ly\"));\n        var firstAdverb = adverbs.FirstOrDefault();\n        var firstAdverbIndex = words.ToList().IndexOf(firstAdverb);\n        var lastAdverbIndex = words.ToList().LastIndexOf(firstAdverb);\n        return $\"{firstAdverb} {firstAdverbIndex} {lastAdverbIndex}\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return adverbs.Count > 0 ? $\"{adverbs[0]} at {positions[0]}\" : \"No adverbs found\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        // Write your code here\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result += words[i] + \" \" + i + \"\\n\";\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].Length > 2 && words[i].Substring(words[i].Length - 2, 2) == \"ly\") {\n                result += words[i] + \" \";\n            }\n        }\n        return result;",
    "        var words = text.Split(' ');\n        var adverbs = words.Where(w => w.EndsWith(\"ly\"));\n        var firstAdverb = adverbs.FirstOrDefault();\n        if (firstAdverb == null) {\n            return \"No adverbs found\";\n        }\n        var index = Array.IndexOf(words, firstAdverb);\n        return $\"{firstAdverb} at position {index}\";",
    "        // Write your code here\n        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var result = new StringBuilder();\n        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        if (adverbs.Count == 0) {\n            return \"There are no adverbs in the text.\";\n        }\n        result.Append(\"The first adverb is: \");\n        result.Append(adverbs[0]);\n        result.Append(\" and its position is: \");\n        result.Append(positions[0]);\n        return result.ToString();",
    "        // Write your code here.\n        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i];\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i];\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = words.Where(w => w.EndsWith(\"ly\"));\n        var firstAdverb = adverbs.FirstOrDefault();\n        var firstAdverbIndex = words.ToList().IndexOf(firstAdverb);\n        return $\"{firstAdverb} {firstAdverbIndex}\";",
    "        string[] words = text.Split(' ');\n        int index = 0;\n        foreach (string word in words) {\n            if (word.EndsWith(\"ly\")) {\n                return \"The first adverb is \" + word + \" and its position is \" + index;\n            }\n            index++;\n        }\n        return \"There are no adverbs in the text\";",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return adverbs.Count > 0 ? $\"{adverbs[0]} {positions[0]}\" : \"\";",
    "        var words = text.Split(' ');\n        var adverbs = words.Where(w => w.EndsWith(\"ly\"));\n        if (adverbs.Count() == 0) {\n            return \"No adverbs found\";\n        }\n        var adverb = adverbs.First();\n        var positions = new List<int>();\n        var index = 0;\n        while (true) {\n            index = text.IndexOf(adverb, index);\n            if (index == -1) {\n                break;\n            }\n            positions.Add(index);\n            index += adverb.Length;\n        }\n        return $\"{adverb} - {string.Join(\", \", positions)}\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result += words[i] + \" \" + i + \" \";\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return $\"{adverbs[0]} {positions[0]}\";",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return adverbs.Count > 0 ? $\"{adverbs[0]} {positions[0]}\" : \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result += words[i] + \" \" + i + \" \";\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return $\"{adverbs[0]} {positions[0]}\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result += words[i] + \" \" + i + \" \";\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i];\n            }\n        }\n        return null;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} {i}\";\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var result = new StringBuilder();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result.Append(words[i]);\n                result.Append(\" \");\n                result.Append(i);\n                result.Append(\" \");\n            }\n        }\n        return result.ToString();",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} {i}\";\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = words.Where(w => w.EndsWith(\"ly\"));\n        var firstAdverb = adverbs.FirstOrDefault();\n        if (firstAdverb == null) return \"No adverbs\";\n        var index = Array.IndexOf(words, firstAdverb);\n        return $\"{firstAdverb} at position {index}\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (var i = 0; i < words.Length; i++) {\n            var word = words[i];\n            if (word.EndsWith(\"ly\")) {\n                adverbs.Add(word);\n                positions.Add(i);\n            }\n        }\n        return $\"{adverbs[0]} {positions[0]}\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = words.Where(w => w.EndsWith(\"ly\"));\n        var firstAdverb = adverbs.FirstOrDefault();\n        if (firstAdverb == null) {\n            return \"No adverbs found\";\n        }\n        var index = text.IndexOf(firstAdverb);\n        return $\"First adverb: {firstAdverb}, index: {index}\";",
    "        var adverbs = new List<string>();\n        var words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n            }\n        }\n        return adverbs.Count > 0 ? $\"{adverbs[0]} {text.IndexOf(adverbs[0])}\" : \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} {i}\";\n            }\n        }\n        return \"No adverbs found\";",
    "        var words = text.Split(' ');\n        var adverbs = words.Where(w => w.EndsWith(\"ly\"));\n        var first = adverbs.FirstOrDefault();\n        if (first == null) {\n            return \"No adverbs found\";\n        }\n        var positions = new List<int>();\n        var start = 0;\n        while (true) {\n            var index = text.IndexOf(first, start);\n            if (index == -1) {\n                break;\n            }\n            positions.Add(index);\n            start = index + 1;\n        }\n        return $\"{first} at {string.Join(\", \", positions)}\";",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return $\"{adverbs[0]} {positions[0]}\";",
    "        // your code here\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = words.Where(w => w.EndsWith(\"ly\"));\n        if (adverbs.Count() == 0) {\n            return \"No adverbs found\";\n        }\n        var firstAdverb = adverbs.First();\n        var firstAdverbIndex = Array.IndexOf(words, firstAdverb);\n        return string.Format(\"First adverb: {0}, index: {1}\", firstAdverb, firstAdverbIndex);"
  ]
}
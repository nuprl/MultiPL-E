{
  "name": "mbpp_584_find_adverbs",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the first adverb ending with ly and its positions in a given string.\n    public static string FindAdverbs(string text) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_584_find_adverbs.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindAdverbs((\"Clearly, he has no excuse for such behavior.\")).Equals((\"0-7: Clearly\")));\n    Debug.Assert(FindAdverbs((\"Please handle the situation carefuly\")).Equals((\"28-36: carefuly\")));\n    Debug.Assert(FindAdverbs((\"Complete the task quickly\")).Equals((\"18-25: quickly\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        // Write your code here\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result += words[i] + \" \" + i + \" \";\n            }\n        }\n        return result;",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        if (adverbs.Count == 0) {\n            return \"There is no adverb in the text!\";\n        }\n        var result = new StringBuilder();\n        for (int i = 0; i < adverbs.Count; i++) {\n            result.AppendLine($\"{adverbs[i]} - {positions[i]}\");\n        }\n        return result.ToString();",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} {i}\";\n            }\n        }\n        return \"Not found\";",
    "        string[] words = text.Split(' ');\n        string adverb = \"\";\n        int index = 0;\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverb = words[i];\n                index = i;\n                break;\n            }\n        }\n        return adverb + \" \" + index;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" at position \" + i;\n            }\n        }\n        return \"No adverb found\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";"
  ]
}
{
  "name": "mbpp_68_is_Monotonic",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether the given array is monotonic or not.\n    public static bool IsMonotonic(List<long> A) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_68_is_Monotonic.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsMonotonic((new List<long>(new long[]{(long)6L, (long)5L, (long)4L, (long)4L}))) == (true));\n    Debug.Assert(IsMonotonic((new List<long>(new long[]{(long)1L, (long)2L, (long)2L, (long)3L}))) == (true));\n    Debug.Assert(IsMonotonic((new List<long>(new long[]{(long)1L, (long)3L, (long)2L}))) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        bool increasing = true;\n        bool decreasing = true;\n        for (int i = 0; i < A.Count - 1; i++) {\n            if (A[i] > A[i + 1])\n                increasing = false;\n            if (A[i] < A[i + 1])\n                decreasing = false;\n        }\n        return increasing || decreasing;",
    "        if (A.Count <= 2) {\n            return true;\n        }\n        bool increasing = true;\n        bool decreasing = true;\n        for (int i = 1; i < A.Count; i++) {\n            if (A[i] < A[i - 1]) {\n                increasing = false;\n            }\n            if (A[i] > A[i - 1]) {\n                decreasing = false;\n            }\n        }\n        return increasing || decreasing;",
    "        bool increasing = true;\n        bool decreasing = true;\n        for (int i = 0; i < A.Count - 1; i++) {\n            if (A[i] > A[i + 1]) {\n                increasing = false;\n            }\n            if (A[i] < A[i + 1]) {\n                decreasing = false;\n            }\n        }\n        return increasing || decreasing;",
    "        if (A.Count <= 2) {\n            return true;\n        }\n        bool increasing = true;\n        bool decreasing = true;\n        for (int i = 1; i < A.Count; i++) {\n            if (A[i] < A[i - 1]) {\n                increasing = false;\n            }\n            if (A[i] > A[i - 1]) {\n                decreasing = false;\n            }\n        }\n        return increasing || decreasing;",
    "        // Write your code here\n        bool isIncreasing = true;\n        bool isDecreasing = true;\n        for (int i = 1; i < A.Count; i++) {\n            if (A[i] < A[i - 1]) {\n                isIncreasing = false;\n            }\n            if (A[i] > A[i - 1]) {\n                isDecreasing = false;\n            }\n        }\n        return isIncreasing || isDecreasing;",
    "        bool increasing = true;\n        bool decreasing = true;\n\n        for (int i = 0; i < A.Count - 1; i++) {\n            if (A[i] > A[i + 1])\n                increasing = false;\n            if (A[i] < A[i + 1])\n                decreasing = false;\n        }\n\n        return increasing || decreasing;",
    "        bool increasing = true;\n        bool decreasing = true;\n        for (int i = 0; i < A.Count - 1; i++) {\n            if (A[i] > A[i + 1])\n                increasing = false;\n            if (A[i] < A[i + 1])\n                decreasing = false;\n        }\n        return increasing || decreasing;",
    "        long last = A[0];\n        bool increasing = true;\n        bool decreasing = true;\n        for (int i = 1; i < A.Count; i++) {\n            if (A[i] < last) {\n                increasing = false;\n            }\n            if (A[i] > last) {\n                decreasing = false;\n            }\n            last = A[i];\n        }\n        return increasing || decreasing;",
    "        bool increasing = true;\n        bool decreasing = true;\n        for (int i = 0; i < A.Count - 1; i++) {\n            if (A[i] > A[i + 1])\n                increasing = false;\n            if (A[i] < A[i + 1])\n                decreasing = false;\n        }\n        return increasing || decreasing;",
    "        // Write your code here\n        return true;",
    "        // Time: O(n)\n        // Space: O(1)\n        bool increasing = true;\n        bool decreasing = true;\n        for (int i = 0; i < A.Count - 1; i++) {\n            if (A[i] > A[i + 1]) {\n                increasing = false;\n            }\n            if (A[i] < A[i + 1]) {\n                decreasing = false;\n            }\n        }\n        return increasing || decreasing;",
    "        bool is_increasing = true;\n        bool is_decreasing = true;\n        for (int i = 0; i < A.Count - 1; i++) {\n            if (A[i] > A[i + 1]) {\n                is_increasing = false;\n            }\n            if (A[i] < A[i + 1]) {\n                is_decreasing = false;\n            }\n        }\n        return is_increasing || is_decreasing;",
    "        bool increasing = true;\n        bool decreasing = true;\n        for (int i = 0; i < A.Count - 1; i++) {\n            if (A[i] > A[i + 1]) {\n                increasing = false;\n            }\n            if (A[i] < A[i + 1]) {\n                decreasing = false;\n            }\n        }\n        return increasing || decreasing;",
    "        if (A.Count <= 2) {\n            return true;\n        }\n        bool increasing = true;\n        bool decreasing = true;\n        for (int i = 1; i < A.Count; i++) {\n            if (A[i] < A[i - 1]) {\n                increasing = false;\n            }\n            if (A[i] > A[i - 1]) {\n                decreasing = false;\n            }\n        }\n        return increasing || decreasing;",
    "        // Write your code here\n        bool increasing = true;\n        bool decreasing = true;\n        for (int i = 0; i < A.Count - 1; i++) {\n            if (A[i] > A[i + 1])\n                increasing = false;\n            if (A[i] < A[i + 1])\n                decreasing = false;\n        }\n        return increasing || decreasing;",
    "        bool increasing = true;\n        bool decreasing = true;\n        for (int i = 0; i < A.Count - 1; i++) {\n            if (A[i] > A[i + 1])\n                increasing = false;\n            if (A[i] < A[i + 1])\n                decreasing = false;\n        }\n        return increasing || decreasing;",
    "        // Write your code here\n        bool increasing = true;\n        bool decreasing = true;\n        for (int i = 0; i < A.Count - 1; i++) {\n            if (A[i] > A[i + 1])\n                increasing = false;\n            if (A[i] < A[i + 1])\n                decreasing = false;\n        }\n        return increasing || decreasing;",
    "        if (A.Count < 2) {\n            return true;\n        }\n        bool increasing = true;\n        bool decreasing = true;\n        for (int i = 1; i < A.Count; i++) {\n            if (A[i] < A[i - 1]) {\n                increasing = false;\n            }\n            if (A[i] > A[i - 1]) {\n                decreasing = false;\n            }\n        }\n        return increasing || decreasing;",
    "        if (A.Count <= 2) {\n            return true;\n        }\n        bool increasing = true;\n        bool decreasing = true;\n        for (int i = 1; i < A.Count; i++) {\n            if (A[i] < A[i - 1]) {\n                increasing = false;\n            }\n            if (A[i] > A[i - 1]) {\n                decreasing = false;\n            }\n        }\n        return increasing || decreasing;",
    "        // Write your code here\n        bool isIncreasing = true;\n        bool isDecreasing = true;\n        for (int i = 0; i < A.Count - 1; i++) {\n            if (A[i] > A[i + 1]) {\n                isIncreasing = false;\n            }\n            if (A[i] < A[i + 1]) {\n                isDecreasing = false;\n            }\n        }\n        return isIncreasing || isDecreasing;"
  ]
}
{
  "name": "mbpp_428_shell_sort",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_428_shell_sort.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cbacd83548734f5bb2c85652c78813fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cbacd83548734f5bb2c85652c78813fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Write your code here\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1ded07921924e0192ce28b1519cb972>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1ded07921924e0192ce28b1519cb972>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Your code here\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3d7e773eb46b42d6a55ded1ad736d8d9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3d7e773eb46b42d6a55ded1ad736d8d9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int h = 1;\n        while (h < n / 3) {\n            h = 3 * h + 1;\n        }\n        while (h >= 1) {\n            for (int i = h; i < n; i++) {\n                for (int j = i; j >= h && my_list[j] < my_list[j - h]; j -= h) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - h];\n                    my_list[j - h] = temp;\n                }\n            }\n            h = h / 3;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <df4199ca385644bc89aa1aec0335135f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <df4199ca385644bc89aa1aec0335135f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j = i;\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <758ea62e95ff41efbc1098058662ec3c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <758ea62e95ff41efbc1098058662ec3c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9d1e9d8ced4d49828dedcc318c37301f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9d1e9d8ced4d49828dedcc318c37301f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dd8365c8cf524de88743fc6f6840a6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dd8365c8cf524de88743fc6f6840a6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j = j - gap;\n                }\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d6baa20de42447c0a49f3aea4b17a7d8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d6baa20de42447c0a49f3aea4b17a7d8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int temp = (int)my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <328a6e9dac4b40e0874f308afbc22e50>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <328a6e9dac4b40e0874f308afbc22e50>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dd8365c8cf524de88743fc6f6840a6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dd8365c8cf524de88743fc6f6840a6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Write your code here.\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <29f5a09fb7af498f802cb0a72bf4ccb8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <29f5a09fb7af498f802cb0a72bf4ccb8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <33d500a03141480b8d6be537a5fbeb7f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <33d500a03141480b8d6be537a5fbeb7f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j = i;\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <758ea62e95ff41efbc1098058662ec3c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <758ea62e95ff41efbc1098058662ec3c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        long temp;\n        int j;\n        for (int gap = my_list.Count / 2; gap > 0; gap /= 2) {\n            for (int i = gap; i < my_list.Count; i++) {\n                temp = my_list[i];\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d4a850a6143c4cbba4a300c84387fdb1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d4a850a6143c4cbba4a300c84387fdb1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j = i;\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <758ea62e95ff41efbc1098058662ec3c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <758ea62e95ff41efbc1098058662ec3c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b4f4a1728f464030b5a5e581922c1f2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b4f4a1728f464030b5a5e581922c1f2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j = i;\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <758ea62e95ff41efbc1098058662ec3c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <758ea62e95ff41efbc1098058662ec3c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b4f4a1728f464030b5a5e581922c1f2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b4f4a1728f464030b5a5e581922c1f2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int temp = (int)my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap)\n                    my_list[j] = my_list[j - gap];\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a934b7a658c845e99f0e69e69cb2a008>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a934b7a658c845e99f0e69e69cb2a008>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < my_list.Count; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0556df9f868e49178514b35cef435e61>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0556df9f868e49178514b35cef435e61>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9d1e9d8ced4d49828dedcc318c37301f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9d1e9d8ced4d49828dedcc318c37301f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9d1e9d8ced4d49828dedcc318c37301f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9d1e9d8ced4d49828dedcc318c37301f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int h = 1;\n        while (h < n / 3) {\n            h = 3 * h + 1;\n        }\n        while (h >= 1) {\n            for (int i = h; i < n; i++) {\n                for (int j = i; j >= h && my_list[j] < my_list[j - h]; j -= h) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - h];\n                    my_list[j - h] = temp;\n                }\n            }\n            h = h / 3;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <df4199ca385644bc89aa1aec0335135f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <df4199ca385644bc89aa1aec0335135f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Write your code here.\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ae63cb90a5244482b99f50a1b94c0899>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ae63cb90a5244482b99f50a1b94c0899>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cbacd83548734f5bb2c85652c78813fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cbacd83548734f5bb2c85652c78813fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <db47c32f63754004a46d924985fee925>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <db47c32f63754004a46d924985fee925>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b4f4a1728f464030b5a5e581922c1f2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b4f4a1728f464030b5a5e581922c1f2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ShellSort (System.Collections.Generic.List`1[T] my_list) [0x00018] in <ae70096821d94693877c1659de029047>:0 \n  at Problem.Main (System.String[] args) [0x00018] in <ae70096821d94693877c1659de029047>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ShellSort (System.Collections.Generic.List`1[T] my_list) [0x00018] in <ae70096821d94693877c1659de029047>:0 \n  at Problem.Main (System.String[] args) [0x00018] in <ae70096821d94693877c1659de029047>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dd8365c8cf524de88743fc6f6840a6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dd8365c8cf524de88743fc6f6840a6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a264c75b1e5a4533a5a6827ce050b0fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a264c75b1e5a4533a5a6827ce050b0fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j = i;\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <758ea62e95ff41efbc1098058662ec3c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <758ea62e95ff41efbc1098058662ec3c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Write your code here\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7963423494c547868a4d0c274387a2a6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7963423494c547868a4d0c274387a2a6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < my_list.Count; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0556df9f868e49178514b35cef435e61>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0556df9f868e49178514b35cef435e61>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i += 1) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <63674f222d684d8ebd86f399349c8cbc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <63674f222d684d8ebd86f399349c8cbc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dd8365c8cf524de88743fc6f6840a6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dd8365c8cf524de88743fc6f6840a6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            if (gap == 2) {\n                gap = 1;\n            } else {\n                gap = (int)(gap / 2.2);\n            }\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d84eda739e4142009d6d85950c187923>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d84eda739e4142009d6d85950c187923>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Write your code here.\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ea91be190af94376b614efcb8237a8b4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ea91be190af94376b614efcb8237a8b4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < my_list.Count; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0556df9f868e49178514b35cef435e61>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0556df9f868e49178514b35cef435e61>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int temp = (int)my_list[i];\n                int j = i;\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f13658807f143f1b4fb1878f06b337c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f13658807f143f1b4fb1878f06b337c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < my_list.Count; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0556df9f868e49178514b35cef435e61>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0556df9f868e49178514b35cef435e61>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dd8365c8cf524de88743fc6f6840a6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dd8365c8cf524de88743fc6f6840a6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int len = my_list.Count;\n        int gap = len / 2;\n        while (gap > 0) {\n            for (int i = gap; i < len; i++) {\n                long temp = my_list[i];\n                int j = i;\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7a94493f382b4a7da47d433f30d93dd6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7a94493f382b4a7da47d433f30d93dd6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ShellSort (System.Collections.Generic.List`1[T] my_list) [0x00018] in <ae70096821d94693877c1659de029047>:0 \n  at Problem.Main (System.String[] args) [0x00018] in <ae70096821d94693877c1659de029047>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ShellSort (System.Collections.Generic.List`1[T] my_list) [0x00018] in <ae70096821d94693877c1659de029047>:0 \n  at Problem.Main (System.String[] args) [0x00018] in <ae70096821d94693877c1659de029047>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a264c75b1e5a4533a5a6827ce050b0fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a264c75b1e5a4533a5a6827ce050b0fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Write your code here\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <895ecff4d86444edbb774a75d6022a69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <895ecff4d86444edbb774a75d6022a69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Write your code here.\n        int n = my_list.Count;\n        for (int gap = n / 2; gap > 0; gap /= 2) {\n            for (int i = gap; i < n; i += 1) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap)\n                    my_list[j] = my_list[j - gap];\n                my_list[j] = temp;\n            }\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5003ade6d3bd492196d0cae236ce72b5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5003ade6d3bd492196d0cae236ce72b5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Write your code here\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <895ecff4d86444edbb774a75d6022a69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <895ecff4d86444edbb774a75d6022a69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j = i;\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <758ea62e95ff41efbc1098058662ec3c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <758ea62e95ff41efbc1098058662ec3c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < my_list.Count; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            if (gap == 2) {\n                gap = 1;\n            } else {\n                gap = (int)(gap / 2.2);\n            }\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a5ecd47a4ade48b486046dd012f7b14f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a5ecd47a4ade48b486046dd012f7b14f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9d1e9d8ced4d49828dedcc318c37301f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9d1e9d8ced4d49828dedcc318c37301f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ShellSort (System.Collections.Generic.List`1[T] my_list) [0x00018] in <ae70096821d94693877c1659de029047>:0 \n  at Problem.Main (System.String[] args) [0x00018] in <ae70096821d94693877c1659de029047>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ShellSort (System.Collections.Generic.List`1[T] my_list) [0x00018] in <ae70096821d94693877c1659de029047>:0 \n  at Problem.Main (System.String[] args) [0x00018] in <ae70096821d94693877c1659de029047>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b4f4a1728f464030b5a5e581922c1f2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b4f4a1728f464030b5a5e581922c1f2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9779a3916a3d4f27b7e1fef876c5549e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9779a3916a3d4f27b7e1fef876c5549e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        for (int gap = n / 2; gap > 0; gap /= 2) {\n            for (int i = gap; i < n; i += 1) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4f796be887cb43e384b1856deff70cc2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4f796be887cb43e384b1856deff70cc2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < my_list.Count; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0556df9f868e49178514b35cef435e61>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0556df9f868e49178514b35cef435e61>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b4f4a1728f464030b5a5e581922c1f2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b4f4a1728f464030b5a5e581922c1f2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dd8365c8cf524de88743fc6f6840a6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dd8365c8cf524de88743fc6f6840a6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b4f4a1728f464030b5a5e581922c1f2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b4f4a1728f464030b5a5e581922c1f2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int size = my_list.Count;\n        int gap = size / 2;\n        while (gap > 0) {\n            for (int i = 0; i < size - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            if (gap == 2) {\n                gap = 1;\n            } else {\n                gap = (int)(gap / 2.2);\n            }\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <944d07ebf3924954b5dfcdeabe71b818>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <944d07ebf3924954b5dfcdeabe71b818>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        long n = my_list.Count;\n        long gap = n / 2;\n        while (gap > 0) {\n            for (long i = gap; i < n; i++) {\n                long temp = my_list[i];\n                long j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfgal_qkl.cs(15,37): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpfgal_qkl.cs(17,49): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpfgal_qkl.cs(18,29): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpfgal_qkl.cs(18,42): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpfgal_qkl.cs(20,25): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <db47c32f63754004a46d924985fee925>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <db47c32f63754004a46d924985fee925>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int h = 1;\n        while (h < n / 3) {\n            h = 3 * h + 1;\n        }\n        while (h >= 1) {\n            for (int i = h; i < n; i++) {\n                for (int j = i; j >= h && my_list[j] < my_list[j - h]; j -= h) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - h];\n                    my_list[j - h] = temp;\n                }\n            }\n            h = h / 3;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <df4199ca385644bc89aa1aec0335135f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <df4199ca385644bc89aa1aec0335135f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int temp = (int)my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <328a6e9dac4b40e0874f308afbc22e50>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <328a6e9dac4b40e0874f308afbc22e50>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            if (gap == 2) {\n                gap = 1;\n            } else {\n                gap = (int)(gap / 2.2);\n            }\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d84eda739e4142009d6d85950c187923>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d84eda739e4142009d6d85950c187923>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j = i;\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <758ea62e95ff41efbc1098058662ec3c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <758ea62e95ff41efbc1098058662ec3c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122518,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <14204ef8e99349539c8960241bcd09d3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <14204ef8e99349539c8960241bcd09d3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j = i;\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <758ea62e95ff41efbc1098058662ec3c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <758ea62e95ff41efbc1098058662ec3c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int len = my_list.Count;\n        int gap = len / 2;\n        while (gap > 0) {\n            for (int i = 0; i < len; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122518,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ShellSort (System.Collections.Generic.List`1[T] my_list) [0x00018] in <ac08468f93654f7289a206ad3eb4eee9>:0 \n  at Problem.Main (System.String[] args) [0x00018] in <ac08468f93654f7289a206ad3eb4eee9>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ShellSort (System.Collections.Generic.List`1[T] my_list) [0x00018] in <ac08468f93654f7289a206ad3eb4eee9>:0 \n  at Problem.Main (System.String[] args) [0x00018] in <ac08468f93654f7289a206ad3eb4eee9>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int temp = (int)my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <328a6e9dac4b40e0874f308afbc22e50>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <328a6e9dac4b40e0874f308afbc22e50>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j = j - gap;\n                }\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122518,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <86632bbb33364890ab7677043e56d95e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <86632bbb33364890ab7677043e56d95e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dd8365c8cf524de88743fc6f6840a6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dd8365c8cf524de88743fc6f6840a6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b4f4a1728f464030b5a5e581922c1f2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b4f4a1728f464030b5a5e581922c1f2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Write your code here\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7963423494c547868a4d0c274387a2a6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7963423494c547868a4d0c274387a2a6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dd8365c8cf524de88743fc6f6840a6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dd8365c8cf524de88743fc6f6840a6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        List<long> result = new List<long>();\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122518,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <614520adf1ea4929aeba624307ea2006>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <614520adf1ea4929aeba624307ea2006>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while ((j >= gap) && (my_list[j - gap] > temp)) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            if (gap == 2) {\n                gap = 1;\n            } else {\n                gap = (int)(gap / 2.2);\n            }\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122518,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <034384004bd244ee9e7dfc5f75312475>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <034384004bd244ee9e7dfc5f75312475>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dd8365c8cf524de88743fc6f6840a6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dd8365c8cf524de88743fc6f6840a6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a264c75b1e5a4533a5a6827ce050b0fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a264c75b1e5a4533a5a6827ce050b0fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // TODO: Implement Shell Sort\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122518,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7a810a53af7448a3acb27a85c3b268ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7a810a53af7448a3acb27a85c3b268ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j = j - gap;\n                }\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122518,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <86632bbb33364890ab7677043e56d95e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <86632bbb33364890ab7677043e56d95e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a264c75b1e5a4533a5a6827ce050b0fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a264c75b1e5a4533a5a6827ce050b0fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b4f4a1728f464030b5a5e581922c1f2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b4f4a1728f464030b5a5e581922c1f2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int h = 1;\n        while (h < n / 3) {\n            h = 3 * h + 1;\n        }\n        while (h >= 1) {\n            for (int i = h; i < n; i++) {\n                for (int j = i; j >= h && my_list[j] < my_list[j - h]; j -= h) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - h];\n                    my_list[j - h] = temp;\n                }\n            }\n            h = h / 3;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <df4199ca385644bc89aa1aec0335135f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <df4199ca385644bc89aa1aec0335135f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count();\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122518,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d4e8547853d94bd1a36ca05bf8cd4456>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d4e8547853d94bd1a36ca05bf8cd4456>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j = i;\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <758ea62e95ff41efbc1098058662ec3c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <758ea62e95ff41efbc1098058662ec3c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b4f4a1728f464030b5a5e581922c1f2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b4f4a1728f464030b5a5e581922c1f2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int size = my_list.Count;\n        int gap = size / 2;\n        while (gap > 0) {\n            for (int i = 0; i < size - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122518,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <445ead3045ac40bf94d8d5c66db51290>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <445ead3045ac40bf94d8d5c66db51290>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122517,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b4f4a1728f464030b5a5e581922c1f2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b4f4a1728f464030b5a5e581922c1f2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9d1e9d8ced4d49828dedcc318c37301f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9d1e9d8ced4d49828dedcc318c37301f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bcf7d37b6ca4325afb8bf04d8506f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5fce7e7e584f4c3fa96d3e57e05262d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cbacd83548734f5bb2c85652c78813fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cbacd83548734f5bb2c85652c78813fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d407028af78b495983bd20dfbb98c982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given array by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee8d70f12d6545fdb332203ec1e68875>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    }
  ]
}
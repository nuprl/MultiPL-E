{
  "name": "mbpp_759_is_decimal",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static bool IsDecimal(string num) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_759_is_decimal.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsDecimal((\"123.11\")) == (true));\n    Debug.Assert(IsDecimal((\"e666.86\")) == (false));\n    Debug.Assert(IsDecimal((\"3.124587\")) == (false));\n    Debug.Assert(IsDecimal((\"1.11\")) == (true));\n    Debug.Assert(IsDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        if (num.Length == 0) return false;\n        var parts = num.Split('.');\n        if (parts.Length > 2) return false;\n        if (parts.Length == 2) {\n            if (parts[1].Length > 2) return false;\n            if (parts[1].Length == 0) return false;\n        }\n        if (parts[0].Length == 0) return false;\n        foreach (var c in parts[0]) {\n            if (!char.IsDigit(c)) return false;\n        }\n        if (parts.Length == 2) {\n            foreach (var c in parts[1]) {\n                if (!char.IsDigit(c)) return false;\n            }\n        }\n        return true;",
    "        if (num.Contains(\".\")) {\n            var parts = num.Split('.');\n            if (parts.Length != 2) {\n                return false;\n            }\n            if (parts[1].Length > 2) {\n                return false;\n            }\n            return true;\n        }\n        return false;",
    "        if (num.Length == 0) return false;\n        int i = 0;\n        if (num[0] == '-') i++;\n        int count = 0;\n        for (; i < num.Length; i++) {\n            if (num[i] == '.') {\n                count++;\n                if (count > 1) return false;\n            } else if (num[i] < '0' || num[i] > '9') return false;\n        }\n        if (count == 0) return true;\n        int dot = num.IndexOf('.');\n        if (dot + 3 < num.Length) return false;\n        return true;",
    "        if (num.Length == 0) return false;\n        int i = 0;\n        if (num[0] == '-') i++;\n        int count = 0;\n        for (; i < num.Length; i++) {\n            if (num[i] == '.') {\n                count++;\n                if (count > 1) return false;\n            }\n            else if (!char.IsDigit(num[i])) return false;\n        }\n        if (count == 0) return false;\n        if (count == 1) {\n            int index = num.IndexOf('.');\n            if (index == num.Length - 1) return false;\n            if (index == num.Length - 2) return true;\n            return false;\n        }\n        return true;",
    "        if (num.Length == 0) return false;\n        int i = 0;\n        if (num[0] == '-') i++;\n        bool foundDot = false;\n        int count = 0;\n        for (; i < num.Length; i++) {\n            if (num[i] == '.') {\n                if (foundDot) return false;\n                foundDot = true;\n            } else if (num[i] < '0' || num[i] > '9') {\n                return false;\n            } else if (foundDot) {\n                count++;\n                if (count > 2) return false;\n            }\n        }\n        return true;",
    "        if (num.Length == 0) return false;\n        bool hasDecimal = false;\n        int i = 0;\n        if (num[0] == '-') i++;\n        for (; i < num.Length; i++) {\n            if (num[i] == '.') {\n                if (hasDecimal) return false;\n                hasDecimal = true;\n            } else if (!Char.IsDigit(num[i])) {\n                return false;\n            }\n        }\n        if (!hasDecimal) return false;\n        int decimalIndex = num.IndexOf('.');\n        if (decimalIndex == num.Length - 1) return false;\n        if (decimalIndex == num.Length - 2) return true;\n        return false;",
    "        if (num.Length == 0) return false;\n        if (num[0] == '.') return false;\n        if (num[num.Length - 1] == '.') return false;\n        int dotCount = 0;\n        for (int i = 0; i < num.Length; i++) {\n            if (num[i] == '.') {\n                dotCount++;\n                if (dotCount > 1) return false;\n            } else if (num[i] < '0' || num[i] > '9') {\n                return false;\n            }\n        }\n        return true;",
    "        if (num.Length == 0) return false;\n        int dot = 0;\n        for (int i = 0; i < num.Length; i++) {\n            if (num[i] == '.') {\n                dot++;\n                if (dot > 1) return false;\n            } else if (num[i] < '0' || num[i] > '9') {\n                return false;\n            }\n        }\n        if (dot == 0) return true;\n        if (num.Length - num.IndexOf('.') > 3) return false;\n        return true;",
    "        if (num.Length == 0) {\n            return false;\n        }\n        int dotIndex = num.IndexOf('.');\n        if (dotIndex == -1) {\n            return true;\n        }\n        if (dotIndex == 0 || dotIndex == num.Length - 1) {\n            return false;\n        }\n        if (num.Substring(dotIndex + 1).Length > 2) {\n            return false;\n        }\n        return true;",
    "        if (num.Length == 0) return false;\n        int i = 0;\n        if (num[0] == '-') i++;\n        int dot = -1;\n        for (; i < num.Length; i++) {\n            if (num[i] == '.') {\n                if (dot != -1) return false;\n                dot = i;\n            } else if (!char.IsDigit(num[i])) {\n                return false;\n            }\n        }\n        if (dot == -1) return true;\n        if (dot == num.Length - 1) return false;\n        return num.Length - dot - 1 <= 2;",
    "        if (num.Length == 0) return false;\n        if (num.Length == 1) return num[0] >= '0' && num[0] <= '9';\n        if (num[0] == '0') return false;\n        int dot = -1;\n        for (int i = 0; i < num.Length; i++) {\n            if (num[i] == '.') {\n                if (dot != -1) return false;\n                dot = i;\n            } else if (num[i] < '0' || num[i] > '9') {\n                return false;\n            }\n        }\n        if (dot == -1) return true;\n        if (dot == num.Length - 1) return false;\n        return num.Length - dot - 1 <= 2;",
    "        if (num.Length == 0) return false;\n        int i = 0;\n        if (num[0] == '-') i++;\n        int count = 0;\n        for (; i < num.Length; i++) {\n            if (num[i] == '.') {\n                count++;\n                if (count > 1) return false;\n            } else if (!char.IsDigit(num[i])) {\n                return false;\n            }\n        }\n        if (count == 0) return true;\n        int index = num.IndexOf('.');\n        if (index == num.Length - 1) return false;\n        if (index == num.Length - 2) return true;\n        return false;",
    "        if (num.Length == 0) return false;\n        var parts = num.Split('.');\n        if (parts.Length > 2) return false;\n        if (parts.Length == 2) {\n            if (parts[1].Length > 2) return false;\n            if (parts[1].Length == 0) return false;\n        }\n        foreach (var c in parts[0]) {\n            if (!char.IsDigit(c)) return false;\n        }\n        if (parts.Length == 2) {\n            foreach (var c in parts[1]) {\n                if (!char.IsDigit(c)) return false;\n            }\n        }\n        return true;",
    "        if (num.Length == 0) return false;\n        if (num[0] == '-') num = num.Substring(1);\n        if (num.Length == 0) return false;\n        int dot = num.IndexOf('.');\n        if (dot == 0) return false;\n        if (dot == num.Length - 1) return false;\n        if (dot == -1) return true;\n        if (dot == num.Length - 2) return true;\n        return false;",
    "        if (num.Length == 0) return false;\n        int i = 0;\n        if (num[0] == '-') i++;\n        int count = 0;\n        for (; i < num.Length; i++) {\n            if (num[i] == '.') {\n                count++;\n                if (count > 1) return false;\n            } else if (!char.IsDigit(num[i])) {\n                return false;\n            }\n        }\n        if (count == 0) return true;\n        int index = num.IndexOf('.');\n        return num.Length - index - 1 <= 2;",
    "        if (num.Length == 0) return false;\n        if (num[0] == '-') num = num.Substring(1);\n        if (num.Length == 0) return false;\n        int dot = num.IndexOf('.');\n        if (dot == -1) return IsInteger(num);\n        if (dot == 0 || dot == num.Length - 1) return false;\n        return IsInteger(num.Substring(0, dot)) && IsInteger(num.Substring(dot + 1));",
    "        if (num.Length == 0) return false;\n        if (num.Length == 1) return char.IsDigit(num[0]);\n        if (num.Length == 2) return char.IsDigit(num[0]) && char.IsDigit(num[1]);\n        if (num.Length == 3) return char.IsDigit(num[0]) && num[1] == '.' && char.IsDigit(num[2]);\n        if (num.Length == 4) return char.IsDigit(num[0]) && char.IsDigit(num[1]) && num[2] == '.' && char.IsDigit(num[3]);\n        return false;",
    "        if (num.Length == 0) return false;\n        int i = 0;\n        if (num[0] == '-') i++;\n        if (i == num.Length) return false;\n        int dot = -1;\n        for (; i < num.Length; i++) {\n            if (num[i] == '.') {\n                if (dot != -1) return false;\n                dot = i;\n            } else if (num[i] < '0' || num[i] > '9') {\n                return false;\n            }\n        }\n        if (dot == -1) return true;\n        if (dot == num.Length - 1) return false;\n        if (dot == num.Length - 2) return true;\n        return false;",
    "        // Check if the string is empty\n        if (num.Length == 0) {\n            return false;\n        }\n        // Check if the string contains a decimal point\n        int decimalIndex = num.IndexOf('.');\n        if (decimalIndex == -1) {\n            return false;\n        }\n        // Check if the string contains more than one decimal point\n        if (num.IndexOf('.', decimalIndex + 1) != -1) {\n            return false;\n        }\n        // Check if the string contains any non-numeric characters\n        for (int i = 0; i < num.Length; i++) {\n            if (i == decimalIndex) {\n                continue;\n            }\n            if (!Char.IsDigit(num[i])) {\n                return false;\n            }\n        }\n        // Check if the string contains more than two digits after the decimal point\n        if (num.Length - decimalIndex - 1 > 2) {\n            return false;\n        }\n        return true;",
    "        if (num.Length == 0) return false;\n        if (num[0] == '-') num = num.Substring(1);\n        if (num.Length == 0) return false;\n        int i = num.IndexOf('.');\n        if (i == -1) return IsInteger(num);\n        if (i == 0) return IsInteger(num.Substring(1));\n        if (i == num.Length - 1) return IsInteger(num.Substring(0, i));\n        return IsInteger(num.Substring(0, i)) && IsInteger(num.Substring(i + 1));"
  ]
}
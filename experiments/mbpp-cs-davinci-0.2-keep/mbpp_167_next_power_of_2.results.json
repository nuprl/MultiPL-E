{
  "name": "mbpp_167_next_power_of_2",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_167_next_power_of_2.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n == 0)\n            return 1;\n        if (n == 1)\n            return 2;\n        if (n == 2)\n            return 2;\n        if (n == 3)\n            return 4;\n        if (n == 4)\n            return 4;\n        if (n == 5)\n            return 8;\n        if (n == 6)\n            return 8;\n        if (n == 7)\n            return 8;\n        if (n == 8)\n            return 8;\n        if (n == 9)\n            return 16;\n        if (n == 10)\n            return 16;\n        if (n == 11)\n            return 16;\n        if (n == 12)\n            return 16;\n        if (n == 13)\n            return 16;\n        if (n == 14)\n            return 16;\n        if (n == 15)\n            return 16;\n        if (n == 16)\n            return 16;\n        if (n == 17)\n            return 32;\n        if (n == 18)\n            return 32;\n        if (n == 19)\n            return 32;\n        if (n == 20)\n            return 32;\n        if (n == 21)\n            return 32;\n        if (n == 22)\n            return 32;\n        if (n == 23)\n            return 32;\n        if (n == 24)\n            return 32;\n        if (n == 25)\n            return 32;\n        if (n == 26)\n            return 32;\n        if (n == 27)\n            return 32;\n        if (n == 28)\n            return 32;\n        if (n == 29)\n            return 32;\n        if (n == 30)\n            return 32;\n        if (n == 31)\n            return 32;\n        if (n == 32)\n            return 32;\n        if (n == 33)\n            return 64;\n        if (n == 34)\n            return 64;\n        if (n == 35)\n            return 64;\n        if (n == 36)\n            return 64;\n        if (n == 37)\n            return 64;\n        if (n == 38)\n            return 64;\n        if (n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510322,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplt6krlyt.cs(89,14): error CS1026: ) expected\n/tmp/tmplt6krlyt.cs(89,14): error CS1525: Invalid expression term '}'\n/tmp/tmplt6krlyt.cs(89,14): error CS1002: ; expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0) {\n            throw new ArgumentOutOfRangeException(\"n\", \"must be non-negative\");\n        } else if (n == 0) {\n            return 1;\n        } else {\n            n--;\n            n |= n >> 1;\n            n |= n >> 2;\n            n |= n >> 4;\n            n |= n >> 8;\n            n |= n >> 16;\n            n++;\n            return n;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0) {\n            throw new ArgumentOutOfRangeException(\"n\", \"must be non-negative\");\n        } else if (n == 0) {\n            return 1;\n        } else {\n            n--;\n            n |= n >> 1;\n            n |= n >> 2;\n            n |= n >> 4;\n            n |= n >> 8;\n            n |= n >> 16;\n            n++;\n            return n;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 1) {\n            throw new ArgumentOutOfRangeException(\"n\", \"n must be positive\");\n        }\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: n must be positive\nParameter name: n\n  at Problem.NextPowerOf2 (System.Int64 n) [0x0000b] in <0690d47cbfc54797a1826152483f14c9>:0 \n  at Problem.Main (System.String[] args) [0x00001] in <0690d47cbfc54797a1826152483f14c9>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: n must be positive\nParameter name: n\n  at Problem.NextPowerOf2 (System.Int64 n) [0x0000b] in <0690d47cbfc54797a1826152483f14c9>:0 \n  at Problem.Main (System.String[] args) [0x00001] in <0690d47cbfc54797a1826152483f14c9>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i <<= 1;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0)\n            throw new ArgumentOutOfRangeException(\"n\", \"Must be positive.\");\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5530114ce818426693b07099ceccc6de>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long power = 1;\n        while (power < n) {\n            power *= 2;\n        }\n        return power;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c11bcf27e3154631933e0781386db392>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c11bcf27e3154631933e0781386db392>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n <= 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return 1;\n        }\n        n--;\n        n |= n >> 1;\n        n |= n >> 2;\n        n |= n >> 4;\n        n |= n >> 8;\n        n |= n >> 16;\n        n++;\n        return n;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <73731b943e764b2da6169be166125948>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0)\n            throw new ArgumentException(\"n must be non-negative\");\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a93f5a8f4c4d4a9fabbf2a442e960dbd>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p <<= 1;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0) {\n            throw new ArgumentOutOfRangeException(\"n\", \"Must be positive.\");\n        } else if (n == 0) {\n            return 1;\n        } else {\n            n--;\n            n |= n >> 1;\n            n |= n >> 2;\n            n |= n >> 4;\n            n |= n >> 8;\n            n |= n >> 16;\n            n++;\n            return n;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        // n = n - 1;\n        // n |= n >> 1;\n        // n |= n >> 2;\n        // n |= n >> 4;\n        // n |= n >> 8;\n        // n |= n >> 16;\n        // n |= n >> 32;\n        // return n + 1;\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <16a89eac70074270ab54192c4b8ec381>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0) {\n            throw new ArgumentOutOfRangeException(\"n\", \"Must be positive.\");\n        } else if (n == 0) {\n            return 1;\n        } else {\n            n--;\n            n |= n >> 1;\n            n |= n >> 2;\n            n |= n >> 4;\n            n |= n >> 8;\n            n |= n >> 16;\n            n++;\n            return n;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        n--;\n        n |= n >> 1;\n        n |= n >> 2;\n        n |= n >> 4;\n        n |= n >> 8;\n        n |= n >> 16;\n        n++;\n        return n;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f237a33b0d54556967aef51e0652871>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0) {\n            throw new ArgumentException(\"n must be non-negative\");\n        }\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <91e2b942bfe84ab8a7d4b241e39d62d9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        // Your code goes here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c2a7f11f19fa4b5da05d5bcf5822129c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c2a7f11f19fa4b5da05d5bcf5822129c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        // n = n - 1;\n        // n |= n >> 1;\n        // n |= n >> 2;\n        // n |= n >> 4;\n        // n |= n >> 8;\n        // n |= n >> 16;\n        // n |= n >> 32;\n        // return n + 1;\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <16a89eac70074270ab54192c4b8ec381>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n == 0) {\n            return 1;\n        }\n        if (n == 1) {\n            return 2;\n        }\n        long p = 2;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0) {\n            throw new ArgumentOutOfRangeException(\"n\", \"Must be positive.\");\n        } else if (n == 0) {\n            return 1;\n        } else {\n            n--;\n            n |= n >> 1;\n            n |= n >> 2;\n            n |= n >> 4;\n            n |= n >> 8;\n            n |= n >> 16;\n            n++;\n            return n;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long x = 1;\n        while (x < n) {\n            x *= 2;\n        }\n        return x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0) {\n            throw new ArgumentOutOfRangeException(\"n\", \"must be non-negative\");\n        } else if (n == 0) {\n            return 1;\n        } else {\n            n--;\n            n |= n >> 1;\n            n |= n >> 2;\n            n |= n >> 4;\n            n |= n >> 8;\n            n |= n >> 16;\n            n++;\n            return n;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c11bcf27e3154631933e0781386db392>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c11bcf27e3154631933e0781386db392>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p <<= 1;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0)\n            throw new ArgumentOutOfRangeException(\"n\", \"Must be positive.\");\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5530114ce818426693b07099ceccc6de>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0) {\n            throw new ArgumentOutOfRangeException(\"n\", \"Must be positive.\");\n        } else if (n == 0) {\n            return 1;\n        } else {\n            n--;\n            n |= n >> 1;\n            n |= n >> 2;\n            n |= n >> 4;\n            n |= n >> 8;\n            n |= n >> 16;\n            n++;\n            return n;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p <<= 1;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 1) {\n            throw new ArgumentException(\"n must be >= 1\");\n        }\n        if (n == 1) {\n            return 1;\n        }\n        return 1 << (int)Math.Ceiling(Math.Log(n, 2));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.ArgumentException: n must be >= 1\n  at Problem.NextPowerOf2 (System.Int64 n) [0x0000b] in <6f4cb4bc1f7e487b9ac4319a02951565>:0 \n  at Problem.Main (System.String[] args) [0x00001] in <6f4cb4bc1f7e487b9ac4319a02951565>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentException: n must be >= 1\n  at Problem.NextPowerOf2 (System.Int64 n) [0x0000b] in <6f4cb4bc1f7e487b9ac4319a02951565>:0 \n  at Problem.Main (System.String[] args) [0x00001] in <6f4cb4bc1f7e487b9ac4319a02951565>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i = i << 1;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0) {\n            throw new ArgumentException(\"n must be non-negative\");\n        }\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <91e2b942bfe84ab8a7d4b241e39d62d9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0) {\n            throw new ArgumentException(\"n must be non-negative\");\n        }\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <91e2b942bfe84ab8a7d4b241e39d62d9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0) {\n            throw new ArgumentOutOfRangeException(\"n\", \"must be non-negative\");\n        } else if (n == 0) {\n            return 1;\n        } else {\n            n--;\n            n |= n >> 1;\n            n |= n >> 2;\n            n |= n >> 4;\n            n |= n >> 8;\n            n |= n >> 16;\n            n++;\n            return n;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p <<= 1;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c11bcf27e3154631933e0781386db392>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c11bcf27e3154631933e0781386db392>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        // TODO: Implement this function\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0) {\n            throw new ArgumentException(\"n must be non-negative\");\n        }\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <91e2b942bfe84ab8a7d4b241e39d62d9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long x = 1;\n        while (x < n) {\n            x <<= 1;\n        }\n        return x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0) {\n            throw new ArgumentOutOfRangeException(\"n\", \"must be non-negative\");\n        }\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <51b3fdd052564eff81be4e2299fbdec7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        n--;\n        n |= n >> 1;\n        n |= n >> 2;\n        n |= n >> 4;\n        n |= n >> 8;\n        n |= n >> 16;\n        n++;\n        return n;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f237a33b0d54556967aef51e0652871>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p <<= 1;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long power = 1;\n        while (power < n) {\n            power *= 2;\n        }\n        return power;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n <= 0) {\n            return 0;\n        }\n        n--;\n        n |= n >> 1;\n        n |= n >> 2;\n        n |= n >> 4;\n        n |= n >> 8;\n        n |= n >> 16;\n        n |= n >> 32;\n        n++;\n        return n;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <49fe9e6d6d2b487384ffa082bf6fa834>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long x = 1;\n        while (x < n) {\n            x *= 2;\n        }\n        return x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0) {\n            throw new ArgumentException(\"n is negative\");\n        }\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6116dd5b9ef144508465a7ae4e51c96a>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long power = 1;\n        while (power < n) {\n            power *= 2;\n        }\n        return power;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0) {\n            throw new ArgumentOutOfRangeException(\"n\", \"Must be positive.\");\n        } else if (n == 0) {\n            return 1;\n        } else {\n            n--;\n            n |= n >> 1;\n            n |= n >> 2;\n            n |= n >> 4;\n            n |= n >> 8;\n            n |= n >> 16;\n            n++;\n            return n;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n == 0) {\n            return 1;\n        }\n        if (n == 1) {\n            return 2;\n        }\n        n--;\n        n |= n >> 1;\n        n |= n >> 2;\n        n |= n >> 4;\n        n |= n >> 8;\n        n |= n >> 16;\n        n++;\n        return n;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        n--;\n        n |= n >> 1;\n        n |= n >> 2;\n        n |= n >> 4;\n        n |= n >> 8;\n        n |= n >> 16;\n        n |= n >> 32;\n        n++;\n        return n;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cbf5954e93f44b8abdbfb4d2439195e5>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i <<= 1;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p <<= 1;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0) {\n            throw new ArgumentOutOfRangeException(\"n\", \"Must be positive.\");\n        } else if (n == 0) {\n            return 1;\n        } else {\n            n--;\n            n |= n >> 1;\n            n |= n >> 2;\n            n |= n >> 4;\n            n |= n >> 8;\n            n |= n >> 16;\n            n++;\n            return n;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n == 0) return 1;\n        n--;\n        n |= n >> 1;\n        n |= n >> 2;\n        n |= n >> 4;\n        n |= n >> 8;\n        n |= n >> 16;\n        n++;\n        return n;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long result = 1;\n        while (result < n) {\n            result <<= 1;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0) {\n            throw new ArgumentOutOfRangeException(\"n\", \"Must be positive.\");\n        } else if (n == 0) {\n            return 1;\n        } else {\n            n--;\n            n |= n >> 1;\n            n |= n >> 2;\n            n |= n >> 4;\n            n |= n >> 8;\n            n |= n >> 16;\n            n++;\n            return n;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p <<= 1;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        // n = n - 1;\n        // n |= n >> 1;\n        // n |= n >> 2;\n        // n |= n >> 4;\n        // n |= n >> 8;\n        // n |= n >> 16;\n        // n |= n >> 32;\n        // return n + 1;\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <16a89eac70074270ab54192c4b8ec381>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0) {\n            throw new ArgumentOutOfRangeException(\"n\", \"Must be positive.\");\n        } else if (n == 0) {\n            return 1;\n        } else {\n            n--;\n            n |= n >> 1;\n            n |= n >> 2;\n            n |= n >> 4;\n            n |= n >> 8;\n            n |= n >> 16;\n            n++;\n            return n;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0) {\n            throw new ArgumentOutOfRangeException(\"n\", \"Must be positive.\");\n        }\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <291646d08cc14a9e89f662055e7e84a9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0) {\n            throw new ArgumentOutOfRangeException(\"n\", \"Must be positive.\");\n        }\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <291646d08cc14a9e89f662055e7e84a9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0) {\n            throw new ArgumentOutOfRangeException(\"n\", \"must be non-negative\");\n        } else if (n == 0) {\n            return 1;\n        } else {\n            n--;\n            n |= n >> 1;\n            n |= n >> 2;\n            n |= n >> 4;\n            n |= n >> 8;\n            n |= n >> 16;\n            n++;\n            return n;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p <<= 1;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0) {\n            throw new ArgumentOutOfRangeException(\"n\", \"must be non-negative\");\n        }\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <51b3fdd052564eff81be4e2299fbdec7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i <<= 1;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c11bcf27e3154631933e0781386db392>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c11bcf27e3154631933e0781386db392>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0) {\n            throw new ArgumentOutOfRangeException(\"n\", \"must be non-negative\");\n        } else if (n == 0) {\n            return 1;\n        } else {\n            n--;\n            n |= n >> 1;\n            n |= n >> 2;\n            n |= n >> 4;\n            n |= n >> 8;\n            n |= n >> 16;\n            n++;\n            return n;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p <<= 1;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long x = 1;\n        while (x < n) {\n            x *= 2;\n        }\n        return x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n == 0) {\n            return 1;\n        }\n        if (n == 1) {\n            return 2;\n        }\n        if (n == 2) {\n            return 2;\n        }\n        if (n == 3) {\n            return 4;\n        }\n        if (n == 4) {\n            return 4;\n        }\n        if (n == 5) {\n            return 8;\n        }\n        if (n == 6) {\n            return 8;\n        }\n        if (n == 7) {\n            return 8;\n        }\n        if (n == 8) {\n            return 8;\n        }\n        if (n == 9) {\n            return 16;\n        }\n        if (n == 10) {\n            return 16;\n        }\n        if (n == 11) {\n            return 16;\n        }\n        if (n == 12) {\n            return 16;\n        }\n        if (n == 13) {\n            return 16;\n        }\n        if (n == 14) {\n            return 16;\n        }\n        if (n == 15) {\n            return 16;\n        }\n        if (n == 16) {\n            return 16;\n        }\n        if (n == 17) {\n            return 32;\n        }\n        if (n == 18) {\n            return 32;\n        }\n        if (n == 19) {\n            return 32;\n        }\n        if (n == 20) {\n            return 32;\n        }\n        if (n == 21) {\n            return 32;\n        }\n        if (n == 22) {\n            return 32;\n        }\n        if (n == 23) {\n            return 32;\n        }\n        if (n == 24) {\n            return 32;\n        }\n        if (n == 25) {\n            return 32;\n        }\n        if (n == 26) {\n            return 32;\n        }\n        if (n == 27) {\n            return 32;\n        }\n        if (n == 28) {\n            return 32;\n        }\n        if (n == 29) {\n            return 32;\n        }\n       \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdsztkoq7.cs(10,24): error CS0161: 'Problem.NextPowerOf2(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        if (n < 0) {\n            throw new ArgumentOutOfRangeException(\"n\", \"must be non-negative\");\n        }\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <51b3fdd052564eff81be4e2299fbdec7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        // return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d2844a82ab914dc4bfec9e78f9b2e0cb>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        //return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <da1b7a8356d6483e983027c622e43a41>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p <<= 1;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p <<= 1;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long p = 1;\n        while (p < n) {\n            p *= 2;\n        }\n        return p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the smallest power of 2 greater than or equal to n.\n    public static long NextPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Ceiling(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPowerOf2((0L)) == (1L));\n    Debug.Assert(NextPowerOf2((5L)) == (8L));\n    Debug.Assert(NextPowerOf2((17L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510323,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25fb67c152b9495db66c8bcf7427630c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_760_unique_Element",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether a list of numbers contains only one distinct element or not.\n    public static bool UniqueElement(List<long> arr) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_760_unique_Element.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueElement((new List<long>(new long[]{(long)1L, (long)1L, (long)1L}))) == (true));\n    Debug.Assert(UniqueElement((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (false));\n    Debug.Assert(UniqueElement((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long last = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != last) {\n                return false;\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        // if the list is empty, return false\n        if (arr.Count == 0) {\n            return false;\n        }\n        // if the list has only one element, return true\n        if (arr.Count == 1) {\n            return true;\n        }\n        // if the list has more than one element, sort it and check if the first and last elements are the same\n        arr.Sort();\n        if (arr[0] == arr[arr.Count - 1]) {\n            return true;\n        }\n        return false;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in arr) {\n            if (set.Contains(i)) {\n                return false;\n            }\n            set.Add(i);\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        // return arr.Distinct().Count() == 1;\n        return arr.All(x => x == arr[0]);",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        // return arr.Distinct().Count() == 1;\n        return arr.All(x => x == arr[0]);",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) return false;\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) return false;\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in arr) {\n            if (set.Contains(i)) {\n                return false;\n            }\n            set.Add(i);\n        }\n        return true;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in arr) {\n            set.Add(i);\n        }\n        return set.Count == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) {\n                return false;\n            }\n            set.Add(num);\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        // return arr.Distinct().Count() == 1;\n        return arr.All(x => x == arr[0]);",
    "        // return arr.Distinct().Count() == 1;\n        return arr.All(x => x == arr[0]);",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        HashSet<long> set = new HashSet<long>();\n        foreach (long i in arr) {\n            set.Add(i);\n        }\n        return set.Count == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long num = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != num) {\n                return false;\n            }\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        HashSet<long> hs = new HashSet<long>();\n        foreach (long i in arr) {\n            hs.Add(i);\n        }\n        return hs.Count == 1;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        arr.Sort();\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] == arr[i - 1]) {\n                return false;\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long x = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != x) {\n                return false;\n            }\n        }\n        return true;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in arr) {\n            if (set.Contains(i)) return false;\n            set.Add(i);\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        else {\n            return false;\n        }",
    "        // return arr.Distinct().Count() == 1;\n        return arr.All(x => x == arr[0]);",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        var set = new HashSet<long>();\n        foreach (var i in arr) {\n            if (set.Contains(i)) {\n                return false;\n            }\n            set.Add(i);\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        // return arr.Distinct().Count() == 1;\n        return arr.All(x => x == arr[0]);",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] == arr[j]) {\n                    return false;\n                }\n            }\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        arr.Sort();\n        for (int i = 0; i < arr.Count - 1; i++) {\n            if (arr[i] != arr[i + 1]) {\n                return false;\n            }\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) return false;\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) return false;\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in arr) {\n            if (set.Contains(i)) {\n                return false;\n            }\n            set.Add(i);\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        var set = new HashSet<long>();\n        foreach (var item in arr) {\n            set.Add(item);\n        }\n        return set.Count == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        // if the list is empty, return false\n        if (arr.Count == 0) {\n            return false;\n        }\n        // if the list has only one element, return true\n        if (arr.Count == 1) {\n            return true;\n        }\n        // sort the list\n        arr.Sort();\n        // check if the list has only one distinct element\n        for (int i = 0; i < arr.Count - 1; i++) {\n            if (arr[i] != arr[i + 1]) {\n                return false;\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) {\n                return false;\n            }\n            set.Add(num);\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        var set = new HashSet<long>();\n        foreach (var item in arr) {\n            set.Add(item);\n        }\n        return set.Count == 1;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        for (int i = 0; i < arr.Count - 1; i++) {\n            if (arr[i] != arr[i + 1]) {\n                return false;\n            }\n        }\n        return true;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) {\n                return false;\n            }\n            set.Add(num);\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long val = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != val) {\n                return false;\n            }\n        }\n        return true;",
    "        // return arr.Distinct().Count() == 1;\n        return arr.All(x => x == arr[0]);",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        // return arr.Distinct().Count() == 1;\n        return arr.All(x => x == arr[0]);",
    "        // return true if there is only one distinct element in the list\n        // return false otherwise\n        // if the list is empty, return false\n        // if the list is null, return false\n        if (arr == null || arr.Count == 0) {\n            return false;\n        }\n        var set = new HashSet<long>();\n        foreach (var item in arr) {\n            set.Add(item);\n        }\n        return set.Count == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        // return arr.Distinct().Count() == 1;\n        return arr.All(x => x == arr[0]);",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        HashSet<long> hs = new HashSet<long>();\n        foreach (long i in arr) {\n            if (hs.Contains(i)) {\n                return false;\n            }\n            hs.Add(i);\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        // return arr.Distinct().Count() == 1;\n        return arr.All(x => x == arr[0]);",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long unique = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != unique) {\n                return false;\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] == arr[j]) {\n                    return false;\n                }\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (first != arr[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        // if the list is empty, there is no unique element\n        if (arr.Count == 0) {\n            return false;\n        }\n        // if the list has only one element, it is unique\n        if (arr.Count == 1) {\n            return true;\n        }\n        // sort the list\n        arr.Sort();\n        // if the first and last element are the same, there is only one unique element\n        if (arr[0] == arr[arr.Count - 1]) {\n            return true;\n        }\n        // otherwise, there is more than one unique element\n        return false;",
    "        if (arr.Count == 0) return false;\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) return false;\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        else {\n            return false;\n        }",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = 0; j < arr.Count; j++) {\n                if (i != j) {\n                    if (arr[i] == arr[j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long x in arr) {\n            if (set.Contains(x)) {\n                return false;\n            }\n            set.Add(x);\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in arr) {\n            if (set.Contains(i)) {\n                return false;\n            }\n            set.Add(i);\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach(long i in arr) {\n            if(set.Contains(i)) {\n                return false;\n            }\n            set.Add(i);\n        }\n        return true;",
    "        // Write your code here\n        if (arr.Count == 1) {\n            return true;\n        }\n        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) {\n                return false;\n            }\n            set.Add(num);\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        else {\n            for (int i = 0; i < arr.Count; i++) {\n                for (int j = i + 1; j < arr.Count; j++) {\n                    if (arr[i] == arr[j]) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        }",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in arr) {\n            if (set.Contains(i)) {\n                return false;\n            }\n            set.Add(i);\n        }\n        return true;",
    "        if (arr.Count == 1) return true;\n        arr.Sort();\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] == arr[i - 1]) return false;\n        }\n        return true;",
    "        var set = new HashSet<long>();\n        foreach (var item in arr) {\n            set.Add(item);\n        }\n        return set.Count == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] == arr[j]) {\n                    return false;\n                }\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) return false;\n        long unique = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != unique) return false;\n        }\n        return true;",
    "        // return arr.Distinct().Count() == 1;\n        return arr.All(x => x == arr[0]);",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) {\n                return false;\n            }\n            set.Add(num);\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        // return arr.Distinct().Count() == 1;\n        return arr.All(x => x == arr[0]);",
    "        var set = new HashSet<long>();\n        foreach (var item in arr) {\n            set.Add(item);\n        }\n        return set.Count == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] == arr[j]) {\n                    return false;\n                }\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long last = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != last) {\n                return false;\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;"
  ]
}
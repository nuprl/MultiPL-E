{
  "name": "mbpp_260_newman_prime",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the nth newman\u2013shanks\u2013williams prime number.\n    public static long NewmanPrime(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_260_newman_prime.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(NewmanPrime((3L)) == (7L));\n    Debug.Assert(NewmanPrime((4L)) == (17L));\n    Debug.Assert(NewmanPrime((5L)) == (41L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        if (n == 1) return 2;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 23;\n        if (n == 9) return 29;\n        if (n == 10) return 37;\n        if (n == 11) return 47;\n        if (n == 12) return 59;\n        if (n == 13) return 71;\n        if (n == 14) return 89;\n        if (n == 15) return 107;\n        if (n == 16) return 131;\n        if (n == 17) return 163;\n        if (n == 18) return 197;\n        if (n == 19) return 239;\n        if (n == 20) return 293;\n        if (n == 21) return 353;\n        if (n == 22) return 431;\n        if (n == 23) return 521;\n        if (n == 24) return 631;\n        if (n == 25) return 761;\n        if (n == 26) return 919;\n        if (n == 27) return 1103;\n        if (n == 28) return 1327;\n        if (n == 29) return 1597;\n        if (n == 30) return 1931;\n        if (n == 31) return 2333;\n        if (n == 32) return 2801;\n        if (n == 33) return 3371;\n        if (n == 34) return 4049;\n        if (n == 35) return 4861;\n        if (n == 36) return 5839;\n        if (n == 37) return 7013;\n        if (n == 38) return 8419;\n        if (n == 39) return 10103;\n        if (n == 40) return 12143;\n        if (n == 41) return 14591;\n        if (n == 42) return 17519;\n        if (n == 43) return 21023;\n        if (n == 44) return 25229;\n        if (n",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        // The nth Newman-Shanks-Williams prime number is the nth prime number that is not a prime power.\n        // The first few Newman-Shanks-Williams primes are:\n        // 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103,",
    "        if (n == 1) return 1;\n        long p = 1;\n        long i = 1;\n        while (i < n) {\n            p += 2 * i;\n            if (IsPrime(p)) i++;\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        long q = 1;\n        long i = 0;\n        while (i < n) {\n            p = 6 * q - 1;\n            q = 6 * q + 1;\n            if (IsPrime(p)) {\n                i++;\n            }\n            if (IsPrime(q)) {\n                i++;\n            }\n        }\n        return p;",
    "        long i = 1;\n        long p = 1;\n        while (i < n) {\n            p = NextNewmanPrime(p);\n            i++;\n        }\n        return p;",
    "        if (n == 1) return 1;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 19;\n        if (n == 9) return 23;\n        if (n == 10) return 29;\n        if (n == 11) return 31;\n        if (n == 12) return 37;\n        if (n == 13) return 41;\n        if (n == 14) return 43;\n        if (n == 15) return 47;\n        if (n == 16) return 53;\n        if (n == 17) return 59;\n        if (n == 18) return 61;\n        if (n == 19) return 67;\n        if (n == 20) return 71;\n        if (n == 21) return 73;\n        if (n == 22) return 79;\n        if (n == 23) return 83;\n        if (n == 24) return 89;\n        if (n == 25) return 97;\n        if (n == 26) return 101;\n        if (n == 27) return 103;\n        if (n == 28) return 107;\n        if (n == 29) return 109;\n        if (n == 30) return 113;\n        if (n == 31) return 127;\n        if (n == 32) return 131;\n        if (n == 33) return 137;\n        if (n == 34) return 139;\n        if (n == 35) return 149;\n        if (n == 36) return 151;\n        if (n == 37) return 157;\n        if (n == 38) return 163;\n        if (n == 39) return 167;\n        if (n == 40) return 173;\n        if (n == 41) return 179;\n        if (n == 42) return 181;\n        if (n == 43) return 191;\n        if (n == 44) return 193;\n        if (n == 45) return 197;\n        if (n == 46) return 199;\n        if (n ==",
    "        if (n == 1) return 1;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 23;\n        if (n == 9) return 29;\n        if (n == 10) return 37;\n        if (n == 11) return 47;\n        if (n == 12) return 59;\n        if (n == 13) return 71;\n        if (n == 14) return 89;\n        if (n == 15) return 107;\n        if (n == 16) return 131;\n        if (n == 17) return 163;\n        if (n == 18) return 197;\n        if (n == 19) return 239;\n        if (n == 20) return 293;\n        if (n == 21) return 353;\n        if (n == 22) return 431;\n        if (n == 23) return 521;\n        if (n == 24) return 631;\n        if (n == 25) return 761;\n        if (n == 26) return 919;\n        if (n == 27) return 1103;\n        if (n == 28) return 1327;\n        if (n == 29) return 1597;\n        if (n == 30) return 1931;\n        if (n == 31) return 2333;\n        if (n == 32) return 2801;\n        if (n == 33) return 3371;\n        if (n == 34) return 4049;\n        if (n == 35) return 4861;\n        if (n == 36) return 5839;\n        if (n == 37) return 7013;\n        if (n == 38) return 8419;\n        if (n == 39) return 10103;\n        if (n == 40) return 12143;\n        if (n == 41) return 14591;\n        if (n == 42) return 17519;\n        if (n == 43) return 21023;\n        if (n == 44) return 25229;\n        if (n",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(p * p - 1);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(2 * p + 1);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        if (n == 1) return 1;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 23;\n        if (n == 9) return 29;\n        if (n == 10) return 37;\n        if (n == 11) return 47;\n        if (n == 12) return 59;\n        if (n == 13) return 71;\n        if (n == 14) return 89;\n        if (n == 15) return 107;\n        if (n == 16) return 131;\n        if (n == 17) return 163;\n        if (n == 18) return 197;\n        if (n == 19) return 239;\n        if (n == 20) return 293;\n        if (n == 21) return 353;\n        if (n == 22) return 431;\n        if (n == 23) return 521;\n        if (n == 24) return 631;\n        if (n == 25) return 761;\n        if (n == 26) return 919;\n        if (n == 27) return 1103;\n        if (n == 28) return 1327;\n        if (n == 29) return 1597;\n        if (n == 30) return 1931;\n        if (n == 31) return 2333;\n        if (n == 32) return 2801;\n        if (n == 33) return 3371;\n        if (n == 34) return 4049;\n        if (n == 35) return 4861;\n        if (n == 36) return 5839;\n        if (n == 37) return 7013;\n        if (n == 38) return 8419;\n        if (n == 39) return 10103;\n        if (n == 40) return 12143;\n        if (n == 41) return 14591;\n        if (n == 42) return 17519;\n        if (n == 43) return 21023;\n        if (n == 44) return 25229;\n        if (n",
    "        // The nth Newman\u2013Shanks\u2013Williams prime is the nth prime of the form\n        // 2^k * 3^l * 7^m + 1, where k, l, and m are non-negative integers.\n        //\n        // The first few Newman\u2013Shanks\u2013Williams primes are:\n        //   1, 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 121, 127, 131, 137, 139, 143, 149, 151, 157, 163, 167, 169, 173, 179, 181, 187, 191, 193, 197, 199, 209, 211, 221, 223, 227, 229, 233, 239, 241, 247, 251, 253, 257, 263, 269, 271, 277, 281, 283, 289, 293, 299, 307, 311, 313, 317, 323, 331, 337, 341, 347, 349, 353, 359, 361, 367, 373, 377, 379, 383, 389, 391, 397, 401, 409, 419, 421, 431, 433, 437, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 493, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 841, 851, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947",
    "        long p = 2;\n        for (long i = 1; i < n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(2 * p + 1);\n        }\n        return p;",
    "        if (n == 1) return 2;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 23;\n        if (n == 9) return 29;\n        if (n == 10) return 37;\n        if (n == 11) return 47;\n        if (n == 12) return 59;\n        if (n == 13) return 71;\n        if (n == 14) return 89;\n        if (n == 15) return 107;\n        if (n == 16) return 131;\n        if (n == 17) return 163;\n        if (n == 18) return 197;\n        if (n == 19) return 239;\n        if (n == 20) return 293;\n        if (n == 21) return 353;\n        if (n == 22) return 431;\n        if (n == 23) return 521;\n        if (n == 24) return 631;\n        if (n == 25) return 761;\n        if (n == 26) return 919;\n        if (n == 27) return 1103;\n        if (n == 28) return 1327;\n        if (n == 29) return 1597;\n        if (n == 30) return 1931;\n        if (n == 31) return 2333;\n        if (n == 32) return 2801;\n        if (n == 33) return 3371;\n        if (n == 34) return 4049;\n        if (n == 35) return 4861;\n        if (n == 36) return 5839;\n        if (n == 37) return 7013;\n        if (n == 38) return 8419;\n        if (n == 39) return 10103;\n        if (n == 40) return 12143;\n        if (n == 41) return 14591;\n        if (n == 42) return 17519;\n        if (n == 43) return 21023;\n        if (n == 44) return 25229;\n        if (n",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        if (n < 1) {\n            throw new ArgumentOutOfRangeException(\"n\", \"n must be positive\");\n        }\n        if (n == 1) {\n            return 7;\n        }\n        long p = 7;\n        long q = 3;\n        long i = 1;\n        while (i < n) {\n            p = p + q;\n            q = 6 - q;\n            if (IsPrime(p)) {\n                i++;\n            }\n        }\n        return p;",
    "        long p = 2;\n        long q = 1;\n        long i = 1;\n        while (i < n) {\n            p = 6 * q - p + 2;\n            q = p - q;\n            i++;\n        }\n        return p;",
    "        long p = 2;\n        long q = 2;\n        long i = 1;\n        while (i < n) {\n            p = 6 * i - 1;\n            q = 6 * i + 1;\n            if (IsPrime(p)) {\n                i++;\n            }\n            if (IsPrime(q)) {\n                i++;\n            }\n        }\n        return p > q ? p : q;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        // The nth Newman-Shanks-Williams prime is the nth prime number p such that\n        // p + 2^(n-1) + 1 is also prime.\n        long p = 0;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p);\n            long q = p + (1 << (i - 1)) + 1;\n            while (!IsPrime(q)) {\n                p = NextPrime(p);\n                q = p + (1 << (i - 1)) + 1;\n            }\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        // The nth Newman-Shanks-Williams prime is the nth prime number that is not of the form 2^k - 1.\n        // The nth prime number is given by the nth prime number theorem.\n        // The nth prime number theorem is given by:\n        // p_n = n * ln(n) + n * ln(ln(n)) + O(n * ln(ln(n))^2)\n        // The nth prime number is given by:\n        // p_n = n * ln(n) + n * ln(ln(n)) + O(n * ln(ln(n))^2)\n        // The nth prime number is given by:\n        // p_n = n * ln(n) + n * ln(ln(n)) + O(n * ln(ln(n))^2)\n        // The nth prime number is given by:\n        // p_n = n * ln(n) + n * ln(ln(n)) + O(n * ln(ln(n))^2)\n        // The nth prime number is given by:\n        // p_n = n * ln(n) + n * ln(ln(n)) + O(n * ln(ln(n))^2)\n        // The nth prime number is given by:\n        // p_n = n * ln(n) + n * ln(ln(n)) + O(n * ln(ln(n))^2)\n        // The nth prime number is given by:\n        // p_n = n * ln(n) + n * ln(ln(n)) + O(n * ln(ln(n))^2)\n        // The nth prime number is given by:\n        // p_n = n * ln(n) + n * ln(ln(n)) + O(n * ln(ln(n))^2)\n        // The nth prime number is given by:\n        // p_n = n * ln(n) + n * ln(ln(n)) + O(n * ln(ln(n))^2)\n        //",
    "        long p = 1;\n        while (n > 0) {\n            p = NextNewmanPrime(p);\n            n--;\n        }\n        return p;",
    "        long p = 2;\n        long q = 1;\n        long i = 0;\n        while (i < n) {\n            p = 6 * q - 1;\n            if (IsPrime(p)) {\n                i++;\n            }\n            p = 6 * q + 1;\n            if (IsPrime(p)) {\n                i++;\n            }\n            q++;\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p + 1);\n            p = NextPrime(p + 1);\n            p = NextPrime(p + 1);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        if (n < 1) throw new ArgumentOutOfRangeException();\n        if (n == 1) return 2;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 23;\n        if (n == 9) return 29;\n        if (n == 10) return 37;\n        if (n == 11) return 47;\n        if (n == 12) return 59;\n        if (n == 13) return 71;\n        if (n == 14) return 89;\n        if (n == 15) return 107;\n        if (n == 16) return 131;\n        if (n == 17) return 163;\n        if (n == 18) return 197;\n        if (n == 19) return 239;\n        if (n == 20) return 293;\n        if (n == 21) return 353;\n        if (n == 22) return 431;\n        if (n == 23) return 521;\n        if (n == 24) return 631;\n        if (n == 25) return 761;\n        if (n == 26) return 919;\n        if (n == 27) return 1103;\n        if (n == 28) return 1327;\n        if (n == 29) return 1597;\n        if (n == 30) return 1931;\n        if (n == 31) return 2333;\n        if (n == 32) return 2801;\n        if (n == 33) return 3371;\n        if (n == 34) return 4049;\n        if (n == 35) return 4861;\n        if (n == 36) return 5839;\n        if (n == 37) return 7013;\n        if (n == 38) return 8419;\n        if (n == 39) return 10103;\n        if (n == 40) return 12143;\n        if (n == 41) return 14591;\n        if (n == 42) return 17519;\n        if (n == 43) return 21023;\n",
    "        long p = 1;\n        long q = 1;\n        long i = 1;\n        while (i < n) {\n            p = 6 * q - 1;\n            q = 6 * q + 1;\n            if (IsPrime(p)) {\n                i++;\n            }\n            if (IsPrime(q)) {\n                i++;\n            }\n        }\n        if (IsPrime(p)) {\n            return p;\n        }\n        return q;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        if (n == 1) return 2;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 23;\n        if (n == 6) return 29;\n        if (n == 7) return 31;\n        if (n == 8) return 37;\n        if (n == 9) return 53;\n        if (n == 10) return 59;\n        if (n == 11) return 71;\n        if (n == 12) return 73;\n        if (n == 13) return 79;\n        if (n == 14) return 233;\n        if (n == 15) return 239;\n        if (n == 16) return 293;\n        if (n == 17) return 311;\n        if (n == 18) return 313;\n        if (n == 19) return 317;\n        if (n == 20) return 373;\n        if (n == 21) return 379;\n        if (n == 22) return 593;\n        if (n == 23) return 599;\n        if (n == 24) return 719;\n        if (n == 25) return 733;\n        if (n == 26) return 739;\n        if (n == 27) return 797;\n        if (n == 28) return 2333;\n        if (n == 29) return 2339;\n        if (n == 30) return 2393;\n        if (n == 31) return 2399;\n        if (n == 32) return 2939;\n        if (n == 33) return 3119;\n        if (n == 34) return 3137;\n        if (n == 35) return 3733;\n        if (n == 36) return 3739;\n        if (n == 37) return 3793;\n        if (n == 38) return 3797;\n        if (n == 39) return 5939;\n        if (n == 40) return 7193;\n        if (n == 41) return 7331;\n        if (n == 42) return 7333;\n        if (n == 43) return 7393;\n        if (n == 44) return 23333;\n        if (n",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long i = 1;\n        long p = 2;\n        while (i < n) {\n            p = NextPrime(p);\n            if (p % 4 == 3) {\n                i++;\n            }\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(2 * p + 1);\n        }\n        return p;",
    "        long p = 3;\n        long q = 7;\n        long i = 1;\n        while (i < n) {\n            long p2 = p * p;\n            long q2 = q * q;\n            long p3 = p2 * p;\n            long q3 = q2 * q;\n            p = p2 * q3 * (q3 - 3 * q + 3) - p3 * (q3 - q);\n            q = q3 * (q3 - 3 * q + 3) - q2 * (q3 - q);\n            i++;\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(p * p - 1);\n        }\n        return p;",
    "        if (n == 1) return 2;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 23;\n        if (n == 9) return 29;\n        if (n == 10) return 37;\n        if (n == 11) return 47;\n        if (n == 12) return 59;\n        if (n == 13) return 71;\n        if (n == 14) return 89;\n        if (n == 15) return 107;\n        if (n == 16) return 131;\n        if (n == 17) return 163;\n        if (n == 18) return 197;\n        if (n == 19) return 239;\n        if (n == 20) return 293;\n        if (n == 21) return 353;\n        if (n == 22) return 431;\n        if (n == 23) return 521;\n        if (n == 24) return 631;\n        if (n == 25) return 761;\n        if (n == 26) return 919;\n        if (n == 27) return 1103;\n        if (n == 28) return 1327;\n        if (n == 29) return 1597;\n        if (n == 30) return 1931;\n        if (n == 31) return 2333;\n        if (n == 32) return 2801;\n        if (n == 33) return 3371;\n        if (n == 34) return 4049;\n        if (n == 35) return 4861;\n        if (n == 36) return 5839;\n        if (n == 37) return 7013;\n        if (n == 38) return 8419;\n        if (n == 39) return 10103;\n        if (n == 40) return 12143;\n        if (n == 41) return 14591;\n        if (n == 42) return 17519;\n        if (n == 43) return 21023;\n        if (n == 44) return 25229;\n        if (n",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        if (n < 1) {\n            throw new ArgumentOutOfRangeException(\"n\");\n        }\n        if (n == 1) {\n            return 2;\n        }\n        if (n == 2) {\n            return 3;\n        }\n        if (n == 3) {\n            return 5;\n        }\n        long p = 5;\n        long q = 2;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 3;\n        long w = 3;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n        long o = 1;\n        long count = 3;\n        while (count < n) {\n            p = p + 2;\n            if (p == q) {\n                p = p + 2;\n            }\n            if (p == r) {\n                p = p + 4;\n            }\n            if (p == s) {\n                p = p + 2;\n            }\n            if (p == t) {\n                p = p + 4;\n            }\n            if (p == u) {\n                p = p + 6;\n            }\n            if (p == v) {\n                p = p + 2;\n            }\n            if (p == w) {\n                p = p + 6;\n            }\n            if (p == x) {\n                p = p + 4;\n            }\n            if (p == y) {\n                p = p + 2;\n            }\n            if (p == z) {\n                p = p + 4;\n            }\n            if (p == a) {\n                p = p + 2;\n            }\n            if (p == b) {\n                p = p + 4;\n",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = 6 * i + 1;\n            if (IsPrime(p - 1)) {\n                p -= 1;\n                break;\n            }\n            if (IsPrime(p + 1)) {\n                p += 1;\n                break;\n            }\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = 6 * i - 1;\n            if (!IsPrime(p)) {\n                p = 6 * i + 1;\n            }\n        }\n        return p;",
    "        long p = 1;\n        long q = 1;\n        long i = 1;\n        while (i < n) {\n            p = 6 * i - 1;\n            q = 6 * i + 1;\n            if (IsPrime(p)) {\n                i++;\n            }\n            if (IsPrime(q)) {\n                i++;\n            }\n        }\n        if (IsPrime(p)) {\n            return p;\n        } else {\n            return q;\n        }",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p + 1);\n            if (i % 2 == 0) {\n                p = NextPrime(p + 1);\n            }\n        }\n        return p;",
    "        long i = 1;\n        long p = 1;\n        while (i < n) {\n            p += 2 * i + 1;\n            i++;\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 2;\n        long q = 1;\n        long r = 0;\n        long i = 1;\n        while (i < n) {\n            r = 2 * q + p;\n            p = q;\n            q = r;\n            i++;\n            if (BigInteger.ModPow(2, r, r) == 2) {\n                i++;\n            }\n        }\n        return r;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 2;\n        for (long i = 1; i < n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        if (n < 1) throw new ArgumentOutOfRangeException();\n        if (n == 1) return 1;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 23;\n        if (n == 9) return 29;\n        if (n == 10) return 37;\n        if (n == 11) return 47;\n        if (n == 12) return 59;\n        if (n == 13) return 71;\n        if (n == 14) return 89;\n        if (n == 15) return 107;\n        if (n == 16) return 131;\n        if (n == 17) return 163;\n        if (n == 18) return 197;\n        if (n == 19) return 239;\n        if (n == 20) return 293;\n        if (n == 21) return 353;\n        if (n == 22) return 431;\n        if (n == 23) return 521;\n        if (n == 24) return 631;\n        if (n == 25) return 761;\n        if (n == 26) return 919;\n        if (n == 27) return 1103;\n        if (n == 28) return 1327;\n        if (n == 29) return 1597;\n        if (n == 30) return 1931;\n        if (n == 31) return 2333;\n        if (n == 32) return 2801;\n        if (n == 33) return 3371;\n        if (n == 34) return 4049;\n        if (n == 35) return 4861;\n        if (n == 36) return 5839;\n        if (n == 37) return 7013;\n        if (n == 38) return 8419;\n        if (n == 39) return 10103;\n        if (n == 40) return 12143;\n        if (n == 41) return 14591;\n        if (n == 42) return 17519;\n        if (n == 43) return 21023;\n",
    "        if (n == 0) return 2;\n        if (n == 1) return 3;\n        long k = 1;\n        long p = 3;\n        while (k < n) {\n            p = 6 * k + 1;\n            if (IsPrime(p)) k++;\n            p = 6 * k - 1;\n            if (IsPrime(p)) k++;\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p + 1);\n            if (i % 2 == 0) {\n                p = NextPrime(p * 2 + 1);\n            }\n        }\n        return p;",
    "        long p = 2;\n        long q = 1;\n        long i = 1;\n        while (i < n) {\n            q = p;\n            p = 2 * q + 1;\n            if (BigInteger.ModPow(2, p - 1, p) == 1) {\n                i++;\n            }\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i < n; i++) {\n            p = NextPrime(p + 1);\n            p = NextPrime(6 * p - 1);\n            p = NextPrime(6 * p + 1);\n        }\n        return p;",
    "        long p = 1;\n        long q = 1;\n        long i = 1;\n        while (i < n) {\n            p = 6 * q - 1;\n            q = 6 * q + 1;\n            if (IsPrime(p)) {\n                i++;\n            }\n            if (IsPrime(q)) {\n                i++;\n            }\n        }\n        if (IsPrime(p)) {\n            return p;\n        } else {\n            return q;\n        }",
    "        if (n == 1) return 2;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 23;\n        if (n == 9) return 29;\n        if (n == 10) return 37;\n        if (n == 11) return 47;\n        if (n == 12) return 59;\n        if (n == 13) return 71;\n        if (n == 14) return 89;\n        if (n == 15) return 107;\n        if (n == 16) return 131;\n        if (n == 17) return 163;\n        if (n == 18) return 197;\n        if (n == 19) return 239;\n        if (n == 20) return 293;\n        if (n == 21) return 353;\n        if (n == 22) return 431;\n        if (n == 23) return 521;\n        if (n == 24) return 631;\n        if (n == 25) return 761;\n        if (n == 26) return 919;\n        if (n == 27) return 1103;\n        if (n == 28) return 1327;\n        if (n == 29) return 1597;\n        if (n == 30) return 1931;\n        if (n == 31) return 2333;\n        if (n == 32) return 2801;\n        if (n == 33) return 3371;\n        if (n == 34) return 4049;\n        if (n == 35) return 4861;\n        if (n == 36) return 5839;\n        if (n == 37) return 7013;\n        if (n == 38) return 8419;\n        if (n == 39) return 10103;\n        if (n == 40) return 12143;\n        if (n == 41) return 14591;\n        if (n == 42) return 17519;\n        if (n == 43) return 21023;\n        if (n == 44) return 25229;\n        if (n",
    "        long p = 2;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n        long o = 1;\n        long pp = 1;\n        long qq = 1;\n        long rr = 1;\n        long ss = 1;\n        long tt = 1;\n        long uu = 1;\n        long vv = 1;\n        long ww = 1;\n        long xx = 1;\n        long yy = 1;\n        long zz = 1;\n        long aa = 1;\n        long bb = 1;\n        long cc = 1;\n        long dd = 1;\n        long ee = 1;\n        long ff = 1;\n        long gg = 1;\n        long hh = 1;\n        long ii = 1;\n        long jj = 1;\n        long kk = 1;\n        long ll = 1;\n        long mm = 1;\n        long oo = 1;\n        long ppp = 1;\n        long qqq = 1;\n        long rrr = 1;\n        long sss = 1;\n        long ttt = 1;\n        long uuu = 1;\n        long vvv = 1;\n        long www = 1;\n        long xxx = 1;\n        long yyy = 1;\n        long zzz = 1;\n        long aaa = 1;\n        long bbb = 1;\n        long ccc = 1;\n        long ddd = 1;\n        long eee = 1;\n        long fff = 1;\n        long ggg = 1;\n        long",
    "        // The nth Newman-Shanks-Williams prime is the nth prime number p such that\n        // p = 2^k * q + 1 where q is prime and k > 0.\n        //\n        // The nth Newman-Shanks-Williams prime is the nth prime number p such that\n        // p = 2^k * q + 1 where q is prime and k > 0.\n        //\n        // The nth Newman-Shanks-Williams prime is the nth prime number p such that\n        // p = 2^k * q + 1 where q is prime and k > 0.\n        //\n        // The nth Newman-Shanks-Williams prime is the nth prime number p such that\n        // p = 2^k * q + 1 where q is prime and k > 0.\n        //\n        // The nth Newman-Shanks-Williams prime is the nth prime number p such that\n        // p = 2^k * q + 1 where q is prime and k > 0.\n        //\n        // The nth Newman-Shanks-Williams prime is the nth prime number p such that\n        // p = 2^k * q + 1 where q is prime and k > 0.\n        //\n        // The nth Newman-Shanks-Williams prime is the nth prime number p such that\n        // p = 2^k * q + 1 where q is prime and k > 0.\n        //\n        // The nth Newman-Shanks-Williams prime is the nth prime number p such that\n        // p = 2^k * q + 1 where q is prime and k > 0.\n        //\n        // The nth Newman-Shanks-Williams prime is the nth prime number p such that\n        // p = 2^k * q + 1 where q is prime and k > 0.\n        //\n        // The nth Newman-Shanks-Williams prime is the nth prime number p such that\n        // p = 2^k * q + 1 where q is prime and k > 0.\n        //\n        // The nth Newman-Shanks-Williams prime is the nth prime number p such that\n        // p = 2^k * q + 1 where q is prime and k > 0.\n        //\n        // The nth",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        if (n == 1) return 2;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 23;\n        if (n == 9) return 29;\n        if (n == 10) return 37;\n        if (n == 11) return 47;\n        if (n == 12) return 59;\n        if (n == 13) return 71;\n        if (n == 14) return 89;\n        if (n == 15) return 107;\n        if (n == 16) return 131;\n        if (n == 17) return 163;\n        if (n == 18) return 197;\n        if (n == 19) return 239;\n        if (n == 20) return 293;\n        if (n == 21) return 353;\n        if (n == 22) return 431;\n        if (n == 23) return 521;\n        if (n == 24) return 631;\n        if (n == 25) return 761;\n        if (n == 26) return 919;\n        if (n == 27) return 1103;\n        if (n == 28) return 1327;\n        if (n == 29) return 1597;\n        if (n == 30) return 1931;\n        if (n == 31) return 2333;\n        if (n == 32) return 2801;\n        if (n == 33) return 3371;\n        if (n == 34) return 4049;\n        if (n == 35) return 4861;\n        if (n == 36) return 5839;\n        if (n == 37) return 7013;\n        if (n == 38) return 8419;\n        if (n == 39) return 10103;\n        if (n == 40) return 12143;\n        if (n == 41) return 14591;\n        if (n == 42) return 17519;\n        if (n == 43) return 21023;\n        if (n == 44) return 25229;\n        if (n",
    "        long p = 1;\n        for (long i = 1; i < n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (int i = 0; i < n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(2 * p + 1);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p + 1);\n            p = NextPrime(6 * p - 1);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(2 * p + 1);\n        }\n        return p;",
    "        if (n == 1) return 1;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 23;\n        if (n == 9) return 29;\n        if (n == 10) return 37;\n        if (n == 11) return 47;\n        if (n == 12) return 59;\n        if (n == 13) return 71;\n        if (n == 14) return 89;\n        if (n == 15) return 107;\n        if (n == 16) return 131;\n        if (n == 17) return 163;\n        if (n == 18) return 197;\n        if (n == 19) return 239;\n        if (n == 20) return 293;\n        if (n == 21) return 353;\n        if (n == 22) return 431;\n        if (n == 23) return 521;\n        if (n == 24) return 631;\n        if (n == 25) return 761;\n        if (n == 26) return 919;\n        if (n == 27) return 1103;\n        if (n == 28) return 1327;\n        if (n == 29) return 1597;\n        if (n == 30) return 1931;\n        if (n == 31) return 2333;\n        if (n == 32) return 2801;\n        if (n == 33) return 3371;\n        if (n == 34) return 4049;\n        if (n == 35) return 4861;\n        if (n == 36) return 5839;\n        if (n == 37) return 7013;\n        if (n == 38) return 8419;\n        if (n == 39) return 10103;\n        if (n == 40) return 12143;\n        if (n == 41) return 14591;\n        if (n == 42) return 17519;\n        if (n == 43) return 21023;\n        if (n == 44) return 25229;\n        if (n",
    "        long p = 1;\n        long q = 1;\n        long i = 1;\n        while (i < n) {\n            p = 6 * q - 1;\n            if (IsPrime(p)) {\n                i++;\n            }\n            p = 6 * q + 1;\n            if (IsPrime(p)) {\n                i++;\n            }\n            q++;\n        }\n        return p;",
    "        // The Newman\u2013Shanks\u2013Williams prime is a prime number of the form\n        // p = 2^n * q + 1, where q is a prime number.\n        // The first few Newman\u2013Shanks\u2013Williams primes are:\n        // 2, 5, 17, 257, 65537, 4294967297, 18446744073709551617, etc.\n        // The first few Newman\u2013Shanks\u2013Williams primes are:\n        // 2, 5, 17, 257, 65537, 4294967297, 18446744073709551617, etc.\n        // The first few Newman\u2013Shanks\u2013Williams primes are:\n        // 2, 5, 17, 257, 65537, 4294967297, 18446744073709551617, etc.\n        // The first few Newman\u2013Shanks\u2013Williams primes are:\n        // 2, 5, 17, 257, 65537, 4294967297, 18446744073709551617, etc.\n        // The first few Newman\u2013Shanks\u2013Williams primes are:\n        // 2, 5, 17, 257, 65537, 4294967297, 18446744073709551617, etc.\n        // The first few Newman\u2013Shanks\u2013Williams primes are:\n        // 2, 5, 17, 257, 65537, 4294967297, 18446744073709551617, etc.\n        // The first few Newman\u2013Shanks\u2013Williams primes are:\n        // 2, 5, 17, 257, 65537, 4294967297, 18446744073709551617, etc.\n        // The first few Newman\u2013Shanks\u2013Williams primes are:\n        // 2, 5, 17, 257, 65537, 4294967297, 18446744073709551617, etc.\n        // The first few Newman\u2013Shanks\u2013Williams primes are:\n        // 2, 5, 17, 257, 65537, 4294967297, 18446744073709551617, etc.\n        // The first few Newman\u2013Shanks\u2013Williams primes are:\n        // 2, 5, 17, 257, 65537, 4294967297, 18446744073709551617, etc.\n        // The",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(2 * p + 1);\n        }\n        return p;",
    "        long p = 2;\n        long q = 1;\n        long i = 1;\n        while (i < n) {\n            q = p;\n            p = 2 * q + 1;\n            if (IsPrime(p)) {\n                i++;\n            }\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        if (n == 1) return 2;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 23;\n        if (n == 6) return 29;\n        if (n == 7) return 31;\n        if (n == 8) return 37;\n        if (n == 9) return 53;\n        if (n == 10) return 59;\n        if (n == 11) return 71;\n        if (n == 12) return 73;\n        if (n == 13) return 79;\n        if (n == 14) return 233;\n        if (n == 15) return 239;\n        if (n == 16) return 293;\n        if (n == 17) return 311;\n        if (n == 18) return 313;\n        if (n == 19) return 317;\n        if (n == 20) return 373;\n        if (n == 21) return 379;\n        if (n == 22) return 593;\n        if (n == 23) return 599;\n        if (n == 24) return 719;\n        if (n == 25) return 733;\n        if (n == 26) return 739;\n        if (n == 27) return 797;\n        if (n == 28) return 2333;\n        if (n == 29) return 2339;\n        if (n == 30) return 2393;\n        if (n == 31) return 2399;\n        if (n == 32) return 2939;\n        if (n == 33) return 3119;\n        if (n == 34) return 3137;\n        if (n == 35) return 3733;\n        if (n == 36) return 3739;\n        if (n == 37) return 3793;\n        if (n == 38) return 3797;\n        if (n == 39) return 5939;\n        if (n == 40) return 7193;\n        if (n == 41) return 7331;\n        if (n == 42) return 7333;\n        if (n == 43) return 7393;\n        if (n == 44) return 23333;\n        if (n",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 2;\n        long q = 1;\n        long i = 1;\n        while (i < n) {\n            p = 6 * q - 1;\n            if (IsPrime(p)) {\n                i++;\n            }\n            p = 6 * q + 1;\n            if (IsPrime(p)) {\n                i++;\n            }\n            q++;\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(2 * p + 1);\n        }\n        return p;",
    "        if (n == 1) return 2;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 23;\n        if (n == 9) return 29;\n        if (n == 10) return 37;\n        if (n == 11) return 47;\n        if (n == 12) return 59;\n        if (n == 13) return 71;\n        if (n == 14) return 89;\n        if (n == 15) return 107;\n        if (n == 16) return 131;\n        if (n == 17) return 163;\n        if (n == 18) return 197;\n        if (n == 19) return 239;\n        if (n == 20) return 293;\n        if (n == 21) return 353;\n        if (n == 22) return 431;\n        if (n == 23) return 521;\n        if (n == 24) return 631;\n        if (n == 25) return 761;\n        if (n == 26) return 919;\n        if (n == 27) return 1103;\n        if (n == 28) return 1327;\n        if (n == 29) return 1597;\n        if (n == 30) return 1931;\n        if (n == 31) return 2333;\n        if (n == 32) return 2801;\n        if (n == 33) return 3371;\n        if (n == 34) return 4049;\n        if (n == 35) return 4861;\n        if (n == 36) return 5839;\n        if (n == 37) return 7013;\n        if (n == 38) return 8419;\n        if (n == 39) return 10103;\n        if (n == 40) return 12143;\n        if (n == 41) return 14591;\n        if (n == 42) return 17519;\n        if (n == 43) return 21023;\n        if (n == 44) return 25229;\n        if (n",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        while (n > 0) {\n            p = NextNewmanPrime(p);\n            n--;\n        }\n        return p;",
    "        // The nth Newman-Shanks-Williams prime is the nth prime number\n        // that is not a Lucas-Lehmer pseudoprime to base 2.\n        long p = 2;\n        long count = 0;\n        while (count < n) {\n            p = Prime.NextPrime(p);\n            if (!LucasLehmer.IsPseudoprime(p)) {\n                count++;\n            }\n        }\n        return p;",
    "        if (n < 1) throw new ArgumentOutOfRangeException();\n        if (n == 1) return 1;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 23;\n        if (n == 9) return 29;\n        if (n == 10) return 37;\n        if (n == 11) return 47;\n        if (n == 12) return 59;\n        if (n == 13) return 71;\n        if (n == 14) return 89;\n        if (n == 15) return 107;\n        if (n == 16) return 131;\n        if (n == 17) return 163;\n        if (n == 18) return 197;\n        if (n == 19) return 239;\n        if (n == 20) return 293;\n        if (n == 21) return 353;\n        if (n == 22) return 431;\n        if (n == 23) return 521;\n        if (n == 24) return 631;\n        if (n == 25) return 761;\n        if (n == 26) return 919;\n        if (n == 27) return 1103;\n        if (n == 28) return 1327;\n        if (n == 29) return 1597;\n        if (n == 30) return 1931;\n        if (n == 31) return 2333;\n        if (n == 32) return 2801;\n        if (n == 33) return 3371;\n        if (n == 34) return 4049;\n        if (n == 35) return 4861;\n        if (n == 36) return 5839;\n        if (n == 37) return 7013;\n        if (n == 38) return 8419;\n        if (n == 39) return 10103;\n        if (n == 40) return 12143;\n        if (n == 41) return 14591;\n        if (n == 42) return 17519;\n        if (n == 43) return 21023;\n",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p + 1);\n            p = NextPrime(6 * p - 1);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        if (n == 1) return 2;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 23;\n        if (n == 6) return 29;\n        if (n == 7) return 31;\n        if (n == 8) return 37;\n        if (n == 9) return 53;\n        if (n == 10) return 59;\n        if (n == 11) return 71;\n        if (n == 12) return 73;\n        if (n == 13) return 79;\n        if (n == 14) return 233;\n        if (n == 15) return 239;\n        if (n == 16) return 293;\n        if (n == 17) return 311;\n        if (n == 18) return 313;\n        if (n == 19) return 317;\n        if (n == 20) return 373;\n        if (n == 21) return 379;\n        if (n == 22) return 593;\n        if (n == 23) return 599;\n        if (n == 24) return 719;\n        if (n == 25) return 733;\n        if (n == 26) return 739;\n        if (n == 27) return 797;\n        if (n == 28) return 2333;\n        if (n == 29) return 2339;\n        if (n == 30) return 2393;\n        if (n == 31) return 2399;\n        if (n == 32) return 2939;\n        if (n == 33) return 3119;\n        if (n == 34) return 3137;\n        if (n == 35) return 3733;\n        if (n == 36) return 3739;\n        if (n == 37) return 3793;\n        if (n == 38) return 3797;\n        if (n == 39) return 5939;\n        if (n == 40) return 7193;\n        if (n == 41) return 7331;\n        if (n == 42) return 7333;\n        if (n == 43) return 7393;\n        if (n == 44) return 23333;\n        if (n",
    "        if (n == 1) return 2;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 23;\n        if (n == 6) return 29;\n        if (n == 7) return 31;\n        if (n == 8) return 37;\n        if (n == 9) return 53;\n        if (n == 10) return 59;\n        if (n == 11) return 71;\n        if (n == 12) return 73;\n        if (n == 13) return 79;\n        if (n == 14) return 233;\n        if (n == 15) return 239;\n        if (n == 16) return 293;\n        if (n == 17) return 311;\n        if (n == 18) return 313;\n        if (n == 19) return 317;\n        if (n == 20) return 373;\n        if (n == 21) return 379;\n        if (n == 22) return 593;\n        if (n == 23) return 599;\n        if (n == 24) return 719;\n        if (n == 25) return 733;\n        if (n == 26) return 739;\n        if (n == 27) return 797;\n        if (n == 28) return 2333;\n        if (n == 29) return 2339;\n        if (n == 30) return 2393;\n        if (n == 31) return 2399;\n        if (n == 32) return 2939;\n        if (n == 33) return 3119;\n        if (n == 34) return 3137;\n        if (n == 35) return 3733;\n        if (n == 36) return 3739;\n        if (n == 37) return 3793;\n        if (n == 38) return 3797;\n        if (n == 39) return 5939;\n        if (n == 40) return 7193;\n        if (n == 41) return 7331;\n        if (n == 42) return 7333;\n        if (n == 43) return 7393;\n        if (n == 44) return 23333;\n        if (n",
    "        var primes = new List<long>();\n        var p = 2;\n        primes.Add(p);\n        while (primes.Count < n) {\n            p = NextPrime(p);\n            var q = p * p;\n            var r = 2 * p;\n            var s = q + r;\n            while (s < long.MaxValue) {\n                if (IsPrime(s)) {\n                    primes.Add(s);\n                }\n                q = s;\n                s += r;\n            }\n        }\n        return primes[(int)n - 1];",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(2 * p + 1);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        if (n == 1) return 2;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 23;\n        if (n == 9) return 29;\n        if (n == 10) return 37;\n        if (n == 11) return 47;\n        if (n == 12) return 59;\n        if (n == 13) return 71;\n        if (n == 14) return 89;\n        if (n == 15) return 107;\n        if (n == 16) return 131;\n        if (n == 17) return 163;\n        if (n == 18) return 197;\n        if (n == 19) return 239;\n        if (n == 20) return 293;\n        if (n == 21) return 353;\n        if (n == 22) return 431;\n        if (n == 23) return 521;\n        if (n == 24) return 631;\n        if (n == 25) return 761;\n        if (n == 26) return 919;\n        if (n == 27) return 1103;\n        if (n == 28) return 1327;\n        if (n == 29) return 1597;\n        if (n == 30) return 1931;\n        if (n == 31) return 2333;\n        if (n == 32) return 2801;\n        if (n == 33) return 3371;\n        if (n == 34) return 4049;\n        if (n == 35) return 4861;\n        if (n == 36) return 5839;\n        if (n == 37) return 7013;\n        if (n == 38) return 8419;\n        if (n == 39) return 10103;\n        if (n == 40) return 12143;\n        if (n == 41) return 14591;\n        if (n == 42) return 17519;\n        if (n == 43) return 21023;\n        if (n == 44) return 25229;\n        if (n",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(2 * p + 1);\n        }\n        return p;",
    "        if (n == 1) return 1;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 11;\n        if (n == 5) return 23;\n        if (n == 6) return 47;\n        if (n == 7) return 95;\n        if (n == 8) return 191;\n        if (n == 9) return 383;\n        if (n == 10) return 767;\n        if (n == 11) return 1535;\n        if (n == 12) return 3071;\n        if (n == 13) return 6143;\n        if (n == 14) return 12287;\n        if (n == 15) return 24575;\n        if (n == 16) return 49151;\n        if (n == 17) return 98303;\n        if (n == 18) return 196607;\n        if (n == 19) return 393215;\n        if (n == 20) return 786431;\n        if (n == 21) return 1572863;\n        if (n == 22) return 3145727;\n        if (n == 23) return 6291455;\n        if (n == 24) return 12582911;\n        if (n == 25) return 25165823;\n        if (n == 26) return 50331647;\n        if (n == 27) return 100663295;\n        if (n == 28) return 201326591;\n        if (n == 29) return 402653183;\n        if (n == 30) return 805306367;\n        if (n == 31) return 1610612735;\n        if (n == 32) return 3221225471;\n        if (n == 33) return 6442450943;\n        if (n == 34) return 12884901887;\n        if (n == 35) return 25769803775;\n        if (n == 36) return 51539607551;\n        if (n == 37) return 103079215103;\n        if (n == 38) return 206158430207;\n        if (n == 39) return 412316860415;\n        if (n == 40) return",
    "        long p = 3;\n        long q = 7;\n        long r = 11;\n        long s = 13;\n        long t = 17;\n        long u = 19;\n        long v = 23;\n        long w = 29;\n        long x = 31;\n        long y = 37;\n        long z = 41;\n        long aa = 43;\n        long bb = 47;\n        long cc = 53;\n        long dd = 59;\n        long ee = 61;\n        long ff = 67;\n        long gg = 71;\n        long hh = 73;\n        long ii = 79;\n        long jj = 83;\n        long kk = 89;\n        long ll = 97;\n        long mm = 101;\n        long nn = 103;\n        long oo = 107;\n        long pp = 109;\n        long qq = 113;\n        long rr = 127;\n        long ss = 131;\n        long tt = 137;\n        long uu = 139;\n        long vv = 149;\n        long ww = 151;\n        long xx = 157;\n        long yy = 163;\n        long zz = 167;\n        long aaa = 173;\n        long bbb = 179;\n        long ccc = 181;\n        long ddd = 191;\n        long eee = 193;\n        long fff = 197;\n        long ggg = 199;\n        long hhh = 211;\n        long iii = 223;\n        long jjj = 227;\n        long kkk = 229;\n        long lll = 233;\n        long mmm = 239;\n        long nnn = 241;\n        long ooo = 251;\n        long ppp = 257;\n        long qqq = 263;\n        long rrr = 269;\n        long sss = 271;\n        long ttt = 277;\n        long uuu = 281;\n        long vvv = 283;\n        long www = 293;\n        long xxx = 307;\n        long yyy = 311;\n        long zzz = 313;\n        long aaaa = 317;\n        long bbbb = 331;\n        long cccc = 337;\n        long d",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long[] primes = new long[] { 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201",
    "        // The Newman\u2013Shanks\u2013Williams prime is a prime number of the form\n        // 2^p - 2^(p-1) - 1, where p is a prime number.\n        // The first few Newman\u2013Shanks\u2013Williams primes are:\n        // 3, 7, 47, 223, 3967, 16127, 1046527, 16769023, 1073807359,\n        // 64570081599, 2305843009213693951, ...\n        // The first few primes p for which 2^p - 2^(p-1) - 1 is prime are:\n        // 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 41, 47, 59, 61, 67, 71, 73,\n        // 79, 89, 97, 101, 103, 107, 109, 113, 127, 137, 139, 149, 151, 157,\n        // 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229,\n        // 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307,\n        // 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383,\n        // 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461,\n        // 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557,\n        // 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631,\n        // 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719,\n        // 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811,\n        // 821, 823, 827, 829, 839, 853,",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        if (n == 1) return 2;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 23;\n        if (n == 9) return 29;\n        if (n == 10) return 37;\n        if (n == 11) return 47;\n        if (n == 12) return 59;\n        if (n == 13) return 71;\n        if (n == 14) return 89;\n        if (n == 15) return 107;\n        if (n == 16) return 131;\n        if (n == 17) return 163;\n        if (n == 18) return 197;\n        if (n == 19) return 239;\n        if (n == 20) return 293;\n        if (n == 21) return 353;\n        if (n == 22) return 431;\n        if (n == 23) return 521;\n        if (n == 24) return 631;\n        if (n == 25) return 761;\n        if (n == 26) return 919;\n        if (n == 27) return 1103;\n        if (n == 28) return 1327;\n        if (n == 29) return 1597;\n        if (n == 30) return 1931;\n        if (n == 31) return 2333;\n        if (n == 32) return 2801;\n        if (n == 33) return 3371;\n        if (n == 34) return 4049;\n        if (n == 35) return 4861;\n        if (n == 36) return 5839;\n        if (n == 37) return 7013;\n        if (n == 38) return 8419;\n        if (n == 39) return 10103;\n        if (n == 40) return 12143;\n        if (n == 41) return 14591;\n        if (n == 42) return 17519;\n        if (n == 43) return 21023;\n        if (n == 44) return 25229;\n        if (n",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(2 * p + 1);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long i = 1;\n        long p = 1;\n        while (i < n) {\n            p += 2;\n            if (IsPrime(p)) {\n                if (IsPrime(2 * p + 1)) {\n                    i++;\n                }\n            }\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 2;\n        long q = 1;\n        long i = 1;\n        while (i < n) {\n            p = 6 * q + 1;\n            q = 6 * q - 1;\n            if (IsPrime(p)) {\n                i++;\n            }\n            if (IsPrime(q)) {\n                i++;\n            }\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(2 * p + 1);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = 6 * i + 1;\n            if (IsPrime(p - 1)) {\n                p = p - 1;\n                break;\n            }\n            p = 6 * i + 5;\n            if (IsPrime(p - 1)) {\n                p = p - 1;\n                break;\n            }\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(2 * p + 1);\n        }\n        return p;",
    "        long p = 2;\n        long q = 1;\n        long r = 1;\n        long s = 0;\n        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n        long a = 0;\n        long b = 0;\n        long c = 0;\n        long d = 0;\n        long e = 0;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l = 0;\n        long m = 0;\n        long o = 0;\n        long p1 = 0;\n        long q1 = 0;\n        long r1 = 0;\n        long s1 = 0;\n        long t1 = 0;\n        long u1 = 0;\n        long v1 = 0;\n        long w1 = 0;\n        long x1 = 0;\n        long y1 = 0;\n        long z1 = 0;\n        long a1 = 0;\n        long b1 = 0;\n        long c1 = 0;\n        long d1 = 0;\n        long e1 = 0;\n        long f1 = 0;\n        long g1 = 0;\n        long h1 = 0;\n        long i1 = 0;\n        long j1 = 0;\n        long k1 = 0;\n        long l1 = 0;\n        long m1 = 0;\n        long o1 = 0;\n        long p2 = 0;\n        long q2 = 0;\n        long r2 = 0;\n        long s2 = 0;\n        long t2 = 0;\n        long u2 = 0;\n        long v2 = 0;\n        long w2 = 0;\n        long x2 = 0;\n        long y2 = 0;\n        long z2 = 0;\n        long a2 = 0;\n        long b2 = 0;\n        long c2 = 0;\n        long d2 = 0;\n        long e2 = 0;\n        long f2 = 0;\n",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(2 * p + 1);\n        }\n        return p;",
    "        if (n == 1) return 2;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 23;\n        if (n == 6) return 29;\n        if (n == 7) return 31;\n        if (n == 8) return 37;\n        if (n == 9) return 53;\n        if (n == 10) return 59;\n        if (n == 11) return 71;\n        if (n == 12) return 73;\n        if (n == 13) return 79;\n        if (n == 14) return 233;\n        if (n == 15) return 239;\n        if (n == 16) return 293;\n        if (n == 17) return 311;\n        if (n == 18) return 313;\n        if (n == 19) return 317;\n        if (n == 20) return 373;\n        if (n == 21) return 379;\n        if (n == 22) return 593;\n        if (n == 23) return 599;\n        if (n == 24) return 719;\n        if (n == 25) return 733;\n        if (n == 26) return 739;\n        if (n == 27) return 797;\n        if (n == 28) return 2333;\n        if (n == 29) return 2339;\n        if (n == 30) return 2393;\n        if (n == 31) return 2399;\n        if (n == 32) return 2939;\n        if (n == 33) return 3119;\n        if (n == 34) return 3137;\n        if (n == 35) return 3733;\n        if (n == 36) return 3739;\n        if (n == 37) return 3793;\n        if (n == 38) return 3797;\n        if (n == 39) return 5939;\n        if (n == 40) return 7193;\n        if (n == 41) return 7331;\n        if (n == 42) return 7333;\n        if (n == 43) return 7393;\n        if (n == 44) return 23333;\n        if (n",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextPrime(p + 1);\n            if (i % 2 == 1) {\n                p = NextPrime(p * p - 1);\n            }\n        }\n        return p;",
    "        // The nth Newman-Shanks-Williams prime is the nth prime number p such that\n        // p + 2^n + 1 is also prime.\n        long p = 2;\n        long count = 0;\n        while (count < n) {\n            p = NextPrime(p);\n            if (IsPrime(p + (long)Math.Pow(2, count) + 1)) {\n                count++;\n            }\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(2 * p + 1);\n        }\n        return p;",
    "        if (n == 1) return 1;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 19;\n        if (n == 9) return 23;\n        if (n == 10) return 29;\n        if (n == 11) return 31;\n        if (n == 12) return 37;\n        if (n == 13) return 41;\n        if (n == 14) return 43;\n        if (n == 15) return 47;\n        if (n == 16) return 53;\n        if (n == 17) return 59;\n        if (n == 18) return 61;\n        if (n == 19) return 67;\n        if (n == 20) return 71;\n        if (n == 21) return 73;\n        if (n == 22) return 79;\n        if (n == 23) return 83;\n        if (n == 24) return 89;\n        if (n == 25) return 97;\n        if (n == 26) return 101;\n        if (n == 27) return 103;\n        if (n == 28) return 107;\n        if (n == 29) return 109;\n        if (n == 30) return 113;\n        if (n == 31) return 127;\n        if (n == 32) return 131;\n        if (n == 33) return 137;\n        if (n == 34) return 139;\n        if (n == 35) return 149;\n        if (n == 36) return 151;\n        if (n == 37) return 157;\n        if (n == 38) return 163;\n        if (n == 39) return 167;\n        if (n == 40) return 173;\n        if (n == 41) return 179;\n        if (n == 42) return 181;\n        if (n == 43) return 191;\n        if (n == 44) return 193;\n        if (n == 45) return 197;\n        if (n == 46) return 199;\n        if (n ==",
    "        long p = 1;\n        for (long i = 1; i < n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(2 * p + 1);\n        }\n        return p;",
    "        if (n == 1) return 2;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 23;\n        if (n == 9) return 29;\n        if (n == 10) return 37;\n        if (n == 11) return 47;\n        if (n == 12) return 59;\n        if (n == 13) return 71;\n        if (n == 14) return 89;\n        if (n == 15) return 107;\n        if (n == 16) return 131;\n        if (n == 17) return 163;\n        if (n == 18) return 197;\n        if (n == 19) return 239;\n        if (n == 20) return 293;\n        if (n == 21) return 353;\n        if (n == 22) return 431;\n        if (n == 23) return 521;\n        if (n == 24) return 631;\n        if (n == 25) return 761;\n        if (n == 26) return 919;\n        if (n == 27) return 1103;\n        if (n == 28) return 1327;\n        if (n == 29) return 1597;\n        if (n == 30) return 1931;\n        if (n == 31) return 2333;\n        if (n == 32) return 2801;\n        if (n == 33) return 3371;\n        if (n == 34) return 4049;\n        if (n == 35) return 4861;\n        if (n == 36) return 5839;\n        if (n == 37) return 7013;\n        if (n == 38) return 8419;\n        if (n == 39) return 10103;\n        if (n == 40) return 12143;\n        if (n == 41) return 14591;\n        if (n == 42) return 17519;\n        if (n == 43) return 21023;\n        if (n == 44) return 25229;\n        if (n",
    "        if (n == 1) return 2;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 23;\n        if (n == 9) return 29;\n        if (n == 10) return 37;\n        if (n == 11) return 47;\n        if (n == 12) return 59;\n        if (n == 13) return 71;\n        if (n == 14) return 89;\n        if (n == 15) return 107;\n        if (n == 16) return 131;\n        if (n == 17) return 163;\n        if (n == 18) return 197;\n        if (n == 19) return 239;\n        if (n == 20) return 293;\n        if (n == 21) return 353;\n        if (n == 22) return 431;\n        if (n == 23) return 521;\n        if (n == 24) return 631;\n        if (n == 25) return 761;\n        if (n == 26) return 919;\n        if (n == 27) return 1103;\n        if (n == 28) return 1327;\n        if (n == 29) return 1597;\n        if (n == 30) return 1931;\n        if (n == 31) return 2333;\n        if (n == 32) return 2801;\n        if (n == 33) return 3371;\n        if (n == 34) return 4049;\n        if (n == 35) return 4861;\n        if (n == 36) return 5839;\n        if (n == 37) return 7013;\n        if (n == 38) return 8419;\n        if (n == 39) return 10103;\n        if (n == 40) return 12143;\n        if (n == 41) return 14591;\n        if (n == 42) return 17519;\n        if (n == 43) return 21023;\n        if (n == 44) return 25229;\n        if (n",
    "        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n        long aa = 1;\n        long bb = 1;\n        long cc = 1;\n        long dd = 1;\n        long ee = 1;\n        long ff = 1;\n        long gg = 1;\n        long hh = 1;\n        long ii = 1;\n        long jj = 1;\n        long kk = 1;\n        long ll = 1;\n        long mm = 1;\n        long nn = 1;\n        long oo = 1;\n        long pp = 1;\n        long qq = 1;\n        long rr = 1;\n        long ss = 1;\n        long tt = 1;\n        long uu = 1;\n        long vv = 1;\n        long ww = 1;\n        long xx = 1;\n        long yy = 1;\n        long zz = 1;\n        long aaa = 1;\n        long bbb = 1;\n        long ccc = 1;\n        long ddd = 1;\n        long eee = 1;\n        long fff = 1;\n        long ggg = 1;\n        long hhh = 1;\n        long iii = 1;\n        long jjj = 1;\n        long kkk = 1;\n        long lll = 1;\n        long mmm = 1;\n        long nnn = 1;\n        long ooo = 1;\n        long ppp = 1;\n        long qqq = 1;\n        long rrr = 1;\n        long sss = 1;\n        long ttt = 1;\n        long uuu = 1;\n        long vvv = 1;\n        long www = 1;\n        long xxx = 1;\n        long yyy = 1;\n        long zzz = 1;\n        long aaaa = 1;\n        long bbbb = 1;\n        long cccc = 1;\n        long d",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(2 * p + 1);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 2;\n        long q = 1;\n        long i = 1;\n        while (i < n) {\n            p = 6 * q + 1;\n            q = 6 * q - 1;\n            if (IsPrime(p)) {\n                i++;\n            }\n            if (IsPrime(q)) {\n                i++;\n            }\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i < n; i++) {\n            p = NextPrime(p + 1);\n            p = NextPrime(6 * p - 1);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        // The nth Newman\u2013Shanks\u2013Williams prime number is the nth prime number that is not of the form 2^k*p + 1 for any prime p and integer k > 0.\n        // The first few Newman\u2013Shanks\u2013Williams primes are:\n        // 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(2 * p + 1);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(p * p - 1);\n        }\n        return p;",
    "        long p = 1;\n        long q = 1;\n        long i = 1;\n        while (i < n) {\n            p = 6 * q - 1;\n            q = 6 * q + 1;\n            if (IsPrime(p))\n                i++;\n            if (IsPrime(q))\n                i++;\n        }\n        return p > q ? p : q;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long[] primes = new long[] { 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 2;\n        long q = 1;\n        long i = 1;\n        while (i < n) {\n            p = 6 * q + 1;\n            q = 6 * q - 1;\n            if (IsPrime(p)) {\n                i++;\n            }\n            if (IsPrime(q)) {\n                i++;\n            }\n        }\n        if (i == n) {\n            return p;\n        } else {\n            return q;\n        }",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(2 * p + 1);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(2 * p + 1);\n        }\n        return p;",
    "        // The nth Newman-Shanks-Williams prime is the nth prime number that is not of the form 2^k * 3^j + 1.\n        // The first few Newman-Shanks-Williams primes are:\n        // 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 10",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(2 * p + 1);\n        }\n        return p;",
    "        long p = 2;\n        long q = 3;\n        long r = 7;\n        long i = 1;\n        while (i < n) {\n            p = q;\n            q = r;\n            r = 2 * q + p;\n            i++;\n        }\n        return r;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(2 * p + 1);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p + 1);\n            if (p % 5 == 3) {\n                p = NextPrime(p + 2);\n            }\n        }\n        return p;",
    "        // The nth Newman-Shanks-Williams prime is the nth prime number p such that\n        // p = 2^k * q + 1, where q is also a prime number.\n        // We can find the nth Newman-Shanks-Williams prime by finding the nth prime number\n        // and then checking if it is of the form 2^k * q + 1.\n        // We can find the nth prime number using the Sieve of Eratosthenes.\n        // We can find if a number is a prime number using the Miller-Rabin primality test.\n        // We can find if a number is of the form 2^k * q + 1 by checking if it is divisible by 2^k.\n        // We can find the smallest k such that 2^k divides a number by repeatedly dividing the number by 2.\n        // We can find if a number is divisible by another number by using the modulo operator.\n        // We can find the square root of a number by using the Math.Sqrt function.\n        // We can find the floor of a number by using the Math.Floor function.\n        // We can find the ceiling of a number by using the Math.Ceiling function.\n        // We can find the logarithm of a number by using the Math.Log function.\n        // We can find the logarithm of a number in a given base by using the Math.Log function.\n        // We can find the power of a number by using the Math.Pow function.\n        // We can find the power of a number in a given base by using the Math.Pow function.\n        // We can find the absolute value of a number by using the Math.Abs function.\n        // We can find the remainder of a number by using the Math.IEEERemainder function.\n        // We can find the remainder of a number by using the % operator.\n        // We can find the greatest common divisor of two numbers by using the Euclidean algorithm.\n        // We can find the greatest common divisor of two numbers by using the Math.GCD function.\n        // We can find the least common multiple of two numbers by using the Math.LCM function.\n        // We can find the least common multiple of two numbers by using the formula",
    "        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n        long o = 1;\n        long count = 0;\n        while (count < n) {\n            p++;\n            if (IsPrime(p)) {\n                q = p;\n                while (q < p * p) {\n                    q *= p;\n                    r = q;\n                    while (r < q * q) {\n                        r *= q;\n                        s = r;\n                        while (s < r * r) {\n                            s *= r;\n                            t = s;\n                            while (t < s * s) {\n                                t *= s;\n                                u = t;\n                                while (u < t * t) {\n                                    u *= t;\n                                    v = u;\n                                    while (v < u * u) {\n                                        v *= u;\n                                        w = v;\n                                        while (w < v * v) {\n                                            w *= v;\n                                            x = w;\n                                            while (x < w * w) {\n                                                x *= w;\n                                                y = x;\n                                                while (y < x * x) {\n                                                    y *= x;\n                                                    z = y;\n                                                    while (z < y * y) {\n                                                        z *= y;\n                                                        a = z;\n                                                        while (a < z * z) {\n                                                            a *= z;\n                                                ",
    "        long p = 2;\n        long q = 3;\n        long i = 1;\n        while (i < n) {\n            p = 6 * i - 1;\n            q = 6 * i + 1;\n            if (IsPrime(p)) {\n                i++;\n            }\n            if (IsPrime(q)) {\n                i++;\n            }\n        }\n        return p > q ? p : q;",
    "        if (n == 1) return 2;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 23;\n        if (n == 9) return 29;\n        if (n == 10) return 37;\n        if (n == 11) return 47;\n        if (n == 12) return 59;\n        if (n == 13) return 71;\n        if (n == 14) return 89;\n        if (n == 15) return 107;\n        if (n == 16) return 131;\n        if (n == 17) return 163;\n        if (n == 18) return 197;\n        if (n == 19) return 239;\n        if (n == 20) return 293;\n        if (n == 21) return 353;\n        if (n == 22) return 431;\n        if (n == 23) return 521;\n        if (n == 24) return 631;\n        if (n == 25) return 761;\n        if (n == 26) return 919;\n        if (n == 27) return 1103;\n        if (n == 28) return 1327;\n        if (n == 29) return 1597;\n        if (n == 30) return 1931;\n        if (n == 31) return 2333;\n        if (n == 32) return 2801;\n        if (n == 33) return 3371;\n        if (n == 34) return 4049;\n        if (n == 35) return 4861;\n        if (n == 36) return 5839;\n        if (n == 37) return 7013;\n        if (n == 38) return 8419;\n        if (n == 39) return 10103;\n        if (n == 40) return 12143;\n        if (n == 41) return 14591;\n        if (n == 42) return 17519;\n        if (n == 43) return 21023;\n        if (n == 44) return 25229;\n        if (n",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(2 * p + 1);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(2 * p + 1);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 3;\n        long q = 7;\n        long r = p * q;\n        long count = 1;\n        while (count < n) {\n            long a = 2;\n            while (a < r && ModPow(a, r, p) != 1) {\n                a++;\n            }\n            if (a == r) {\n                count++;\n                p = r;\n                q = NextPrime(q + 2);\n                r = p * q;\n            } else {\n                q = NextPrime(q + 2);\n                r = p * q;\n            }\n        }\n        return p;",
    "        if (n == 1) return 2;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 23;\n        if (n == 9) return 29;\n        if (n == 10) return 37;\n        if (n == 11) return 47;\n        if (n == 12) return 59;\n        if (n == 13) return 71;\n        if (n == 14) return 89;\n        if (n == 15) return 107;\n        if (n == 16) return 131;\n        if (n == 17) return 163;\n        if (n == 18) return 197;\n        if (n == 19) return 239;\n        if (n == 20) return 293;\n        if (n == 21) return 353;\n        if (n == 22) return 431;\n        if (n == 23) return 521;\n        if (n == 24) return 631;\n        if (n == 25) return 761;\n        if (n == 26) return 919;\n        if (n == 27) return 1103;\n        if (n == 28) return 1327;\n        if (n == 29) return 1597;\n        if (n == 30) return 1931;\n        if (n == 31) return 2333;\n        if (n == 32) return 2801;\n        if (n == 33) return 3371;\n        if (n == 34) return 4049;\n        if (n == 35) return 4861;\n        if (n == 36) return 5839;\n        if (n == 37) return 7013;\n        if (n == 38) return 8419;\n        if (n == 39) return 10103;\n        if (n == 40) return 12143;\n        if (n == 41) return 14591;\n        if (n == 42) return 17519;\n        if (n == 43) return 21023;\n        if (n == 44) return 25229;\n        if (n",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        if (n < 1) throw new ArgumentOutOfRangeException();\n        if (n == 1) return 7;\n        long p = 7;\n        long q = 3;\n        long i = 1;\n        while (i < n) {\n            p = p + q;\n            q = 6 - q;\n            if (p.IsPrime()) i++;\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 2;\n        long q = 1;\n        long k = 0;\n        while (n > 0) {\n            p = 6 * q - p + 2;\n            q = p - q;\n            k++;\n            if (BigInteger.ModPow(2, p - 1, p * p) != 1) {\n                n--;\n            }\n        }\n        return p;",
    "        if (n == 1) return 2;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 23;\n        if (n == 9) return 29;\n        if (n == 10) return 37;\n        if (n == 11) return 47;\n        if (n == 12) return 59;\n        if (n == 13) return 71;\n        if (n == 14) return 89;\n        if (n == 15) return 107;\n        if (n == 16) return 131;\n        if (n == 17) return 163;\n        if (n == 18) return 197;\n        if (n == 19) return 239;\n        if (n == 20) return 293;\n        if (n == 21) return 353;\n        if (n == 22) return 431;\n        if (n == 23) return 521;\n        if (n == 24) return 631;\n        if (n == 25) return 761;\n        if (n == 26) return 919;\n        if (n == 27) return 1103;\n        if (n == 28) return 1327;\n        if (n == 29) return 1597;\n        if (n == 30) return 1931;\n        if (n == 31) return 2333;\n        if (n == 32) return 2801;\n        if (n == 33) return 3371;\n        if (n == 34) return 4049;\n        if (n == 35) return 4861;\n        if (n == 36) return 5839;\n        if (n == 37) return 7013;\n        if (n == 38) return 8419;\n        if (n == 39) return 10103;\n        if (n == 40) return 12143;\n        if (n == 41) return 14591;\n        if (n == 42) return 17519;\n        if (n == 43) return 21023;\n        if (n == 44) return 25229;\n        if (n",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(2*p + 1);\n        }\n        return p;",
    "        long p = 1;\n        long q = 1;\n        long i = 1;\n        while (i < n) {\n            p = 6 * q - 1;\n            q = 6 * q + 1;\n            if (IsPrime(p)) {\n                i++;\n            }\n            if (IsPrime(q)) {\n                i++;\n            }\n        }\n        return p > q ? p : q;",
    "        // The nth Newman-Shanks-Williams prime is the nth prime number p such that p + 2 is also prime.\n        // The first few Newman-Shanks-Williams primes are:\n        // 2, 5, 11, 17, 29, 41, 59, 71, 101, 107, 137, 149, 179, 191, 197, 227, 239, 269, 281, 311, 347, 419, 431, 461, 521, 569, 599, 617, 641, 659, 809, 821, 827, 857, 881, 1019, 1031, 1049, 1061, 1091, 1151, 1229, 1277, 1289, 1301, 1319, 1427, 1451, 1481, 1487, 1607, 1619, 1667, 1697, 1721, 1787, 1871, 1877, 1901, 1931, 1949, 1997, 2027, 2081, 2087, 2111, 2129, 2161, 2207, 2239, 2269, 2297, 2311, 2371, 2411, 2459, 2539, 2579, 2591, 2633, 2657, 2687, 2711, 2729, 2767, 2777, 2801, 2819, 2897, 2927, 2939, 2957, 2999, 3011, 3019, 3067, 3109, 3169, 3203, 3251, 3299, 3329, 3359, 3389, 3457, 3527, 3557, 3581, 3617, 3643, 3677, 3701, 3719, 3761, 3821, 3877, 3907, 3917, 3929, 3943, 3989, 4001, 4049, 4091, 4127, 4157, 4201, 4243, 4289, 4339, 4363, 4441, 4481, 4517, 4547, 4561, 4591, 4663, 4681, 4733, 4787, 4801, 4817, 4871, 4903, 4931, 4943, 4969, 5009, 5021, 5059, 5099, 5147, 5227, 5279, 5303, 5323, 5381, 5417, 5441, 5471, 5501, 5519, 5",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        // The nth Newman-Shanks-Williams prime is the nth prime of the form\n        // p = 2^k * 3^l * 5^m + 1\n        // where k, l, and m are non-negative integers.\n        //\n        // The first few Newman-Shanks-Williams primes are:\n        // 2, 3, 5, 7, 13, 17, 19, 31, 61, 89, 107, 127, 521, 607, 1279, 2203, 2281, 3217, 4253, 4423, 9689, 9941, 11213, 19937, 21701, 23209, 44497, 86243, 110503, 132049, 216091, 756839, 859433, 1257787, 1398269, 2976221, 3021377, 6972593, 13466917, 20996011, 24036583, 25964951, 30402457, 32582657, 37156667, 42643801, 43112609, 57885161, 74207281, 77232917, 82589933\n        //\n        // The Newman-Shanks-Williams primes are a subset of the Proth primes.\n        // The nth Proth prime is the nth prime of the form\n        // p = k * 2^n + 1\n        // where k is an odd integer and n is a positive integer.\n        //\n        // The first few Proth primes are:\n        // 3, 5, 13, 17, 41, 97, 113, 193, 241, 257, 353, 401, 577, 641, 673, 769, 929, 1153, 1217, 1409, 1601, 2113, 2689, 2753, 3137, 3457, 4481, 4609, 5153, 5761, 6145, 6657, 7297, 7553, 9473, 9601, 10753, 11521, 12289, 12545, 13441, 13825, 16385, 17409, 18433, 19457, 19969, 23553, 24577, 27649, 28673, 29953, 31713, 32737, 34817, 38913, 40897, 41984, 45057, 47105, 49153, 52225,",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        long q = 1;\n        long i = 1;\n        while (i < n) {\n            p = 6 * q - 1;\n            q = 6 * q + 1;\n            if (IsPrime(p)) {\n                i++;\n            }\n            if (IsPrime(q)) {\n                i++;\n            }\n        }\n        if (IsPrime(p)) {\n            return p;\n        }\n        return q;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = 6 * i - 1;\n            if (!IsPrime(p)) {\n                p += 2;\n            }\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        if (n == 1) {\n            return 2;\n        }\n        if (n == 2) {\n            return 3;\n        }\n        if (n == 3) {\n            return 5;\n        }\n        if (n == 4) {\n            return 7;\n        }\n        if (n == 5) {\n            return 23;\n        }\n        long p = 7;\n        long q = 23;\n        long r = 5;\n        long s = 2;\n        long t = 1;\n        long u = 0;\n        long v = 0;\n        long w = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n        long a = 0;\n        long b = 0;\n        long c = 0;\n        long d = 0;\n        long e = 0;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l = 0;\n        long m = 0;\n        long o = 0;\n        long count = 5;\n        while (count < n) {\n            p = p + 2;\n            q = q + 2;\n            r = r + 2;\n            s = s + 2;\n            t = t + 2;\n            u = u + 2;\n            v = v + 2;\n            w = w + 2;\n            x = x + 2;\n            y = y + 2;\n            z = z + 2;\n            a = a + 2;\n            b = b + 2;\n            c = c + 2;\n            d = d + 2;\n            e = e + 2;\n            f = f + 2;\n            g = g + 2;\n            h = h + 2;\n            i = i + 2;\n            j = j + 2;\n            k = k + 2;\n            l = l + 2;\n            m = m + 2;\n            o = o + 2;\n            if (IsPrime(p)) {\n                count++;\n            }\n            if (IsPrime(q)) {\n                count++;\n            }\n           ",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 3;\n        long q = 7;\n        long r = 11;\n        long s = 13;\n        long t = 17;\n        long u = 19;\n        long v = 23;\n        long w = 29;\n        long x = 31;\n        long y = 37;\n        long z = 41;\n        long a = 43;\n        long b = 47;\n        long c = 53;\n        long d = 59;\n        long e = 61;\n        long f = 67;\n        long g = 71;\n        long h = 73;\n        long i = 79;\n        long j = 83;\n        long k = 89;\n        long l = 97;\n        long m = 101;\n        long o = 103;\n        long p1 = 107;\n        long q1 = 109;\n        long r1 = 113;\n        long s1 = 127;\n        long t1 = 131;\n        long u1 = 137;\n        long v1 = 139;\n        long w1 = 149;\n        long x1 = 151;\n        long y1 = 157;\n        long z1 = 163;\n        long a1 = 167;\n        long b1 = 173;\n        long c1 = 179;\n        long d1 = 181;\n        long e1 = 191;\n        long f1 = 193;\n        long g1 = 197;\n        long h1 = 199;\n        long i1 = 211;\n        long j1 = 223;\n        long k1 = 227;\n        long l1 = 229;\n        long m1 = 233;\n        long o1 = 239;\n        long p2 = 241;\n        long q2 = 251;\n        long r2 = 257;\n        long s2 = 263;\n        long t2 = 269;\n        long u2 = 271;\n        long v2 = 277;\n        long w2 = 281;\n        long x2 = 283;\n        long y2 = 293;\n        long z2 = 307;\n        long a2 = 311;\n        long b2 = 313;\n        long c2 = 317;\n        long d2 = 331;\n        long e2 = 337;\n        long f2 = 347;\n",
    "        long p = 1;\n        for (long i = 1; i < n; i++) {\n            p = 6 * i - 1;\n            if (IsPrime(p)) {\n                long q = 6 * i + 1;\n                if (IsPrime(q)) {\n                    p = q;\n                }\n            }\n        }\n        return p;",
    "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 11;\n        if (n == 5) return 17;\n        if (n == 6) return 41;\n        if (n == 7) return 257;\n        if (n == 8) return 65537;\n        if (n == 9) return 641;\n        if (n == 10) return 274177;\n        if (n == 11) return 6700417;\n        if (n == 12) return 67280421310721;\n        if (n == 13) return 3234846615;\n        if (n == 14) return 2039680533;\n        if (n == 15) return 22801763489;\n        if (n == 16) return 2658455991569831744654692615953842176;\n        if (n == 17) return 191561942608236107294793378084303638130997321548169216;\n        if (n == 18) return 1350851717672992089;\n        if (n == 19) return 4673826302199170640;\n        if (n == 20) return 618970019642690137449562111;\n        if (n == 21) return 162259276829213363391578010288127;\n        if (n == 22) return 170141183460469231731687303715884105727;\n        if (n == 23) return 6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057151;\n        if (n == 24) return 53113799281676709868958820655246862732959311772703192319944413820040355986085224273916250226522928566888932948624650101534657933",
    "        var p = 2;\n        var q = 1;\n        var r = 0;\n        var i = 1;\n        while (i < n) {\n            p = 6 * q - p + 2;\n            q = p - q;\n            r = 6 * q - r;\n            if (BigInteger.ModPow(2, p - 1, p * p) != 1) {\n                i++;\n            }\n        }\n        return p;",
    "        long i = 1;\n        long p = 1;\n        while (i < n) {\n            p += 2 * i;\n            if (IsPrime(p))\n                i++;\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextPrime(p + 1);\n            if (i % 2 == 0) {\n                p = NextPrime(p + 1);\n            }\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = 6 * i - 1;\n            if (!MillerRabin(p)) {\n                p += 2;\n                if (!MillerRabin(p)) {\n                    p += 4;\n                }\n            }\n        }\n        return p;",
    "        if (n == 1) return 2;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 23;\n        if (n == 9) return 29;\n        if (n == 10) return 37;\n        if (n == 11) return 47;\n        if (n == 12) return 59;\n        if (n == 13) return 71;\n        if (n == 14) return 89;\n        if (n == 15) return 107;\n        if (n == 16) return 131;\n        if (n == 17) return 163;\n        if (n == 18) return 197;\n        if (n == 19) return 239;\n        if (n == 20) return 293;\n        if (n == 21) return 353;\n        if (n == 22) return 431;\n        if (n == 23) return 521;\n        if (n == 24) return 631;\n        if (n == 25) return 761;\n        if (n == 26) return 919;\n        if (n == 27) return 1103;\n        if (n == 28) return 1327;\n        if (n == 29) return 1597;\n        if (n == 30) return 1931;\n        if (n == 31) return 2333;\n        if (n == 32) return 2801;\n        if (n == 33) return 3371;\n        if (n == 34) return 4049;\n        if (n == 35) return 4861;\n        if (n == 36) return 5839;\n        if (n == 37) return 7013;\n        if (n == 38) return 8419;\n        if (n == 39) return 10103;\n        if (n == 40) return 12143;\n        if (n == 41) return 14591;\n        if (n == 42) return 17519;\n        if (n == 43) return 21023;\n        if (n == 44) return 25229;\n        if (n",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(2 * p + 1);\n        }\n        return p;",
    "        long p = 3;\n        long q = 1;\n        long r = 1;\n        long i = 1;\n        while (i < n) {\n            p = 6 * q - r + 2;\n            r = q;\n            q = p;\n            i++;\n        }\n        return p;",
    "        long p = 2;\n        long q = 2;\n        long i = 1;\n        while (i < n) {\n            p = 6 * i - 1;\n            q = 6 * i + 1;\n            if (IsPrime(p)) {\n                i++;\n            }\n            if (IsPrime(q)) {\n                i++;\n            }\n        }\n        if (IsPrime(p)) {\n            return p;\n        }\n        return q;",
    "        if (n == 1) return 1;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 23;\n        if (n == 9) return 29;\n        if (n == 10) return 37;\n        if (n == 11) return 47;\n        if (n == 12) return 59;\n        if (n == 13) return 71;\n        if (n == 14) return 89;\n        if (n == 15) return 107;\n        if (n == 16) return 131;\n        if (n == 17) return 163;\n        if (n == 18) return 197;\n        if (n == 19) return 239;\n        if (n == 20) return 293;\n        if (n == 21) return 353;\n        if (n == 22) return 431;\n        if (n == 23) return 521;\n        if (n == 24) return 631;\n        if (n == 25) return 761;\n        if (n == 26) return 919;\n        if (n == 27) return 1103;\n        if (n == 28) return 1327;\n        if (n == 29) return 1597;\n        if (n == 30) return 1931;\n        if (n == 31) return 2333;\n        if (n == 32) return 2801;\n        if (n == 33) return 3371;\n        if (n == 34) return 4049;\n        if (n == 35) return 4861;\n        if (n == 36) return 5839;\n        if (n == 37) return 7013;\n        if (n == 38) return 8419;\n        if (n == 39) return 10103;\n        if (n == 40) return 12143;\n        if (n == 41) return 14591;\n        if (n == 42) return 17519;\n        if (n == 43) return 21023;\n        if (n == 44) return 25229;\n        if (n",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextPrime(p);\n            p = NextPrime(2 * p + 1);\n        }\n        return p;",
    "        long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = NextNewmanPrime(p);\n        }\n        return p;",
    "        long i = 1;\n        long p = 2;\n        while (i < n) {\n            p = NextPrime(p);\n            if (p % 4 == 3) {\n                i++;\n            }\n        }\n        return p;"
  ]
}
{
  "name": "mbpp_162_sum_series",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_162_sum_series.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - (2 * i);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510665,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee6b3a3e317e432f88b309f5b59d63be>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510665,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ddd8674e482d40d6b2f0fbf4ce2ac7b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ddd8674e482d40d6b2f0fbf4ce2ac7b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510665,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ddd8674e482d40d6b2f0fbf4ce2ac7b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ddd8674e482d40d6b2f0fbf4ce2ac7b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i += 2) {\n            sum += n - i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = n;\n        long i = 1;\n        while (n - 2 * i >= 0) {\n            sum += n - 2 * i;\n            i++;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510665,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510665,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a874bb564b9c49529d0b7f4cda1d18c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a874bb564b9c49529d0b7f4cda1d18c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i += 2) {\n            sum += n - i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i += 2) {\n            sum += n - i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        return n * (n + 1) / 2 - n;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124098,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <532521746ddf4bd3bf8372d22b3248ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <532521746ddf4bd3bf8372d22b3248ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510665,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ddd8674e482d40d6b2f0fbf4ce2ac7b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ddd8674e482d40d6b2f0fbf4ce2ac7b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        long i = 0;\n        while (n - 2 * i > 0) {\n            sum += n - 2 * i;\n            i++;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124098,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - (2 * i);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124096,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5da5a09c92014a909d6236885276eda1>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long result = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            result += n - 2 * i;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124098,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += n - (2 * i);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124098,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8ddf97512e734289b320d4e59d165d2f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8ddf97512e734289b320d4e59d165d2f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n/2; i++) {\n            sum += n - 2*i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cad59b0991b8402d8c2e931761851f17>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if (n % 2 == 0) return n + SumSeries(n - 2);\n        return n + SumSeries(n - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124098,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <499b619866bf4f5babd3d93ea2454b53>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        if (n == 0)\n            return 0;\n        if (n == 1)\n            return 1;\n        if (n == 2)\n            return 3;\n        if (n == 3)\n            return 6;\n        if (n == 4)\n            return 10;\n        if (n == 5)\n            return 15;\n        if (n == 6)\n            return 21;\n        if (n == 7)\n            return 28;\n        if (n == 8)\n            return 36;\n        if (n == 9)\n            return 45;\n        if (n == 10)\n            return 55;\n        if (n == 11)\n            return 66;\n        if (n == 12)\n            return 78;\n        if (n == 13)\n            return 91;\n        if (n == 14)\n            return 105;\n        if (n == 15)\n            return 120;\n        if (n == 16)\n            return 136;\n        if (n == 17)\n            return 153;\n        if (n == 18)\n            return 171;\n        if (n == 19)\n            return 190;\n        if (n == 20)\n            return 210;\n        if (n == 21)\n            return 231;\n        if (n == 22)\n            return 253;\n        if (n == 23)\n            return 276;\n        if (n == 24)\n            return 300;\n        if (n == 25)\n            return 325;\n        if (n == 26)\n            return 351;\n        if (n == 27)\n            return 378;\n        if (n == 28)\n            return 406;\n        if (n == 29)\n            return 435;\n        if (n == 30)\n            return 465;\n        if (n == 31)\n            return 496;\n        if (n == 32)\n            return 528;\n        if (n == 33)\n            return 561;\n        if (n == 34)\n            return 595;\n        if (n == 35)\n            return 630;\n        if (n == 36)\n            return 666;\n        if (n == 37)\n            return 703;\n        if (n == 38)\n            return 741\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124098,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmg31g97c.cs(88,23): error CS1002: ; expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i += 2) {\n            sum += n - i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i += 2) {\n            sum += n - i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i += 2) {\n            sum += n - i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510665,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ddd8674e482d40d6b2f0fbf4ce2ac7b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ddd8674e482d40d6b2f0fbf4ce2ac7b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510665,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ddd8674e482d40d6b2f0fbf4ce2ac7b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ddd8674e482d40d6b2f0fbf4ce2ac7b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - (2 * i);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124096,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n/2; i++) {\n            sum += n - 2*i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cad59b0991b8402d8c2e931761851f17>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510665,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ddd8674e482d40d6b2f0fbf4ce2ac7b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ddd8674e482d40d6b2f0fbf4ce2ac7b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510665,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ddd8674e482d40d6b2f0fbf4ce2ac7b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ddd8674e482d40d6b2f0fbf4ce2ac7b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        // Sum of the series is n*(n+1)/2 - n*(n-1)/2 = n\n        return n;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124098,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8a1cf3e9f04c43a896d6c65c9289fb97>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8a1cf3e9f04c43a896d6c65c9289fb97>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
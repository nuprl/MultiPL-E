{
  "name": "mbpp_754_extract_index_list",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_754_extract_index_list.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        var minLength = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < minLength; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprzy3_f2w.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        var minLength = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < minLength; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprzy3_f2w.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++)\n        {\n            if (l1[i] == l2[i] && l2[i] == l3[i])\n            {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6etr1as_.cs(25,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6etr1as_.cs(26,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6etr1as_.cs(27,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        var minLength = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < minLength; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprzy3_f2w.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l1[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123080,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpc_ccxchw.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpc_ccxchw.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpc_ccxchw.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        var minLength = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < minLength; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprzy3_f2w.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var res = new List<long>();\n        var min = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < min; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                res.Add(l1[i]);\n            }\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123082,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6g5fxjsq.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6g5fxjsq.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6g5fxjsq.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l1[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123080,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpc_ccxchw.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpc_ccxchw.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpc_ccxchw.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        var minLength = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < minLength; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprzy3_f2w.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var common = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                common.Add(l1[i]);\n            }\n        }\n        return common;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123080,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpppf6n7my.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpppf6n7my.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpppf6n7my.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        int i = 0;\n        while (i < l1.Count && i < l2.Count && i < l3.Count) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n            i++;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfknbxc44.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfknbxc44.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfknbxc44.cs(24,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        var minLength = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < minLength; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprzy3_f2w.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        // Your code goes here.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123080,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp37cd7gkz.cs(15,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp37cd7gkz.cs(16,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp37cd7gkz.cs(17,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        var min = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < min; i++) {\n            if (l1[i] == l2[i] && l1[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123082,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbe984jmk.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbe984jmk.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbe984jmk.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        var minLength = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < minLength; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprzy3_f2w.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        var min = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < min; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123080,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmgvbzeva.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpmgvbzeva.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpmgvbzeva.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        var minLength = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < minLength; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprzy3_f2w.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        var minLength = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < minLength; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprzy3_f2w.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        // Your code here\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123079,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6ud5mjfj.cs(15,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6ud5mjfj.cs(16,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6ud5mjfj.cs(17,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        // Your code here\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123079,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6ud5mjfj.cs(15,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6ud5mjfj.cs(16,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6ud5mjfj.cs(17,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        // Your code goes here\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++)\n        {\n            if (l1[i] == l2[i] && l1[i] == l3[i])\n            {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123082,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb7f0sf7z.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpb7f0sf7z.cs(24,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpb7f0sf7z.cs(25,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        var minLength = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < minLength; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprzy3_f2w.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> common = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                common.Add(l1[i]);\n            }\n        }\n        return common;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7o78e3gy.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7o78e3gy.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7o78e3gy.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        int i = 0;\n        while (i < l1.Count && i < l2.Count && i < l3.Count) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n            i++;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfknbxc44.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfknbxc44.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfknbxc44.cs(24,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l1[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123080,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpc_ccxchw.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpc_ccxchw.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpc_ccxchw.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        var minLength = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < minLength; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprzy3_f2w.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        var minLength = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < minLength; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprzy3_f2w.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        var minLength = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < minLength; i++) {\n            if (l1[i] == l2[i] && l1[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123080,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2fb49s4a.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp2fb49s4a.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp2fb49s4a.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        // TODO: Write your code here\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123081,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptywy14os.cs(15,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptywy14os.cs(16,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptywy14os.cs(17,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        var minLength = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < minLength; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprzy3_f2w.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        var minLength = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < minLength; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprzy3_f2w.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        var minLength = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < minLength; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprzy3_f2w.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        // Your code here\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123079,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6ud5mjfj.cs(15,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6ud5mjfj.cs(16,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6ud5mjfj.cs(17,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        // Your code here\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123079,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6ud5mjfj.cs(15,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6ud5mjfj.cs(16,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6ud5mjfj.cs(17,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < Math.Min(l1.Count, l2.Count); i++) {\n            if (l1[i] == l2[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123082,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprbbw08g9.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprbbw08g9.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprbbw08g9.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l1[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzsg3aqzo.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpzsg3aqzo.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpzsg3aqzo.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        int i = 0;\n        while (i < l1.Count && i < l2.Count && i < l3.Count) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n            i++;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfknbxc44.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfknbxc44.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfknbxc44.cs(24,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        var minLength = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < minLength; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprzy3_f2w.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        int i = 0;\n        while (i < l1.Count && i < l2.Count && i < l3.Count) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n            i++;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfknbxc44.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfknbxc44.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfknbxc44.cs(24,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        int i = 0;\n        while (i < l1.Count && i < l2.Count && i < l3.Count) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n            i++;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfknbxc44.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfknbxc44.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfknbxc44.cs(24,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        int i = 0;\n        while (i < l1.Count && i < l2.Count && i < l3.Count) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n            i++;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfknbxc44.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfknbxc44.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfknbxc44.cs(24,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l1[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzsg3aqzo.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpzsg3aqzo.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpzsg3aqzo.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        int i = 0;\n        while (i < l1.Count && i < l2.Count && i < l3.Count) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n            i++;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfknbxc44.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfknbxc44.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfknbxc44.cs(24,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        var minLength = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < minLength; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprzy3_f2w.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        var minLength = Math.Min(Math.Min(l1.Count, l2.Count), l3.Count);\n        for (int i = 0; i < minLength; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123080,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpj7cl3k78.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpj7cl3k78.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpj7cl3k78.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (i < l2.Count && i < l3.Count && l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123082,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp943cwfm7.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp943cwfm7.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp943cwfm7.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        var minLength = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < minLength; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprzy3_f2w.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        var minLength = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < minLength; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprzy3_f2w.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        int i = 0;\n        while (i < l1.Count && i < l2.Count && i < l3.Count) {\n            if (l1[i] == l2[i] && l1[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n            i++;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123082,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjqptwf2j.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpjqptwf2j.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpjqptwf2j.cs(24,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        int i = 0;\n        while (i < l1.Count && i < l2.Count && i < l3.Count) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n            i++;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfknbxc44.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfknbxc44.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfknbxc44.cs(24,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < Math.Min(l1.Count, l2.Count); i++) {\n            if (i < l3.Count && l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123080,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdu4xftx7.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdu4xftx7.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdu4xftx7.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        // TODO: Implement me\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123081,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg7aj2kcn.cs(15,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpg7aj2kcn.cs(16,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpg7aj2kcn.cs(17,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        var minLength = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < minLength; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprzy3_f2w.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l1[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzsg3aqzo.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpzsg3aqzo.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpzsg3aqzo.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        // TODO: Implement this function\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfvjx2_64.cs(15,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfvjx2_64.cs(16,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfvjx2_64.cs(17,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var l = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                l.Add(l1[i]);\n            }\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123082,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpppc8jxyc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpppc8jxyc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpppc8jxyc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        int i = 0;\n        while (i < l1.Count && i < l2.Count && i < l3.Count) {\n            if (l1[i] == l2[i] && l1[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n            i++;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123082,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjqptwf2j.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpjqptwf2j.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpjqptwf2j.cs(24,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        int i = 0;\n        while (i < l1.Count && i < l2.Count && i < l3.Count) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n            i++;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfknbxc44.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfknbxc44.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfknbxc44.cs(24,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var common = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                common.Add(l1[i]);\n            }\n        }\n        return common;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123080,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpppf6n7my.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpppf6n7my.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpppf6n7my.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        // TODO: Implement this function\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfvjx2_64.cs(15,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfvjx2_64.cs(16,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfvjx2_64.cs(17,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < Math.Min(l1.Count, l2.Count); i++) {\n            if (i < l3.Count && l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123080,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdu4xftx7.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdu4xftx7.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdu4xftx7.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        int i = 0;\n        while (i < l1.Count && i < l2.Count && i < l3.Count) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n            i++;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfknbxc44.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfknbxc44.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfknbxc44.cs(24,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (i < l2.Count && i < l3.Count) {\n                if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                    result.Add(l1[i]);\n                }\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123082,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6r31ai1r.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6r31ai1r.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6r31ai1r.cs(24,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        // TODO: Write code here\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123081,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx918a9zq.cs(15,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpx918a9zq.cs(16,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpx918a9zq.cs(17,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l1[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123080,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpc_ccxchw.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpc_ccxchw.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpc_ccxchw.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        // Your code goes here\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123079,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_b9l9v36.cs(15,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp_b9l9v36.cs(16,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp_b9l9v36.cs(17,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        int i = 0;\n        while (i < l1.Count && i < l2.Count && i < l3.Count) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n            i++;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfknbxc44.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfknbxc44.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfknbxc44.cs(24,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        var minLength = Math.Min(l1.Count, Math.Min(l2.Count, l3.Count));\n        for (int i = 0; i < minLength; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprzy3_f2w.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprzy3_f2w.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        List<long> result = new List<long>();\n        int i = 0;\n        while (i < l1.Count && i < l2.Count && i < l3.Count) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n            i++;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123080,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvqw_f_c_.cs(25,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvqw_f_c_.cs(26,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvqw_f_c_.cs(27,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (i < l2.Count && i < l3.Count && l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123082,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp943cwfm7.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp943cwfm7.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp943cwfm7.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        int i = 0;\n        while (i < l1.Count && i < l2.Count && i < l3.Count) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n            i++;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfknbxc44.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfknbxc44.cs(23,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfknbxc44.cs(24,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        // Write your code here\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123081,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpahu_10ej.cs(15,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpahu_10ej.cs(16,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpahu_10ej.cs(17,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        // Your code goes here\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1666123079,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_b9l9v36.cs(15,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp_b9l9v36.cs(16,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp_b9l9v36.cs(17,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        var result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1p3pzsc.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp1p3pzsc.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l1[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzsg3aqzo.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpzsg3aqzo.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpzsg3aqzo.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    public static object ExtractIndexList(List<long> l1, List<long> l2, List<long> l3) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < l1.Count; i++) {\n            if (l1[i] == l2[i] && l2[i] == l3[i]) {\n                result.Add(l1[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)7L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)5L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)6L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)1L, (long)3L, (long)4L, (long)6L, (long)5L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object(new long[]{(long)1L, (long)5L}))));\n    Debug.Assert(ExtractIndexList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)6L, (long)6L, (long)6L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)7L}))).Equals((new object())));\n    }\n\n}\n",
      "timestamp": 1665510019,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnqh9v8p.cs(20,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(21,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbnqh9v8p.cs(22,347): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
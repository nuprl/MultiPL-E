{
  "name": "mbpp_644_reverse_Array_Upto_K",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_644_reverse_Array_Upto_K.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < input.Count; i++) {\n            if (i < k) {\n                output.Insert(0, input[i]);\n            } else {\n                output.Add(input[i]);\n            }\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f940a99ca0f24472839d3cfad91662bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f940a99ca0f24472839d3cfad91662bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < input.Count; i++) {\n            if (i < k) {\n                output.Insert(0, input[i]);\n            } else {\n                output.Add(input[i]);\n            }\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f940a99ca0f24472839d3cfad91662bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f940a99ca0f24472839d3cfad91662bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < input.Count; i++) {\n            if (i < k) {\n                result.Insert(0, input[i]);\n            } else {\n                result.Add(input[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d7f29b6260464d5db01928c68b8220e2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d7f29b6260464d5db01928c68b8220e2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - 1 - (int)i]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ad3f0f83bfe4cfcb38c4aadc1244ff7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ad3f0f83bfe4cfcb38c4aadc1244ff7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[i]);\n        }\n        output.Reverse();\n        for (int i = k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5ip0zn1a.cs(16,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (long i = 0; i < k; i++) {\n            result.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            result.Add(input[(int)i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0ee55b3d4864406699203697f7e8c5ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0ee55b3d4864406699203697f7e8c5ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[(int)k - 1 - i]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b8ff6b10056b4a1184562e0e8617cbda>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b8ff6b10056b4a1184562e0e8617cbda>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var reversed = new List<long>();\n        for (int i = 0; i < k; i++) {\n            reversed.Add(input[i]);\n        }\n        reversed.Reverse();\n        for (int i = k; i < input.Count; i++) {\n            reversed.Add(input[i]);\n        }\n        return reversed;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp10vj3fh2.cs(16,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - 1 - (int)i]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ad3f0f83bfe4cfcb38c4aadc1244ff7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ad3f0f83bfe4cfcb38c4aadc1244ff7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (long i = 0; i < k; i++) {\n            result.Add(input[(int)(k - i - 1)]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            result.Add(input[(int)i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1c4e7117532f43db944272de43e99500>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1c4e7117532f43db944272de43e99500>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var output = new List<long>();\n        var reversed = input.Take((int)k).Reverse().ToList();\n        output.AddRange(reversed);\n        output.AddRange(input.Skip((int)k));\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <733c5a6ada524de295fbbe5c0a976bc8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <733c5a6ada524de295fbbe5c0a976bc8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        if (k > input.Count) {\n            throw new ArgumentOutOfRangeException(\"k\", \"k cannot be greater than the length of the array\");\n        }\n        List<long> result = new List<long>();\n        for (long i = 0; i < k; i++) {\n            result.Add(input[(int)(k - i - 1)]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            result.Add(input[(int)(i)]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0446691eb78f4c1d8b4b2c897a89e443>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0446691eb78f4c1d8b4b2c897a89e443>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[i]);\n        }\n        output.Reverse();\n        for (int i = k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_etvqcya.cs(16,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (long i = 0; i < k; i++) {\n            result.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            result.Add(input[(int)i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0ee55b3d4864406699203697f7e8c5ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0ee55b3d4864406699203697f7e8c5ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[i]);\n        }\n        output.Reverse();\n        for (int i = k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_etvqcya.cs(16,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38b66e5e2f90401ab57e6ee59e64e462>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38b66e5e2f90401ab57e6ee59e64e462>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38b66e5e2f90401ab57e6ee59e64e462>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38b66e5e2f90401ab57e6ee59e64e462>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)i]);\n        }\n        output.Reverse();\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <01b334ff801446a48d05c220914d7460>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <01b334ff801446a48d05c220914d7460>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)i]);\n        }\n        output.Reverse();\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <01b334ff801446a48d05c220914d7460>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <01b334ff801446a48d05c220914d7460>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - 1 - (int)i]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ad3f0f83bfe4cfcb38c4aadc1244ff7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ad3f0f83bfe4cfcb38c4aadc1244ff7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)i]);\n        }\n        output.Reverse();\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <01b334ff801446a48d05c220914d7460>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <01b334ff801446a48d05c220914d7460>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < input.Count; i++) {\n            if (i < k) {\n                result.Insert(0, input[i]);\n            } else {\n                result.Add(input[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fb455d4331124d78bce69ceae6bdd268>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fb455d4331124d78bce69ceae6bdd268>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38b66e5e2f90401ab57e6ee59e64e462>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38b66e5e2f90401ab57e6ee59e64e462>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87842c70a4d84755a1c2ba257052395e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87842c70a4d84755a1c2ba257052395e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[k - i - 1]);\n        }\n        for (int i = k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfl5vp13l.cs(13,30): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpfl5vp13l.cs(15,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)i]);\n        }\n        output.Reverse();\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <01b334ff801446a48d05c220914d7460>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <01b334ff801446a48d05c220914d7460>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (long i = 0; i < k; i++) {\n            result.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            result.Add(input[(int)i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0ee55b3d4864406699203697f7e8c5ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0ee55b3d4864406699203697f7e8c5ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[i]);\n        }\n        output.Reverse();\n        for (int i = k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5ip0zn1a.cs(16,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>(input);\n        for (long i = 0; i < k; i++) {\n            result[i] = input[k - i - 1];\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5qbwavmj.cs(13,20): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp5qbwavmj.cs(13,31): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[i]);\n        }\n        result.Reverse();\n        for (int i = k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3kbzeqv4.cs(16,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < input.Count; i++) {\n            if (i < k) {\n                result.Insert(0, input[i]);\n            } else {\n                result.Add(input[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fb455d4331124d78bce69ceae6bdd268>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fb455d4331124d78bce69ceae6bdd268>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38b66e5e2f90401ab57e6ee59e64e462>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38b66e5e2f90401ab57e6ee59e64e462>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38b66e5e2f90401ab57e6ee59e64e462>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38b66e5e2f90401ab57e6ee59e64e462>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (long i = 0; i < k; i++) {\n            result.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            result.Add(input[(int)i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0ee55b3d4864406699203697f7e8c5ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0ee55b3d4864406699203697f7e8c5ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        if (k > input.Count) {\n            return input;\n        }\n        var result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d4ce617755b44bbe976ba182a0e78283>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d4ce617755b44bbe976ba182a0e78283>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[(int)(k - i - 1)]);\n        }\n        for (int i = k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_d4shb7i.cs(15,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)i]);\n        }\n        output.Reverse();\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <01b334ff801446a48d05c220914d7460>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <01b334ff801446a48d05c220914d7460>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < input.Count; i++) {\n            if (i < k) {\n                output.Insert(0, input[i]);\n            } else {\n                output.Add(input[i]);\n            }\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f940a99ca0f24472839d3cfad91662bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f940a99ca0f24472839d3cfad91662bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        // Write your code here\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b81a90c4096c4b18a937cf0ee730cadc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b81a90c4096c4b18a937cf0ee730cadc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38b66e5e2f90401ab57e6ee59e64e462>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38b66e5e2f90401ab57e6ee59e64e462>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[i]);\n        }\n        result.Reverse();\n        for (int i = k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3kbzeqv4.cs(16,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (long i = 0; i < k; i++) {\n            result.Add(input[(int)k - 1 - (int)i]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            result.Add(input[(int)i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd3aa9121b484f60a50fda3e6b40db97>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd3aa9121b484f60a50fda3e6b40db97>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38b66e5e2f90401ab57e6ee59e64e462>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38b66e5e2f90401ab57e6ee59e64e462>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[i]);\n        }\n        result.Reverse();\n        for (int i = k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3kbzeqv4.cs(16,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < input.Count; i++) {\n            if (i < k) {\n                output.Insert(0, input[i]);\n            } else {\n                output.Add(input[i]);\n            }\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f940a99ca0f24472839d3cfad91662bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f940a99ca0f24472839d3cfad91662bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - 1 - (int)i]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ad3f0f83bfe4cfcb38c4aadc1244ff7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ad3f0f83bfe4cfcb38c4aadc1244ff7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[i]);\n        }\n        result.Reverse();\n        for (int i = k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgcki0ud7.cs(16,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        // Write your code here\n        List<long> result = new List<long>();\n        for (long i = 0; i < k; i++) {\n            result.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            result.Add(input[(int)i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <04af4079086f44389683f80d24ccc90b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <04af4079086f44389683f80d24ccc90b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var output = new List<long>();\n        for (int i = 0; i < input.Count; i++) {\n            if (i < k) {\n                output.Insert(0, input[i]);\n            } else {\n                output.Add(input[i]);\n            }\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3a311775ff2045f9b10f6cc6e05c0379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3a311775ff2045f9b10f6cc6e05c0379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e2f7cbebe12d4519a6285701c94e1fda>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e2f7cbebe12d4519a6285701c94e1fda>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (long i = 0; i < k; i++) {\n            result.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            result.Add(input[(int)i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b05eb80627964ba6a50c30aa5c617fbe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b05eb80627964ba6a50c30aa5c617fbe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var output = new List<long>();\n        for (long i = 0; i < input.Count; i++) {\n            if (i < k) {\n                output.Insert(0, input[i]);\n            } else {\n                output.Add(input[i]);\n            }\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp66s7_3qc.cs(14,40): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp66s7_3qc.cs(16,34): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (long i = 0; i < input.Count; i++) {\n            if (i < k) {\n                result.Insert(0, input[i]);\n            } else {\n                result.Add(input[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6dnx6ky2.cs(14,40): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp6dnx6ky2.cs(16,34): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (long i = 0; i < k; i++) {\n            result.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            result.Add(input[(int)i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b05eb80627964ba6a50c30aa5c617fbe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b05eb80627964ba6a50c30aa5c617fbe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (long i = 0; i < k; i++) {\n            result.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            result.Add(input[(int)i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b05eb80627964ba6a50c30aa5c617fbe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b05eb80627964ba6a50c30aa5c617fbe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[i]);\n        }\n        for (int i = k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwx6rt7ri.cs(15,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (long i = 0; i < k; i++) {\n            result.Add(input[(int)k - 1 - (int)i]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            result.Add(input[(int)i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd3aa9121b484f60a50fda3e6b40db97>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd3aa9121b484f60a50fda3e6b40db97>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var output = new List<long>();\n        for (long i = 0; i < input.Count; i++) {\n            if (i < k) {\n                output.Insert(0, input[i]);\n            } else {\n                output.Add(input[i]);\n            }\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp66s7_3qc.cs(14,40): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp66s7_3qc.cs(16,34): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)i]);\n        }\n        output.Reverse();\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <01b334ff801446a48d05c220914d7460>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <01b334ff801446a48d05c220914d7460>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38b66e5e2f90401ab57e6ee59e64e462>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38b66e5e2f90401ab57e6ee59e64e462>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87842c70a4d84755a1c2ba257052395e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87842c70a4d84755a1c2ba257052395e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (var i = 0; i < input.Count; i++) {\n            if (i < k) {\n                result.Insert(0, input[i]);\n            } else {\n                result.Add(input[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c3c06d5f8daf486d89ac32b1c4026182>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c3c06d5f8daf486d89ac32b1c4026182>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (long i = 0; i < k; i++) {\n            result.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            result.Add(input[(int)i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0ee55b3d4864406699203697f7e8c5ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0ee55b3d4864406699203697f7e8c5ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var output = new List<long>();\n        for (long i = 0; i < input.Count; i++) {\n            if (i < k) {\n                output.Insert(0, input[i]);\n            } else {\n                output.Add(input[i]);\n            }\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp66s7_3qc.cs(14,40): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp66s7_3qc.cs(16,34): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)(k - i - 1)]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <657a7ea74b6b4d73b4a2df0c36dc349e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <657a7ea74b6b4d73b4a2df0c36dc349e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[i]);\n        }\n        output.Reverse();\n        for (int i = k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_etvqcya.cs(16,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        if (k == 0) {\n            return input;\n        }\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e85aae63d45b427c88db3cf6e554d95f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e85aae63d45b427c88db3cf6e554d95f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[i]);\n        }\n        output.Reverse();\n        for (int i = k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_etvqcya.cs(16,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[i]);\n        }\n        output.Reverse();\n        for (int i = k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_etvqcya.cs(16,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87842c70a4d84755a1c2ba257052395e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87842c70a4d84755a1c2ba257052395e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87842c70a4d84755a1c2ba257052395e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87842c70a4d84755a1c2ba257052395e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[i]);\n        }\n        result.Reverse();\n        for (int i = k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgcki0ud7.cs(16,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - 1 - (int)i]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ad3f0f83bfe4cfcb38c4aadc1244ff7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ad3f0f83bfe4cfcb38c4aadc1244ff7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        if (k > input.Count) {\n            return input;\n        }\n        var reversed = input.Take((int)k).Reverse().ToList();\n        var rest = input.Skip((int)k).ToList();\n        return reversed.Concat(rest).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e7886b48dbab4752966756591725aeda>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e7886b48dbab4752966756591725aeda>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (long i = 0; i < k; i++) {\n            result.Add(input[(int)k - 1 - (int)i]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            result.Add(input[(int)i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd3aa9121b484f60a50fda3e6b40db97>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd3aa9121b484f60a50fda3e6b40db97>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[i]);\n        }\n        result.Reverse();\n        for (int i = k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3kbzeqv4.cs(16,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[i]);\n        }\n        result.Reverse();\n        for (int i = k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3kbzeqv4.cs(16,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (long i = 0; i < input.Count; i++) {\n            if (i < k) {\n                result.Insert(0, input[i]);\n            } else {\n                result.Add(input[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6dnx6ky2.cs(14,40): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp6dnx6ky2.cs(16,34): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - 1 - (int)i]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ad3f0f83bfe4cfcb38c4aadc1244ff7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ad3f0f83bfe4cfcb38c4aadc1244ff7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[i]);\n        }\n        output.Reverse();\n        for (int i = k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_etvqcya.cs(16,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)(k - i - 1)]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <758f71d284764892bd196edd36dab47f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <758f71d284764892bd196edd36dab47f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < input.Count; i++) {\n            if (i < k) {\n                output.Insert(0, input[i]);\n            } else {\n                output.Add(input[i]);\n            }\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb9je13o6.cs(14,40): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpb9je13o6.cs(16,34): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        // Write your code here\n        var result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d0ebe9c05d614df38b40f061e4bbae67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d0ebe9c05d614df38b40f061e4bbae67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bc20d6acabef40168e4819dc155a8010>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bc20d6acabef40168e4819dc155a8010>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var output = new List<long>();\n        for (int i = 0; i < input.Count; i++) {\n            if (i < k) {\n                output.Insert(0, input[i]);\n            } else {\n                output.Add(input[i]);\n            }\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3a311775ff2045f9b10f6cc6e05c0379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3a311775ff2045f9b10f6cc6e05c0379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (long i = 0; i < k; i++) {\n            result.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            result.Add(input[(int)i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0ee55b3d4864406699203697f7e8c5ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0ee55b3d4864406699203697f7e8c5ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bc20d6acabef40168e4819dc155a8010>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bc20d6acabef40168e4819dc155a8010>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bc20d6acabef40168e4819dc155a8010>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bc20d6acabef40168e4819dc155a8010>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[k - 1 - i]);\n        }\n        for (int i = k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_ejg4547.cs(13,30): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp_ejg4547.cs(15,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - 1 - (int)i]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ad3f0f83bfe4cfcb38c4aadc1244ff7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ad3f0f83bfe4cfcb38c4aadc1244ff7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87842c70a4d84755a1c2ba257052395e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87842c70a4d84755a1c2ba257052395e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var reversed = new List<long>();\n        for (int i = 0; i < k; i++) {\n            reversed.Add(input[i]);\n        }\n        reversed.Reverse();\n        for (int i = k; i < input.Count; i++) {\n            reversed.Add(input[i]);\n        }\n        return reversed;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp10vj3fh2.cs(16,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < input.Count; i++) {\n            if (i < k) {\n                output.Insert(0, input[i]);\n            } else {\n                output.Add(input[i]);\n            }\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f940a99ca0f24472839d3cfad91662bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f940a99ca0f24472839d3cfad91662bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = 0; i < input.Count - k; i++) {\n            output.Add(input[(int)k + i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7683a93e3e5943a8b0ae52b759f10935>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7683a93e3e5943a8b0ae52b759f10935>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < input.Count; i++) {\n            if (i < k) {\n                output.Insert(0, input[i]);\n            } else {\n                output.Add(input[i]);\n            }\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb9je13o6.cs(14,40): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpb9je13o6.cs(16,34): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (long i = 0; i < k; i++) {\n            result.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            result.Add(input[(int)i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0ee55b3d4864406699203697f7e8c5ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0ee55b3d4864406699203697f7e8c5ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < input.Count; i++) {\n            if (i < k) {\n                result.Insert(0, input[i]);\n            } else {\n                result.Add(input[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fb455d4331124d78bce69ceae6bdd268>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fb455d4331124d78bce69ceae6bdd268>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (long i = 0; i < k; i++) {\n            result.Add(input[(int)k - 1 - (int)i]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            result.Add(input[(int)i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd3aa9121b484f60a50fda3e6b40db97>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd3aa9121b484f60a50fda3e6b40db97>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)(k - i - 1)]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <657a7ea74b6b4d73b4a2df0c36dc349e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <657a7ea74b6b4d73b4a2df0c36dc349e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38b66e5e2f90401ab57e6ee59e64e462>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38b66e5e2f90401ab57e6ee59e64e462>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)i]);\n        }\n        output.Reverse();\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <01b334ff801446a48d05c220914d7460>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <01b334ff801446a48d05c220914d7460>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[i]);\n        }\n        result.Reverse();\n        for (int i = k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3kbzeqv4.cs(16,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)i]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <90f0a62f4d9b473698df4709885a90e0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <90f0a62f4d9b473698df4709885a90e0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < input.Count; i++) {\n            if (i < k) {\n                output.Insert(0, input[i]);\n            } else {\n                output.Add(input[i]);\n            }\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb9je13o6.cs(14,40): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpb9je13o6.cs(16,34): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - 1 - i]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a9d0f4adb60a4305ba95226773aea234>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a9d0f4adb60a4305ba95226773aea234>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (long i = 0; i < k; i++) {\n            result.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            result.Add(input[(int)i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b05eb80627964ba6a50c30aa5c617fbe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b05eb80627964ba6a50c30aa5c617fbe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)(k - i - 1)]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <657a7ea74b6b4d73b4a2df0c36dc349e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <657a7ea74b6b4d73b4a2df0c36dc349e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        if (k > input.Count) {\n            return input;\n        }\n        var result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[k - i - 1]);\n        }\n        for (int i = k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmph6j02i58.cs(16,30): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmph6j02i58.cs(18,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38b66e5e2f90401ab57e6ee59e64e462>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38b66e5e2f90401ab57e6ee59e64e462>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        for (int i = 0; i < k / 2; i++) {\n            long temp = input[i];\n            input[i] = input[k - i - 1];\n            input[k - i - 1] = temp;\n        }\n        return input;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi72cx0_k.cs(13,30): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpi72cx0_k.cs(14,19): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[i]);\n        }\n        output.Reverse();\n        for (int i = k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_etvqcya.cs(16,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>(input);\n        for (int i = 0; i < k; i++) {\n            result[i] = input[k - i - 1];\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp44api796.cs(13,31): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[i]);\n        }\n        result.Reverse();\n        for (int i = k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3kbzeqv4.cs(16,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var output = new List<long>();\n        for (int i = 0; i < input.Count; i++) {\n            if (i < k) {\n                output.Insert(0, input[i]);\n            } else {\n                output.Add(input[i]);\n            }\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3a311775ff2045f9b10f6cc6e05c0379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3a311775ff2045f9b10f6cc6e05c0379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87842c70a4d84755a1c2ba257052395e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87842c70a4d84755a1c2ba257052395e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (long i = 0; i < k; i++) {\n            result.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            result.Add(input[(int)i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0ee55b3d4864406699203697f7e8c5ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0ee55b3d4864406699203697f7e8c5ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87842c70a4d84755a1c2ba257052395e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87842c70a4d84755a1c2ba257052395e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (long i = 0; i < k; i++) {\n            result.Add(input[(int)k - 1 - (int)i]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            result.Add(input[(int)i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd3aa9121b484f60a50fda3e6b40db97>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd3aa9121b484f60a50fda3e6b40db97>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < input.Count; i++) {\n            if (i < k) {\n                output.Insert(0, input[i]);\n            } else {\n                output.Add(input[i]);\n            }\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb9je13o6.cs(14,40): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpb9je13o6.cs(16,34): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        if (k > input.Count) {\n            return input;\n        }\n        var reversed = input.Take((int)k).Reverse().ToList();\n        var rest = input.Skip((int)k).ToList();\n        return reversed.Concat(rest).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e7886b48dbab4752966756591725aeda>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e7886b48dbab4752966756591725aeda>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < input.Count; i++) {\n            if (i < k) {\n                output.Insert(0, input[i]);\n            } else {\n                output.Add(input[i]);\n            }\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f940a99ca0f24472839d3cfad91662bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f940a99ca0f24472839d3cfad91662bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < input.Count; i++) {\n            if (i < k) {\n                output.Add(input[(int)k - i - 1]);\n            } else {\n                output.Add(input[i]);\n            }\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <62ddeaf163d94be69b6ba95a6b3bb4bf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <62ddeaf163d94be69b6ba95a6b3bb4bf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[i]);\n        }\n        output.Reverse();\n        for (int i = k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5ip0zn1a.cs(16,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[i]);\n        }\n        output.Reverse();\n        for (int i = k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_etvqcya.cs(16,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        var reversed = input.Take((int)k).Reverse().ToList();\n        result.AddRange(reversed);\n        result.AddRange(input.Skip((int)k));\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <262f3e20b7864a9fb3f6713212d0b8fd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <262f3e20b7864a9fb3f6713212d0b8fd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[i]);\n        }\n        result.Reverse();\n        for (int i = k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgcki0ud7.cs(16,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bc20d6acabef40168e4819dc155a8010>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bc20d6acabef40168e4819dc155a8010>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87842c70a4d84755a1c2ba257052395e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87842c70a4d84755a1c2ba257052395e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[k - i - 1]);\n        }\n        for (int i = k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpttxos8sz.cs(13,30): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpttxos8sz.cs(15,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (long i = 0; i < k; i++) {\n            result.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            result.Add(input[(int)i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0ee55b3d4864406699203697f7e8c5ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0ee55b3d4864406699203697f7e8c5ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < input.Count; i++) {\n            if (i < k) {\n                result.Insert(0, input[i]);\n            } else {\n                result.Add(input[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fb455d4331124d78bce69ceae6bdd268>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fb455d4331124d78bce69ceae6bdd268>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (long i = 0; i < k; i++) {\n            result.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            result.Add(input[(int)i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0ee55b3d4864406699203697f7e8c5ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0ee55b3d4864406699203697f7e8c5ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var output = new List<long>();\n        var reversed = input.Take((int)k).Reverse().ToList();\n        var remaining = input.Skip((int)k).ToList();\n        output.AddRange(reversed);\n        output.AddRange(remaining);\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7bcb53b7bc084dcc817b78142f053762>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7bcb53b7bc084dcc817b78142f053762>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[k - i - 1]);\n        }\n        for (int i = k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp494gvtkt.cs(13,30): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp494gvtkt.cs(15,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < input.Count; i++) {\n            if (i < k) {\n                result.Insert(0, input[i]);\n            } else {\n                result.Add(input[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fb455d4331124d78bce69ceae6bdd268>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fb455d4331124d78bce69ceae6bdd268>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < input.Count; i++) {\n            if (i < k) {\n                result.Insert(0, input[i]);\n            } else {\n                result.Add(input[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fb455d4331124d78bce69ceae6bdd268>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fb455d4331124d78bce69ceae6bdd268>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87842c70a4d84755a1c2ba257052395e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87842c70a4d84755a1c2ba257052395e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - 1 - (int)i]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ad3f0f83bfe4cfcb38c4aadc1244ff7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ad3f0f83bfe4cfcb38c4aadc1244ff7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[k - i - 1]);\n        }\n        for (int i = k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpttxos8sz.cs(13,30): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpttxos8sz.cs(15,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87842c70a4d84755a1c2ba257052395e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87842c70a4d84755a1c2ba257052395e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (long i = 0; i < k; i++) {\n            output.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            output.Add(input[(int)i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <718b06ebe502478181b6b32e1fdcc9fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (long i = 0; i < k; i++) {\n            result.Add(input[(int)(k - i - 1)]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            result.Add(input[(int)i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8272712abab14405992dd204eef58048>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8272712abab14405992dd204eef58048>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[i]);\n        }\n        for (int i = k; i < input.Count; i++) {\n            output.Add(input[input.Count - 1 - i + k]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5aih4t3t.cs(15,22): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n/tmp/tmp5aih4t3t.cs(16,30): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (long i = 0; i < k; i++) {\n            result.Add(input[k - i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3pymy1cp.cs(13,30): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp3pymy1cp.cs(16,30): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> reversed = new List<long>();\n        for (long i = 0; i < k; i++) {\n            reversed.Add(input[(int)k - (int)i - 1]);\n        }\n        for (long i = k; i < input.Count; i++) {\n            reversed.Add(input[(int)i]);\n        }\n        return reversed;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <56fa6b9287e7451eb32f50894ec3a969>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <56fa6b9287e7451eb32f50894ec3a969>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        var result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[i]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            result.Add(input[input.Count - i + k - 1]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp777mre_e.cs(16,30): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < k; i++) {\n            result.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            result.Add(input[i]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87842c70a4d84755a1c2ba257052395e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87842c70a4d84755a1c2ba257052395e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> result = new List<long>();\n        for (int i = 0; i < input.Count; i++) {\n            if (i < k) {\n                result.Insert(0, input[i]);\n            } else {\n                result.Add(input[i]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d7f29b6260464d5db01928c68b8220e2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d7f29b6260464d5db01928c68b8220e2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)(k - i - 1)]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <758f71d284764892bd196edd36dab47f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <758f71d284764892bd196edd36dab47f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1665517597,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f46608aae6f4e1db195d6ec78154e9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[i]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[input.Count - i + k - 1]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb6wup23y.cs(16,30): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static List<long> ReverseArrayUptoK(List<long> input, long k) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        List<long> output = new List<long>();\n        for (int i = 0; i < k; i++) {\n            output.Add(input[(int)k - i - 1]);\n        }\n        for (int i = (int)k; i < input.Count; i++) {\n            output.Add(input[i]);\n        }\n        return output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L})), (4L)).Equals((new List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L, (long)5L, (long)6L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L})), (2L)).Equals((new List<long>(new long[]{(long)5L, (long)4L, (long)6L, (long)7L}))));\n    Debug.Assert(ReverseArrayUptoK((new List<long>(new long[]{(long)9L, (long)8L, (long)7L, (long)6L, (long)5L})), (3L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)6L, (long)5L}))));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41eca1ea76634fcb8c4d523f0e3c8768>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41eca1ea76634fcb8c4d523f0e3c8768>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    }
  ]
}
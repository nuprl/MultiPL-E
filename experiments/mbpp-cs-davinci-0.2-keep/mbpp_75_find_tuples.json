{
  "name": "mbpp_75_find_tuples",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find tuples which have all elements divisible by k from the given list of tuples.\n    public static List<long> FindTuples(List<long> test_list, long K) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_75_find_tuples.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindTuples((new List<long>(new Tuple<long, long, long>[]{(Tuple<long, long, long>)Tuple.Create(6L, 24L, 12L), (Tuple<long, long, long>)Tuple.Create(7L, 9L, 6L), (Tuple<long, long, long>)Tuple.Create(12L, 18L, 21L)})), (6L)).Equals((new List<long>(new Tuple<long, long, long>[]{(Tuple<long, long, long>)Tuple.Create(6L, 24L, 12L)}))));\n    Debug.Assert(FindTuples((new List<long>(new Tuple<long, long, long>[]{(Tuple<long, long, long>)Tuple.Create(5L, 25L, 30L), (Tuple<long, long, long>)Tuple.Create(4L, 2L, 3L), (Tuple<long, long, long>)Tuple.Create(7L, 8L, 9L)})), (5L)).Equals((new List<long>(new Tuple<long, long, long>[]{(Tuple<long, long, long>)Tuple.Create(5L, 25L, 30L)}))));\n    Debug.Assert(FindTuples((new List<long>(new Tuple<long, long, long>[]{(Tuple<long, long, long>)Tuple.Create(7L, 9L, 16L), (Tuple<long, long, long>)Tuple.Create(8L, 16L, 4L), (Tuple<long, long, long>)Tuple.Create(19L, 17L, 18L)})), (4L)).Equals((new List<long>(new Tuple<long, long, long>[]{(Tuple<long, long, long>)Tuple.Create(8L, 16L, 4L)}))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long num in test_list) {\n            if (num % K == 0) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long tuple in test_list) {\n            if (tuple % K == 0) {\n                result.Add(tuple);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long t in test_list) {\n            if (t % K == 0) {\n                result.Add(t);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        // Write your code here\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> tuples = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                tuples.Add(test_list[i]);\n            }\n        }\n        return tuples;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        // Write your code here\n        List<long> result = new List<long>();\n        foreach (var item in test_list) {\n            if (item % K == 0) {\n                result.Add(item);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        foreach (var tuple in test_list) {\n            if (tuple % K == 0) {\n                result.Add(tuple);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        foreach (var item in test_list) {\n            if (item % K == 0) {\n                result.Add(item);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long t in test_list) {\n            if (t % K == 0) {\n                result.Add(t);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long tuple in test_list) {\n            if (tuple % K == 0) {\n                result.Add(tuple);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long x in test_list) {\n            if (x % K == 0) {\n                result.Add(x);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long tuple in test_list) {\n            if (tuple % K == 0) {\n                result.Add(tuple);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long tuple in test_list) {\n            if (tuple % K == 0) {\n                result.Add(tuple);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long tuple in test_list) {\n            if (tuple % K == 0) {\n                result.Add(tuple);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long t in test_list) {\n            if (t % K == 0) {\n                result.Add(t);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        foreach (var item in test_list) {\n            if (item % K == 0) {\n                result.Add(item);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long test_num in test_list) {\n            if (test_num % K == 0) {\n                result.Add(test_num);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        // Write your code here\n        List<long> result = new List<long>();\n        foreach (long t in test_list) {\n            if (t % K == 0) {\n                result.Add(t);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        foreach (var tuple in test_list) {\n            if (tuple % K == 0) {\n                result.Add(tuple);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long t in test_list) {\n            if (t % K == 0) {\n                result.Add(t);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        foreach (var tuple in test_list) {\n            if (tuple % K == 0) {\n                result.Add(tuple);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long num in test_list) {\n            if (num % K == 0) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        foreach (var item in test_list) {\n            if (item % K == 0) {\n                result.Add(item);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long tuple in test_list) {\n            if (tuple % K == 0) {\n                result.Add(tuple);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        // Write your code here\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        foreach (var tuple in test_list) {\n            if (tuple % K == 0) {\n                result.Add(tuple);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        // Write your code here\n        List<long> result = new List<long>();\n        foreach (long num in test_list) {\n            if (num % K == 0) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long tuple in test_list) {\n            if (tuple % K == 0) {\n                result.Add(tuple);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        var set = new HashSet<long>();\n        foreach (var item in test_list) {\n            if (item % K == 0) {\n                set.Add(item);\n            }\n        }\n        foreach (var item in test_list) {\n            if (set.Contains(item)) {\n                result.Add(item);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long t in test_list) {\n            if (t % K == 0) {\n                result.Add(t);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long tuple in test_list) {\n            if (tuple % K == 0) {\n                result.Add(tuple);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long t in test_list) {\n            if (t % K == 0) {\n                result.Add(t);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        foreach (var item in test_list) {\n            if (item % K == 0) {\n                result.Add(item);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long x in test_list) {\n            if (x % K == 0) {\n                result.Add(x);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long element in test_list) {\n            if (element % K == 0) {\n                result.Add(element);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long item in test_list) {\n            if (item % K == 0) {\n                result.Add(item);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        foreach (var item in test_list) {\n            if (item % K == 0) {\n                result.Add(item);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long t in test_list) {\n            if (t % K == 0) {\n                result.Add(t);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long t in test_list) {\n            if (t % K == 0) {\n                result.Add(t);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long tuple in test_list) {\n            if (tuple % K == 0) {\n                result.Add(tuple);\n            }\n        }\n        return result;",
    "        List<long> tuples = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                tuples.Add(test_list[i]);\n            }\n        }\n        return tuples;",
    "        var result = new List<long>();\n        foreach (var item in test_list) {\n            if (item % K == 0) {\n                result.Add(item);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long t in test_list) {\n            if (t % K == 0) {\n                result.Add(t);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        var tuple_list = new List<long>();\n        var tuple_list_length = 0;\n        var tuple_list_index = 0;\n        var tuple_list_index_max = 0;\n        var tuple_list_index_min = 0;\n        var tuple_list_index_max_length = 0;\n        var tuple_list_index_min_length = 0;\n        var tuple_list_index_max_length_index = 0;\n        var tuple_list_index_min_length_index = 0;\n        var tuple_list_index_max_length_index_max = 0;\n        var tuple_list_index_min_length_index_min = 0;\n        var tuple_list_index_max_length_index_max_length = 0;\n        var tuple_list_index_min_length_index_min_length = 0;\n        var tuple_list_index_max_length_index_max_length_index = 0;\n        var tuple_list_index_min_length_index_min_length_index = 0;\n        var tuple_list_index_max_length_index_max_length_index_max = 0;\n        var tuple_list_index_min_length_index_min_length_index_min = 0;\n        var tuple_list_index_max_length_index_max_length_index_max_length = 0;\n        var tuple_list_index_min_length_index_min_length_index_min_length = 0;\n        var tuple_list_index_max_length_index_max_length_index_max_length_index = 0;\n        var tuple_list_index_min_length_index_min_length_index_min_length_index = 0;\n        var tuple_list_index_max_length_index_max_length_index_max_length_index_max = 0;\n        var tuple_list_index_min_length_index_min_length_index_min_length_index_min = 0;\n        var tuple_list_index_max_length_index_max_length_index_max_length_index",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        // Write your code here\n        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long tuple in test_list) {\n            if (tuple % K == 0) {\n                result.Add(tuple);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long t in test_list) {\n            if (t % K == 0) {\n                result.Add(t);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> tuples = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                tuples.Add(test_list[i]);\n            }\n        }\n        return tuples;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        foreach (long i in test_list) {\n            if (i % K == 0) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < test_list.Count; i++) {\n            if (test_list[i] % K == 0) {\n                result.Add(test_list[i]);\n            }\n        }\n        return result;"
  ]
}
{
  "name": "mbpp_244_next_Perfect_Square",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_244_next_Perfect_Square.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i < N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce72da81fadf4b07bf6f59b9d8ea8ca0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i < N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce72da81fadf4b07bf6f59b9d8ea8ca0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        } else {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i < N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce72da81fadf4b07bf6f59b9d8ea8ca0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n        else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e26ecac733d74bca93ead348331b1b43>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e26ecac733d74bca93ead348331b1b43>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        return (sqrt + 1) * (sqrt + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        // We can use the formula for the nth square number to find the next square number\n        // n^2 = n(n+1)/2\n        // We can use this to find the next square number by finding the next value of n\n        // that satisfies this equation.\n        // We can use the quadratic formula to find the next value of n\n        // n = (-1 + sqrt(1 + 8(N/2)))/2\n        // We can then round up to the nearest integer to get the next square number\n        // We can then return the square of this number\n        return (long)Math.Pow(Math.Ceiling((-1 + Math.Sqrt(1 + 8*(N/2.0)))/2), 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ea0e4e9d5782456aa0ab567727aa51aa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ea0e4e9d5782456aa0ab567727aa51aa>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i < N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce72da81fadf4b07bf6f59b9d8ea8ca0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        // Find the next perfect square greater than N\n        long x = (long)Math.Ceiling(Math.Sqrt(N));\n        return x * x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1490914a6725474c98f216ead0de7709>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N)\n            return (sqrt + 1) * (sqrt + 1);\n        else\n            return (sqrt + 1) * (sqrt + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i < N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce72da81fadf4b07bf6f59b9d8ea8ca0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n        return (sqrt + 1) * (sqrt + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i < N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce72da81fadf4b07bf6f59b9d8ea8ca0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long root = (long)Math.Sqrt(N);\n        if (root * root == N) {\n            return (root + 1) * (root + 1);\n        } else {\n            return (root + 1) * (root + 1);\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long x = (long)Math.Sqrt(N);\n        if (x * x == N) {\n            return (x + 1) * (x + 1);\n        }\n        return (x + 1) * (x + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i < N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce72da81fadf4b07bf6f59b9d8ea8ca0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09c9391e337549e781147bf81e5d431e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09c9391e337549e781147bf81e5d431e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long n = (long)Math.Sqrt(N);\n        return n * n == N ? (n + 1) * (n + 1) : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <35e69902585f410e877e4488a7821103>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <35e69902585f410e877e4488a7821103>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        // Your code here\n        long i = 1;\n        while (i * i < N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <966abebcd4c24aad83c8cf6df03bda67>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long n = (long)Math.Sqrt(N);\n        return n * n == N ? (n + 1) * (n + 1) : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <35e69902585f410e877e4488a7821103>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <35e69902585f410e877e4488a7821103>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        // Find the next perfect square\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i += 1;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N)\n            return (sqrt + 1) * (sqrt + 1);\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <74c63728ea184a05ae2667bc0cd851eb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <74c63728ea184a05ae2667bc0cd851eb>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n        return (sqrt + 1) * (sqrt + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i < N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce72da81fadf4b07bf6f59b9d8ea8ca0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n        return (sqrt + 1) * (sqrt + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long root = (long)Math.Sqrt(N);\n        if (root * root == N) {\n            return (root + 1) * (root + 1);\n        } else {\n            return root * root;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f7d22623e68a419d889316d20a60c280>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f7d22623e68a419d889316d20a60c280>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i < N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce72da81fadf4b07bf6f59b9d8ea8ca0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i < N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce72da81fadf4b07bf6f59b9d8ea8ca0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long n = (long)Math.Sqrt(N);\n        if (n * n == N)\n            return (n + 1) * (n + 1);\n        else\n            return n * n;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c52d851e13e34e17be4388544940ea4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c52d851e13e34e17be4388544940ea4f>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        } else {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        // Find the next perfect square\n        long square = (long)Math.Ceiling(Math.Sqrt(N));\n        return square * square;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <193a6190d70d403bb586c39d827747f7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N)\n            return (sqrt + 1) * (sqrt + 1);\n        return (sqrt + 1) * (sqrt + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i < N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce72da81fadf4b07bf6f59b9d8ea8ca0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i < N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce72da81fadf4b07bf6f59b9d8ea8ca0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        return (long)Math.Ceiling(Math.Sqrt(N)) * (long)Math.Ceiling(Math.Sqrt(N));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d46c4dc0591a45eca53d1694d8771bcb>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long x = (long)Math.Ceiling(Math.Sqrt(N));\n        return x * x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <086b23ad48f24ee097ff773066d4234c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i < N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce72da81fadf4b07bf6f59b9d8ea8ca0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long n = (long)Math.Sqrt(N);\n        return n * n == N ? (n + 1) * (n + 1) : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <35e69902585f410e877e4488a7821103>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <35e69902585f410e877e4488a7821103>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long n = (long)Math.Sqrt(N);\n        return n * n == N ? (n + 1) * (n + 1) : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <35e69902585f410e877e4488a7821103>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <35e69902585f410e877e4488a7821103>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        // Return the next perfect square greater than N\n        // If N is a perfect square, return N\n        // If N is not a positive integer, return -1\n        // If N is a positive integer, return the next perfect square\n        // If N is a perfect square, return N\n        if (N < 0) {\n            return -1;\n        }\n        if (Math.Sqrt(N) % 1 == 0) {\n            return N;\n        }\n        else {\n            return (long)Math.Pow(Math.Ceiling(Math.Sqrt(N)), 2);\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <566bd895d74a4829b81af86a59fafd34>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        return (sqrt + 1) * (sqrt + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        return (sqrt + 1) * (sqrt + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        return (sqrt + 1) * (sqrt + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i < N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce72da81fadf4b07bf6f59b9d8ea8ca0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09c9391e337549e781147bf81e5d431e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09c9391e337549e781147bf81e5d431e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09c9391e337549e781147bf81e5d431e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09c9391e337549e781147bf81e5d431e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09c9391e337549e781147bf81e5d431e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09c9391e337549e781147bf81e5d431e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Ceiling(Math.Sqrt(N));\n        return sqrt * sqrt;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <242abff1ed1f4a2e830f5f6449aedf1f>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n        return (sqrt + 1) * (sqrt + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) return (sqrt + 1) * (sqrt + 1);\n        return (sqrt + 1) * (sqrt + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long square = (long)Math.Sqrt(N);\n        if (square * square == N) {\n            return (square + 1) * (square + 1);\n        }\n        return (square + 1) * (square + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        // find the next perfect square greater than N\n        // return -1 if there is no perfect square greater than N\n        //\n        // Example:\n        // N = 24\n        // return 25\n        //\n        // N = 49\n        // return 64\n        //\n        // N = 100\n        // return -1\n        //\n        // N = 0\n        // return 1\n        //\n        // N = -1\n        // return 0\n        //\n        // N = -100\n        // return 0\n        //\n        // N = -123456789\n        // return 0\n        //\n        // N = 123456789\n        // return 123456800\n        //\n        // N = 123456788\n        // return 123456800\n        //\n        // N = 123456787\n        // return 123456800\n        //\n        // N = 123456786\n        // return 123456800\n        //\n        // N = 123456785\n        // return 123456800\n        //\n        // N = 123456784\n        // return 123456800\n        //\n        // N = 123456783\n        // return 123456800\n        //\n        // N = 123456782\n        // return 123456800\n        //\n        // N = 123456781\n        // return 123456800\n        //\n        // N = 123456780\n        // return 123456800\n        //\n        // N = 123456779\n        // return 123456800\n        //\n        // N = 123456778\n        // return 123456800\n        //\n        // N = 123456777\n        // return 123456800\n        //\n        // N = 123456776\n        // return 123456800\n        //\n        // N = 123456775\n        // return 123456800\n        //\n        // N = 123456774\n        // return 123456800\n        //\n        // N = 123456773\n        // return 123456800\n        //\n        // N = 123456772\n        // return 123456800\n        //\n        // N = 123456771\n        // return\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6zei9ai7.cs(10,24): error CS0161: 'Problem.NextPerfectSquare(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Ceiling(Math.Sqrt(N));\n        return sqrt * sqrt;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <242abff1ed1f4a2e830f5f6449aedf1f>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n        return (sqrt + 1) * (sqrt + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        // If N is already a perfect square, return N\n        if (Math.Sqrt(N) % 1 == 0) {\n            return N;\n        }\n        // Otherwise, return the next perfect square\n        return (long)Math.Pow(Math.Ceiling(Math.Sqrt(N)), 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09fb0c9c7ba94997adefcb8f2e525551>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long n = (long)Math.Sqrt(N);\n        return (n + 1) * (n + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i < N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce72da81fadf4b07bf6f59b9d8ea8ca0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i < N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce72da81fadf4b07bf6f59b9d8ea8ca0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i < N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce72da81fadf4b07bf6f59b9d8ea8ca0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        // Your code goes here.\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        } else {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long x = (long)Math.Sqrt(N);\n        if (x * x == N)\n            return (x + 1) * (x + 1);\n        else\n            return x * x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122812,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0aee09fdf1db43789535e953652d3121>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0aee09fdf1db43789535e953652d3121>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i < N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce72da81fadf4b07bf6f59b9d8ea8ca0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i < N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce72da81fadf4b07bf6f59b9d8ea8ca0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i < N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce72da81fadf4b07bf6f59b9d8ea8ca0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09c9391e337549e781147bf81e5d431e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09c9391e337549e781147bf81e5d431e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i*i < N) {\n            i++;\n        }\n        return i*i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122812,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c65bb0e2b5c9430fb91a72d5207b12e8>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n        return (sqrt + 1) * (sqrt + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09c9391e337549e781147bf81e5d431e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09c9391e337549e781147bf81e5d431e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09c9391e337549e781147bf81e5d431e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09c9391e337549e781147bf81e5d431e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long x = (long)Math.Sqrt(N);\n        return x * x == N ? (x + 1) * (x + 1) : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122812,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ff1b4bf894ad4777ae8d5ef9e739b037>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ff1b4bf894ad4777ae8d5ef9e739b037>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long x = (long)Math.Sqrt(N);\n        if (x * x == N)\n            return (x + 1) * (x + 1);\n        else\n            return x * x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122812,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0aee09fdf1db43789535e953652d3121>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0aee09fdf1db43789535e953652d3121>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        // find the next perfect square\n        long next = (long)Math.Ceiling(Math.Sqrt(N));\n        return next * next;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122812,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <30cc6d0150fe40c68163b2782c2dc4c5>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long result = (long)Math.Ceiling(Math.Sqrt(N));\n        return result * result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122812,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <501d55b734bc4132a32d17809664ab87>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long x = (long)Math.Ceiling(Math.Sqrt(N));\n        return x * x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <086b23ad48f24ee097ff773066d4234c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i < N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce72da81fadf4b07bf6f59b9d8ea8ca0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        return (sqrt + 1) * (sqrt + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09c9391e337549e781147bf81e5d431e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09c9391e337549e781147bf81e5d431e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        return (sqrt + 1) * (sqrt + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        // Find the next perfect square\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        } else {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122812,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        return sqrt * sqrt == N ? (sqrt + 1) * (sqrt + 1) : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122812,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <155f3b4162744e378731ffe12f3f8532>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <155f3b4162744e378731ffe12f3f8532>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i += 1;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09c9391e337549e781147bf81e5d431e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09c9391e337549e781147bf81e5d431e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        // Find the next perfect square greater than N\n        // If N is a perfect square, return N\n        // If N is not a perfect square, return the next perfect square\n        // Example:\n        // N = 4, return 4\n        // N = 5, return 9\n        // N = 10, return 16\n        // N = 11, return 16\n        // N = 12, return 16\n        // N = 13, return 16\n        // N = 14, return 16\n        // N = 15, return 16\n        // N = 16, return 16\n        // N = 17, return 25\n        // N = 18, return 25\n        // N = 19, return 25\n        // N = 20, return 25\n        // N = 21, return 25\n        // N = 22, return 25\n        // N = 23, return 25\n        // N = 24, return 25\n        // N = 25, return 25\n        // N = 26, return 36\n        // N = 27, return 36\n        // N = 28, return 36\n        // N = 29, return 36\n        // N = 30, return 36\n        // N = 31, return 36\n        // N = 32, return 36\n        // N = 33, return 36\n        // N = 34, return 36\n        // N = 35, return 36\n        // N = 36, return 36\n        // N = 37, return 49\n        // N = 38, return 49\n        // N = 39, return 49\n        // N = 40, return 49\n        // N = 41, return 49\n        // N = 42, return 49\n        // N = 43, return 49\n        // N = 44, return 49\n        // N = 45, return 49\n        // N = 46, return 49\n        // N = 47, return 49\n        // N = 48, return 49\n        // N = 49, return 49\n        // N = 50, return 49\n        // N = 51, return 64\n        // N = 52, return 64\n        // N = 53, return 64\n        // N = 54, return 64\n        // N = 55, return 64\n        // N = 56, return 64\n        // N = 57, return 64\n        // N = 58, return 64\n        // N = 59, return 64\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122812,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfvku2fh0.cs(10,24): error CS0161: 'Problem.NextPerfectSquare(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        return (sqrt + 1) * (sqrt + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i < N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce72da81fadf4b07bf6f59b9d8ea8ca0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09c9391e337549e781147bf81e5d431e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09c9391e337549e781147bf81e5d431e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long x = (long)Math.Sqrt(N);\n        return x * x == N ? (x + 1) * (x + 1) : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122812,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ff1b4bf894ad4777ae8d5ef9e739b037>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ff1b4bf894ad4777ae8d5ef9e739b037>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i += 1;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N)\n            return (sqrt + 1) * (sqrt + 1);\n        else\n            return (sqrt + 1) * (sqrt + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long x = (long)Math.Ceiling(Math.Sqrt(N));\n        return x*x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122812,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6acb10e57a9f4078a2a526c15d7af2f2>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N)\n            return (sqrt + 1) * (sqrt + 1);\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <74c63728ea184a05ae2667bc0cd851eb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <74c63728ea184a05ae2667bc0cd851eb>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long x = (long)Math.Sqrt(N);\n        if (x * x == N)\n            return (x + 1) * (x + 1);\n        return x * x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122812,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <30aa7afd9d5f480fa74520036147f620>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <30aa7afd9d5f480fa74520036147f620>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i < N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce72da81fadf4b07bf6f59b9d8ea8ca0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        return (sqrt + 1) * (sqrt + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09c9391e337549e781147bf81e5d431e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09c9391e337549e781147bf81e5d431e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09c9391e337549e781147bf81e5d431e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09c9391e337549e781147bf81e5d431e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long n = (long)Math.Sqrt(N);\n        return n * n == N ? (n + 1) * (n + 1) : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <35e69902585f410e877e4488a7821103>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <35e69902585f410e877e4488a7821103>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long x = (long)Math.Sqrt(N);\n        return x * x == N ? (x + 1) * (x + 1) : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122812,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ff1b4bf894ad4777ae8d5ef9e739b037>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ff1b4bf894ad4777ae8d5ef9e739b037>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        return (sqrt + 1) * (sqrt + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long root = (long)Math.Sqrt(N);\n        return root * root == N ? (root + 1) * (root + 1) : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122812,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a85a295efa4e460f9a871ada6e301913>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a85a295efa4e460f9a871ada6e301913>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        return (sqrt + 1) * (sqrt + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09c9391e337549e781147bf81e5d431e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09c9391e337549e781147bf81e5d431e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i < N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce72da81fadf4b07bf6f59b9d8ea8ca0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n        return (sqrt + 1) * (sqrt + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long n = (long)Math.Sqrt(N);\n        if (n * n == N)\n            return (n + 1) * (n + 1);\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122812,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <da584163683d47e0b33d899cac36017e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <da584163683d47e0b33d899cac36017e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n        return (sqrt + 1) * (sqrt + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N)\n            return (sqrt + 1) * (sqrt + 1);\n        else\n            return (sqrt + 1) * (sqrt + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i < N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce72da81fadf4b07bf6f59b9d8ea8ca0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        } else {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510018,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e88b7dc4de1946ebbfbbfa0a0c799553>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        // Your code here\n        long i = 1;\n        while (i * i <= N) {\n            i++;\n        }\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122812,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long sqrt = (long)Math.Sqrt(N);\n        if (sqrt * sqrt == N) {\n            return (sqrt + 1) * (sqrt + 1);\n        }\n        return (sqrt + 1) * (sqrt + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122811,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the next perfect square greater than a given number.\n    public static long NextPerfectSquare(long N) {\n        long i = 1;\n        while (i * i < N) i++;\n        return i * i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextPerfectSquare((35L)) == (36L));\n    Debug.Assert(NextPerfectSquare((6L)) == (9L));\n    Debug.Assert(NextPerfectSquare((9L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666122812,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8f24ac6a8a5e426db883d0430e8bd97b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    }
  ]
}
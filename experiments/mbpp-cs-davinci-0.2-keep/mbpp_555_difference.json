{
  "name": "mbpp_555_difference",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers.\n    public static long Difference(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_555_difference.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Difference((3L)) == (30L));\n    Debug.Assert(Difference((5L)) == (210L));\n    Debug.Assert(Difference((2L)) == (6L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += (long)Math.Pow(i, 3);\n        }\n        return (long)Math.Pow(n * (n + 1) / 2, 2) - sum;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum - n * n;",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += i * i * i;\n            sum += i;\n        }\n        return sum * sum - sumOfCubes;",
    "        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum - n * n;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += i * i * i;\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers * sumOfNumbers;",
    "        long sum = 0;\n        long sumOfCubes = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i;\n            sumOfCubes += i * i * i;\n        }\n        return sum * sum - sumOfCubes;",
    "        long sumOfCubes = 0;\n        long sumOfNaturals = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += (long)Math.Pow(i, 3);\n            sumOfNaturals += i;\n        }\n        return (long)Math.Pow(sumOfNaturals, 2) - sumOfCubes;",
    "        return (long)Math.Pow(n, 2) * (n + 1) * (3 * n + 2) / 12;",
    "        long sum = 0;\n        long sumOfCubes = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i;\n            sumOfCubes += i * i * i;\n        }\n        return sum * sum - sumOfCubes;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += (long)Math.Pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return (long)Math.Pow(sumOfNumbers, 2) - sumOfCubes;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += (long)Math.Pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return (long)Math.Pow(sumOfNumbers, 2) - sumOfCubes;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += i * i * i;\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers * sumOfNumbers;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return (n * (n + 1) / 2) * (n * (n + 1) / 2) - sum;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum - (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        long sumOfCubes = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += i;\n            sumOfCubes += i * i * i;\n        }\n        return sum * sum - sumOfCubes;",
    "        long sum = 0;\n        long sumOfCubes = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += i;\n            sumOfCubes += i * i * i;\n        }\n        return sumOfCubes - sum * sum;",
    "        return (long)Math.Pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += (long)Math.Pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return (long)Math.Pow(sumOfNumbers, 2) - sumOfCubes;",
    "        long sum = 0;\n        long sumOfCubes = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += i;\n            sumOfCubes += i * i * i;\n        }\n        return sum * sum - sumOfCubes;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += (long)Math.Pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return (long)Math.Pow(sumOfNumbers, 2) - sumOfCubes;"
  ]
}
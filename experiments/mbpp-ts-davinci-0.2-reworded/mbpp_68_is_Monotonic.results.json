{
  "name": "mbpp_68_is_Monotonic",
  "language": "ts",
  "prompt": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_68_is_Monotonic.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i: number = 0; i <= A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        }\n        else {\n            flag = false;\n        }\n    }\n    return flag;\n}\nconsole.log(is_Monotonic([5, 15, 31, 70, 120, 900]));\nconsole.log(is_Monotonic([-5, -15, -31, -70, -120, -900]));\nconsole.log(is_Monotonic([5, 10, 15, 20, 25]));\nconsole.log(is_Monotonic([-5, -10, -15, -20, -25]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 4, 5, 5, 5, 6, 7, 8, 8, 9, 10, 11]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 4, 5, 5, 5, 6, 7, 8, 8, 9, 10, 10]));\nconsole.log(is_Monotonic([10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1]));\nconsole.log(is_Monotonic([10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp90pson_d.js:26:12)\n    at Object.<anonymous> (/tmp/tmp90pson_d.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store = 0;\n  for (let i = 0; i < A.length; i++) {\n    if (A[i] >= A[i + 1]) {\n      store++;\n    }\n  }\n  if (store === A.length - 1) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp66ux_gdd.js:21:12)\n    at Object.<anonymous> (/tmp/tmp66ux_gdd.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpa8_wtxzy.js:20:12)\n    at Object.<anonymous> (/tmp/tmpa8_wtxzy.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = -1;\n        }\n        else {\n            store = 1;\n        }\n        if (store * flag < 0) {\n            return false;\n        }\n        flag = store;\n    }\n    return true;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, -9, -9, -10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, -10]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510047,
      "stdout": "../../../../tmp/tmpvmk4twrq.ts(12,21): error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.\n../../../../tmp/tmpvmk4twrq.ts(15,9): error TS2322: Type 'number' is not assignable to type 'boolean'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i: number = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpol5ksto0.js:23:12)\n    at Object.<anonymous> (/tmp/tmpol5ksto0.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxx_xbzjl.js:22:12)\n    at Object.<anonymous> (/tmp/tmpxx_xbzjl.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        }\n        else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpasxlj_p2.js:18:12)\n    at Object.<anonymous> (/tmp/tmpasxlj_p2.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = A[index] - A[index + 1];\n            if (store < 0) {\n                flag = false;\n            }\n        }\n        else {\n            store = A[index + 1] - A[index];\n            if (store < 0) {\n                flag = false;\n            }\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1zcl9mej.js:26:12)\n    at Object.<anonymous> (/tmp/tmp1zcl9mej.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number[] = A;\n  let isNonDecreasing: boolean = true;\n  let isNonIncreasing: boolean = true;\n  for (let i = 0; i < A.length; i++) {\n    if (A[i] < A[i + 1]) {\n      isNonDecreasing = false;\n    } else if (A[i] > A[i + 1]) {\n      isNonIncreasing = false;\n    }\n  }\n  return isNonDecreasing || isNonIncreasing;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510047,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = A[index] - A[index + 1];\n            if (store < 0) {\n                flag = false;\n            }\n        }\n        else {\n            store = A[index + 1] - A[index];\n            if (store < 0) {\n                flag = false;\n            }\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac2zcpl.js:27:12)\n    at Object.<anonymous> (/tmp/tmpsac2zcpl.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (store != 0) {\n            if ((A[index] - A[index - 1]) * store < 0) {\n                flag = false;\n                break;\n            }\n        } else {\n            store = A[index] - A[index - 1];\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpq8nva5qx.js:23:12)\n    at Object.<anonymous> (/tmp/tmpq8nva5qx.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = -1;\n        }\n        else if (A[i] <= A[i + 1]) {\n            store = 1;\n        }\n        else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, -9, -9, -10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxc0tqaux.js:26:12)\n    at Object.<anonymous> (/tmp/tmpxc0tqaux.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number[] = A;\n  let reversed: number[] = A.slice(0).reverse();\n  if (\n    JSON.stringify(A) === JSON.stringify(store.sort((a, b) => a - b)) ||\n    JSON.stringify(A) === JSON.stringify(reversed.sort((a, b) => a - b))\n  ) {\n    return true;\n  }\n  return false;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpczbb_pin.js:17:12)\n    at Object.<anonymous> (/tmp/tmpczbb_pin.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpv_fdq0ce.js:18:12)\n    at Object.<anonymous> (/tmp/tmpv_fdq0ce.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i: number = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([5, 15, 31, 70, 120]));\nconsole.log(is_Monotonic([-5, 10, 99, 123]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 4, 5, 5, 5, 6, 7, 8, 8, 9, 10, 11]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 4, 5, 5, 5, 6, 7, 8, 8, 9, 10, 10]));\nconsole.log(is_Monotonic([-5, -5, -5, -4, -4, -2, -2, 0, 0, 0, 0, 1, 1, 1, 2, 3, 3, 4, 4, 5]));\nconsole.log(is_Monotonic([-5, -5, -5, -4, -4, -2, -2, 0, 0, 0, 0, 1, 1, 1, 2, 3, 3, 4, 4, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 30, 30, 31, 31, 32, 32, 33, 33, 34, 34, 35, 35, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 41, 42, 42, 43, 43, 44, 44, 45, 45, 46\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510047,
      "stdout": "../../../../tmp/tmpp80spiqx.ts(24,1): error TS1005: ',' expected.\n../../../../tmp/tmpp80spiqx.ts(24,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i: number = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpol5ksto0.js:23:12)\n    at Object.<anonymous> (/tmp/tmpol5ksto0.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i: number = 0; i <= A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6wz2kseb.js:18:12)\n    at Object.<anonymous> (/tmp/tmp6wz2kseb.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number = 0;\n  let flag: boolean = true;\n  for (let index = 0; index < A.length; index++) {\n    if (store != 0) {\n      if (\n        (A[index] - A[index - 1] < 0 && store == 1) ||\n        (A[index] - A[index - 1] > 0 && store == -1)\n      ) {\n        flag = false;\n        break;\n      }\n    } else {\n      store = A[index] - A[index - 1];\n    }\n  }\n  return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, -9, -9, -10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, 9, 9, 10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, -9, 9, 10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, 9, 10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, 9, -9, 10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, 10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, 9, -10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, 9, -9, -10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, -9, -\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510047,
      "stdout": "../../../../tmp/tmphpxy4xng.ts(33,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (store != 0) {\n            if ((A[index] - A[index - 1]) * store < 0) {\n                flag = false;\n                break;\n            }\n        } else {\n            store = A[index] - A[index - 1];\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpq8nva5qx.js:23:12)\n    at Object.<anonymous> (/tmp/tmpq8nva5qx.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store == 0 || store == A.length - 1) {\n        flag = true;\n    } else {\n        flag = false;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpuar0uztu.js:24:12)\n    at Object.<anonymous> (/tmp/tmpuar0uztu.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 0) {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsc8d_9jk.js:22:12)\n    at Object.<anonymous> (/tmp/tmpsc8d_9jk.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 0) {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsc8d_9jk.js:22:12)\n    at Object.<anonymous> (/tmp/tmpsc8d_9jk.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store == 0 || store == A.length - 1) {\n        flag = true;\n    } else {\n        flag = false;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpuar0uztu.js:24:12)\n    at Object.<anonymous> (/tmp/tmpuar0uztu.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmppex9m_rf.js:19:12)\n    at Object.<anonymous> (/tmp/tmppex9m_rf.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number[] = A;\n  let reversed: number[] = A.slice(0).reverse();\n  if (\n    JSON.stringify(A) === JSON.stringify(store.sort((a, b) => a - b)) ||\n    JSON.stringify(A) === JSON.stringify(reversed.sort((a, b) => a - b))\n  ) {\n    return true;\n  }\n  return false;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 11, 12, 13]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 11, 12, 13, 13]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 11, 12, 13, 13, 14]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 11, 12, 13, 13, 14, 15]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 11, 12, 13, 13, 14, 15, 16]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 11, 12, 13, 13, 14, 15, 16, 17]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 11, 12, 13, 13, 14, 15, 16, 17, 18]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 11, 12, 13, 13, 14, 15, 16, 17, 18, 19]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 11, 12, 13, 13, 14\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "../../../../tmp/tmpvzbdeqfj.ts(24,1): error TS1005: ',' expected.\n../../../../tmp/tmpvzbdeqfj.ts(24,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store == 0 || store == A.length - 1) {\n        flag = true;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([5, 5, 5, 5, 5]));\nconsole.log(is_Monotonic([5, 5, 6, 5, 5]));\nconsole.log(is_Monotonic([1, 2, 3, 4, 5]));\nconsole.log(is_Monotonic([5, 4, 3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz0102k85.js:27:12)\n    at Object.<anonymous> (/tmp/tmpz0102k85.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        }\n        else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7wznjvfy.js:19:12)\n    at Object.<anonymous> (/tmp/tmp7wznjvfy.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number[] = A;\n  let reversed: number[] = A.slice(0).reverse();\n  if (\n    JSON.stringify(A) === JSON.stringify(store.sort((a, b) => a - b)) ||\n    JSON.stringify(A) === JSON.stringify(reversed.sort((a, b) => a - b))\n  ) {\n    return true;\n  }\n  return false;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpwkqg0k9l.js:17:12)\n    at Object.<anonymous> (/tmp/tmpwkqg0k9l.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    if (A.length <= 2) {\n        return true;\n    }\n    let direction: number = A[1] - A[0];\n    for (let i = 2; i < A.length; i++) {\n        if (direction === 0) {\n            direction = A[i] - A[i - 1];\n            continue;\n        }\n        if (breaksDirection(direction, A[i - 1], A[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "../../../../tmp/tmpv_69mbrx.ts(12,13): error TS2304: Cannot find name 'breaksDirection'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpephyyv0r.js:20:12)\n    at Object.<anonymous> (/tmp/tmpephyyv0r.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store == 0 || store == A.length - 1) {\n        flag = true;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp9gohwccl.js:24:12)\n    at Object.<anonymous> (/tmp/tmp9gohwccl.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmppvpfnd0v.js:23:12)\n    at Object.<anonymous> (/tmp/tmppvpfnd0v.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store == 0 || store == A.length - 1) {\n        flag = true;\n    } else {\n        flag = false;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpuar0uztu.js:24:12)\n    at Object.<anonymous> (/tmp/tmpuar0uztu.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = A[i] - A[i + 1];\n            if (store >= 0) {\n                flag = true;\n            }\n            else {\n                flag = false;\n            }\n        }\n        else {\n            store = A[i + 1] - A[i];\n            if (store >= 0) {\n                flag = true;\n            }\n            else {\n                flag = false;\n            }\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp4zpasc9p.js:31:12)\n    at Object.<anonymous> (/tmp/tmp4zpasc9p.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number[] = A;\n  let reversed: number[] = A.slice(0).reverse();\n  if (\n    JSON.stringify(A) === JSON.stringify(store.sort((a, b) => a - b)) ||\n    JSON.stringify(A) === JSON.stringify(reversed.sort((a, b) => a - b))\n  ) {\n    return true;\n  }\n  return false;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 11, 12, 13]));\nconsole.log(is_Monotonic([1, 1, 1, 1, 1, 1, 1, 1]));\nconsole.log(is_Monotonic([-1, -1, -1, -1, -1, -1, -1, -1]));\nconsole.log(is_Monotonic([1, 1, 1, 1, -1, -1, -1, -1]));\nconsole.log(is_Monotonic([1, 1, 0, 0, -1, -1, -1, -1]));\nconsole.log(is_Monotonic([1, 1, 0, 0, -1, -1, -1, -1, -2, -2, -2, -3, -3, -100, -100, -100]));\nconsole.log(is_Monotonic([1, 1, 0, 0, -1, -1, -1, -1, -2, -2, -2, -3, -3, -100, -100, -100, -101]));\nconsole.log(is_Monotonic([1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7]));\nconsole.log(is_Monotonic([1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3,\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "../../../../tmp/tmpxv24hjm9.ts(24,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmppvpfnd0v.js:23:12)\n    at Object.<anonymous> (/tmp/tmppvpfnd0v.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i: number = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 0) {\n        flag = false;\n    }\n    return flag;\n}\nconsole.log(is_Monotonic([5, 15, 31, 70, 120]));\nconsole.log(is_Monotonic([-5, 10, 99, 123]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "false\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp_fq5_8f4.js:23:12)\n    at Object.<anonymous> (/tmp/tmp_fq5_8f4.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store = 0;\n  let flag = true;\n  for (let i = 0; i < A.length; i++) {\n    if (store !== 0) {\n      if (Math.sign(A[i] - A[i - 1]) !== store) {\n        flag = false;\n        break;\n      }\n    } else {\n      store = Math.sign(A[i] - A[i - 1]);\n    }\n  }\n  return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpved_jky5.js:21:12)\n    at Object.<anonymous> (/tmp/tmpved_jky5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (store != 0) {\n            if ((A[index] - A[index - 1]) * store < 0) {\n                flag = false;\n                break;\n            }\n        } else {\n            store = A[index] - A[index - 1];\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpq8nva5qx.js:23:12)\n    at Object.<anonymous> (/tmp/tmpq8nva5qx.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i <= A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        }\n        else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmphs39soah.js:18:12)\n    at Object.<anonymous> (/tmp/tmphs39soah.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i: number = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp93euziff.js:23:12)\n    at Object.<anonymous> (/tmp/tmp93euziff.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (store != 0) {\n            if ((A[index] - A[index - 1]) * store < 0) {\n                flag = false;\n                break;\n            }\n        } else {\n            store = A[index] - A[index - 1];\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpq8nva5qx.js:23:12)\n    at Object.<anonymous> (/tmp/tmpq8nva5qx.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 0) {\n        flag = false;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpk5g7fdbt.js:21:12)\n    at Object.<anonymous> (/tmp/tmpk5g7fdbt.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = store + 0;\n        }\n        else {\n            store = store + 1;\n        }\n    }\n    if (store == 0 || store == A.length - 1) {\n        flag = true;\n    }\n    else {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgz7r7suf.js:25:12)\n    at Object.<anonymous> (/tmp/tmpgz7r7suf.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store == 0 || store == A.length - 1) {\n        flag = true;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmppqya1ejb.js:23:12)\n    at Object.<anonymous> (/tmp/tmppqya1ejb.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = -1;\n        }\n        else {\n            store = 1;\n        }\n        if (store * flag < 0) {\n            return false;\n        }\n        else {\n            flag = store;\n        }\n    }\n    return true;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "../../../../tmp/tmpgf325d61.ts(12,21): error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.\n../../../../tmp/tmpgf325d61.ts(16,13): error TS2322: Type 'number' is not assignable to type 'boolean'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number = 0;\n  let flag: boolean = true;\n  for (let i = 0; i <= A.length; i++) {\n    if (A[i] >= A[i + 1]) {\n      flag = true;\n    } else {\n      flag = false;\n    }\n  }\n  return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpam8nkeiq.js:18:12)\n    at Object.<anonymous> (/tmp/tmpam8nkeiq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = -1;\n        }\n        else {\n            store = 1;\n        }\n        if (store * flag < 0) {\n            return false;\n        }\n        flag = store;\n    }\n    return true;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "../../../../tmp/tmp6czmld8e.ts(12,21): error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.\n../../../../tmp/tmp6czmld8e.ts(15,9): error TS2322: Type 'number' is not assignable to type 'boolean'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store == 0 || store == A.length - 1) {\n        flag = true;\n    }\n    else {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxkmb0cmp.js:25:12)\n    at Object.<anonymous> (/tmp/tmpxkmb0cmp.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i: number = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([5, 15, 31, 70, 120, 900]));\nconsole.log(is_Monotonic([5, 15, 31, 70, 120, 900, 1]));\nconsole.log(is_Monotonic([5, 15, 31, 70, 120, 900, -1]));\nconsole.log(is_Monotonic([5, 15, 31, 70, 120, 900, -1, -2]));\nconsole.log(is_Monotonic([5, 15, 31, 70, 120, 900, -1, -2, -3]));\nconsole.log(is_Monotonic([5, 15, 31, 70, 120, 900, -1, -2, -3, -4]));\nconsole.log(is_Monotonic([5, 15, 31, 70, 120, 900, -1, -2, -3, -4, -5]));\nconsole.log(is_Monotonic([5, 15, 31, 70, 120, 900, -1, -2, -3, -4, -5, -6]));\nconsole.log(is_Monotonic([5, 15, 31, 70, 120, 900, -1, -2, -3, -4, -5, -6, -7]));\nconsole.log(is_Monotonic([5, 15, 31, 70, 120, 900, -1, -2, -3, -4, -5, -6, -7, -8]));\nconsole.log(is_Monotonic([5, 15, 31, 70, 120, 900, -1, -2, -3, -4, -5, -6, -7, -8, -9]));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpzh957bmy.js:34:12)\n    at Object.<anonymous> (/tmp/tmpzh957bmy.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i: number = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store == 0 || store == A.length - 1) {\n        flag = true;\n    }\n    else {\n        flag = false;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmprj0x0x1u.js:24:12)\n    at Object.<anonymous> (/tmp/tmprj0x0x1u.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number[] = A;\n  let isNonDecreasing: boolean = true;\n  let isNonIncreasing: boolean = true;\n  for (let i = 0; i < A.length; i++) {\n    if (A[i] < A[i + 1]) {\n      isNonDecreasing = false;\n    } else if (A[i] > A[i + 1]) {\n      isNonIncreasing = false;\n    }\n  }\n  return isNonDecreasing || isNonIncreasing;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510047,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = -1;\n        }\n        else {\n            store = 1;\n        }\n        if (store * flag < 0) {\n            return false;\n        }\n        flag = store;\n    }\n    return true;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "../../../../tmp/tmpnwvxh6th.ts(12,21): error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.\n../../../../tmp/tmpnwvxh6th.ts(15,9): error TS2322: Type 'number' is not assignable to type 'boolean'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmppvpfnd0v.js:23:12)\n    at Object.<anonymous> (/tmp/tmppvpfnd0v.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxx_xbzjl.js:22:12)\n    at Object.<anonymous> (/tmp/tmpxx_xbzjl.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store == 0 || store == A.length - 1) {\n        flag = true;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 9]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -9]));\nconsole.log(is_Monotonic([1, 1, 1, 1, 1, 1, 1, 1]));\nconsole.log(is_Monotonic([-1, -1, -1, -1, -1, -1, -1, -1]));\nconsole.log(is_Monotonic([1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(is_Monotonic([-1, -2, -3, -4, -5, -6, -7, -8]));\nconsole.log(is_Monotonic([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(is_Monotonic([-1, -2, -3, -4, -5, -6, -7, -8, -9]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "true\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpswjtmrfz.js:34:12)\n    at Object.<anonymous> (/tmp/tmpswjtmrfz.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i: number = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpnkmp6tlk.js:19:12)\n    at Object.<anonymous> (/tmp/tmpnkmp6tlk.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i <= A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        }\n        else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmphs39soah.js:18:12)\n    at Object.<anonymous> (/tmp/tmphs39soah.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number = 0;\n  let flag: boolean = true;\n  for (let i = 0; i <= A.length; i++) {\n    if (A[i] >= A[i + 1]) {\n      flag = true;\n    } else {\n      flag = false;\n    }\n  }\n  return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp72vda2n1.js:19:12)\n    at Object.<anonymous> (/tmp/tmp72vda2n1.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number = 0;\n  let flag: boolean = true;\n  for (let index = 0; index < A.length; index++) {\n    if (store != 0) {\n      if (Math.sign(store) != Math.sign(A[index] - A[index - 1])) {\n        flag = false;\n        break;\n      }\n    }\n    store = A[index] - A[index - 1];\n  }\n  return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpancgiza4.js:19:12)\n    at Object.<anonymous> (/tmp/tmpancgiza4.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        }\n        else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp_0jod28v.js:19:12)\n    at Object.<anonymous> (/tmp/tmp_0jod28v.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (store != 0) {\n            if ((A[index] - A[index - 1]) * store < 0) {\n                flag = false;\n                break;\n            }\n        } else {\n            store = A[index] - A[index - 1];\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpq8nva5qx.js:23:12)\n    at Object.<anonymous> (/tmp/tmpq8nva5qx.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = A[index] - A[index + 1];\n            if (store < 0) {\n                flag = false;\n            }\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpdpogmwkj.js:21:12)\n    at Object.<anonymous> (/tmp/tmpdpogmwkj.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpyb5e91em.js:19:12)\n    at Object.<anonymous> (/tmp/tmpyb5e91em.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number[] = A;\n  let reversed: number[] = A.slice(0).reverse();\n  if (\n    JSON.stringify(A) === JSON.stringify(store.sort((a, b) => a - b)) ||\n    JSON.stringify(A) === JSON.stringify(reversed.sort((a, b) => a - b))\n  ) {\n    return true;\n  }\n  return false;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpczbb_pin.js:17:12)\n    at Object.<anonymous> (/tmp/tmpczbb_pin.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 0) {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([5, 15, 31, 70, 120, 900]));\nconsole.log(is_Monotonic([5, 15, 31, 70, 120, 900, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "false\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpenevsuxc.js:23:12)\n    at Object.<anonymous> (/tmp/tmpenevsuxc.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number[] = A;\n  let reversed: number[] = A.slice(0).reverse();\n  if (\n    JSON.stringify(A) === JSON.stringify(store.sort((a, b) => a - b)) ||\n    JSON.stringify(A) === JSON.stringify(reversed.sort((a, b) => a - b))\n  ) {\n    return true;\n  }\n  return false;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 11, 12, 13]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "true\ntrue\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxtio8rs7.js:18:12)\n    at Object.<anonymous> (/tmp/tmpxtio8rs7.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = -1;\n        }\n        else {\n            store = 1;\n        }\n        if (store * flag < 0) {\n            return false;\n        }\n        flag = store;\n    }\n    return true;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "../../../../tmp/tmpnwvxh6th.ts(12,21): error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.\n../../../../tmp/tmpnwvxh6th.ts(15,9): error TS2322: Type 'number' is not assignable to type 'boolean'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpyb5e91em.js:19:12)\n    at Object.<anonymous> (/tmp/tmpyb5e91em.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number = 0;\n  let flag: boolean = true;\n  for (let i = 0; i <= A.length - 2; i++) {\n    store = A[i] - A[i + 1];\n    if (store != 0) {\n      flag = false;\n      break;\n    }\n  }\n  return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp5n0lfxff.js:18:12)\n    at Object.<anonymous> (/tmp/tmp5n0lfxff.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = store + 0;\n        }\n        else {\n            store = store + 1;\n        }\n    }\n    if (store == 0 || store == A.length - 1) {\n        flag = true;\n    }\n    else {\n        flag = false;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpt2jt90_q.js:24:12)\n    at Object.<anonymous> (/tmp/tmpt2jt90_q.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpa8_wtxzy.js:20:12)\n    at Object.<anonymous> (/tmp/tmpa8_wtxzy.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpyb5e91em.js:19:12)\n    at Object.<anonymous> (/tmp/tmpyb5e91em.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        }\n        else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7wznjvfy.js:19:12)\n    at Object.<anonymous> (/tmp/tmp7wznjvfy.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxx_xbzjl.js:22:12)\n    at Object.<anonymous> (/tmp/tmpxx_xbzjl.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 0) {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpnv4ht3i8.js:22:12)\n    at Object.<anonymous> (/tmp/tmpnv4ht3i8.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number[] = A;\n  let reversed: number[] = A.slice(0).reverse();\n  if (\n    JSON.stringify(A) === JSON.stringify(store.sort((a, b) => a - b)) ||\n    JSON.stringify(A) === JSON.stringify(reversed.sort((a, b) => a - b))\n  ) {\n    return true;\n  }\n  return false;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 11, 12, 13]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "../../../../tmp/tmpw_itliqc.ts(17,1): error TS1005: ',' expected.\n../../../../tmp/tmpw_itliqc.ts(17,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpudcqx_r0.js:18:12)\n    at Object.<anonymous> (/tmp/tmpudcqx_r0.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store = 0;\n  let flag = true;\n  for (let i = 0; i < A.length; i++) {\n    if (A[i] >= store) {\n      store = A[i];\n    } else {\n      flag = false;\n    }\n  }\n  if (flag === false) {\n    flag = true;\n    store = A[0];\n    for (let i = 1; i < A.length; i++) {\n      if (A[i] <= store) {\n        store = A[i];\n      } else {\n        flag = false;\n      }\n    }\n  }\n  return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "../../../../tmp/tmpeosc3d96.ts(30,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number = 0;\n  let flag: boolean = true;\n  for (let i = 0; i <= A.length - 2; i++) {\n    store = A[i] - A[i + 1];\n    if (store != 0) {\n      flag = false;\n      break;\n    }\n  }\n  return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp2o03al9n.js:17:12)\n    at Object.<anonymous> (/tmp/tmp2o03al9n.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([5, 15, 31, 70, 120]));\nconsole.log(is_Monotonic([-5, 10, 99, 123]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "false\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsl3ou2_f.js:24:12)\n    at Object.<anonymous> (/tmp/tmpsl3ou2_f.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number = 0;\n  let flag: boolean = true;\n  for (let i = 0; i <= A.length - 2; i++) {\n    store = A[i] - A[i + 1];\n    if (store != 0) {\n      flag = false;\n      break;\n    }\n  }\n  return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp5n0lfxff.js:18:12)\n    at Object.<anonymous> (/tmp/tmp5n0lfxff.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number[] = A;\n  let reversed: number[] = A.slice(0).reverse();\n  if (\n    JSON.stringify(A) === JSON.stringify(store.sort((a, b) => a - b)) ||\n    JSON.stringify(A) === JSON.stringify(reversed.sort((a, b) => a - b))\n  ) {\n    return true;\n  }\n  return false;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpwkqg0k9l.js:17:12)\n    at Object.<anonymous> (/tmp/tmpwkqg0k9l.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i: number = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([5, 15, 31, 70, 120, 900]));\nconsole.log(is_Monotonic([5, 15, 31, 70, 120, 900, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "false\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpuw54m65g.js:24:12)\n    at Object.<anonymous> (/tmp/tmpuw54m65g.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxx_xbzjl.js:22:12)\n    at Object.<anonymous> (/tmp/tmpxx_xbzjl.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number = 0;\n  let flag: boolean = true;\n  for (let i = 0; i <= A.length - 2; i++) {\n    store = A[i] - A[i + 1];\n    if (store != 0) {\n      flag = false;\n      break;\n    }\n  }\n  return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp2o03al9n.js:17:12)\n    at Object.<anonymous> (/tmp/tmp2o03al9n.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store = 0;\n    let flag = true;\n    if (A.length <= 2) {\n        return true;\n    }\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] > A[i + 1]) {\n            if (store === 0) {\n                store = -1;\n            } else if (store === 1) {\n                flag = false;\n                break;\n            }\n        } else if (A[i] < A[i + 1]) {\n            if (store === 0) {\n                store = 1;\n            } else if (store === -1) {\n                flag = false;\n                break;\n            }\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpyb5e91em.js:19:12)\n    at Object.<anonymous> (/tmp/tmpyb5e91em.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpyb5e91em.js:19:12)\n    at Object.<anonymous> (/tmp/tmpyb5e91em.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 0) {\n        flag = false;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpk5g7fdbt.js:21:12)\n    at Object.<anonymous> (/tmp/tmpk5g7fdbt.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number[] = A;\n  let reversed: number[] = A.slice(0).reverse();\n  if (\n    JSON.stringify(A) === JSON.stringify(store.sort((a, b) => a - b)) ||\n    JSON.stringify(A) === JSON.stringify(reversed.sort((a, b) => a - b))\n  ) {\n    return true;\n  }\n  return false;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpwkqg0k9l.js:17:12)\n    at Object.<anonymous> (/tmp/tmpwkqg0k9l.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number[] = A;\n  let isNonDecreasing: boolean = true;\n  let isNonIncreasing: boolean = true;\n  for (let i = 0; i < A.length; i++) {\n    if (A[i] < A[i + 1]) {\n      isNonDecreasing = false;\n    } else if (A[i] > A[i + 1]) {\n      isNonIncreasing = false;\n    }\n  }\n  return isNonDecreasing || isNonIncreasing;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510047,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number = 0;\n  let flag: boolean = true;\n  for (let index = 0; index < A.length; index++) {\n    if (store != 0) {\n      if (\n        (A[index] - A[index - 1] < 0 && store == 1) ||\n        (A[index] - A[index - 1] > 0 && store == -1)\n      ) {\n        flag = false;\n        break;\n      }\n    } else {\n      if (A[index] - A[index - 1] != 0) {\n        store = A[index] - A[index - 1];\n      }\n    }\n  }\n  return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 10, 10, 10, 10, 10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10, -10, -10, -10, -10, -10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10, -10, -10, -10, -10, -10, -10, -10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "../../../../tmp/tmpalhdci6n.ts(32,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 0) {\n        flag = false;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpk5g7fdbt.js:21:12)\n    at Object.<anonymous> (/tmp/tmpk5g7fdbt.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i <= A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        }\n        else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122894,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp2pf0_55u.js:19:12)\n    at Object.<anonymous> (/tmp/tmp2pf0_55u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i: number = 0; i <= A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6wz2kseb.js:18:12)\n    at Object.<anonymous> (/tmp/tmp6wz2kseb.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i <= A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        }\n        else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpk944r06u.js:19:12)\n    at Object.<anonymous> (/tmp/tmpk944r06u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i: number = 0; i <= A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6wz2kseb.js:18:12)\n    at Object.<anonymous> (/tmp/tmp6wz2kseb.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number[] = A;\n  let reversed: number[] = A.slice(0).reverse();\n  if (\n    JSON.stringify(A) === JSON.stringify(store.sort((a, b) => a - b)) ||\n    JSON.stringify(A) === JSON.stringify(reversed.sort((a, b) => a - b))\n  ) {\n    return true;\n  }\n  return false;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpwkqg0k9l.js:17:12)\n    at Object.<anonymous> (/tmp/tmpwkqg0k9l.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (store != 0) {\n            if ((A[index] - A[index - 1]) * store < 0) {\n                flag = false;\n                break;\n            }\n        } else {\n            store = A[index] - A[index - 1];\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpq8nva5qx.js:23:12)\n    at Object.<anonymous> (/tmp/tmpq8nva5qx.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpp3_q9m3x.js:19:12)\n    at Object.<anonymous> (/tmp/tmpp3_q9m3x.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store = 0;\n  let flag = true;\n  for (let i = 0; i < A.length; i++) {\n    if (store !== 0) {\n      if (Math.sign(A[i] - A[i - 1]) !== store) {\n        flag = false;\n        break;\n      }\n    } else {\n      store = Math.sign(A[i] - A[i - 1]);\n    }\n  }\n  return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122894,
      "stdout": "../../../../tmp/tmpjjesw87w.ts(22,1): error TS1005: ',' expected.\n../../../../tmp/tmpjjesw87w.ts(22,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp2c2bs317.js:23:12)\n    at Object.<anonymous> (/tmp/tmp2c2bs317.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpyb5e91em.js:19:12)\n    at Object.<anonymous> (/tmp/tmpyb5e91em.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (store != 0) {\n            if ((A[index] - A[index - 1]) * store < 0) {\n                flag = false;\n                break;\n            }\n        } else {\n            store = A[index] - A[index - 1];\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpdrukzphb.js:24:12)\n    at Object.<anonymous> (/tmp/tmpdrukzphb.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxx_xbzjl.js:22:12)\n    at Object.<anonymous> (/tmp/tmpxx_xbzjl.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmppvpfnd0v.js:23:12)\n    at Object.<anonymous> (/tmp/tmppvpfnd0v.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number[] = [];\n  let flag: boolean = true;\n  if (A.length <= 2) {\n    return true;\n  }\n  for (let i = 0; i < A.length - 1; i++) {\n    store.push(A[i + 1] - A[i]);\n  }\n  for (let i = 0; i < store.length - 1; i++) {\n    if (store[i] * store[i + 1] < 0) {\n      flag = false;\n    }\n  }\n  return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    if (A.length <= 2) {\n        return true;\n    }\n\n    let direction: number = A[1] - A[0];\n    for (let i = 2; i < A.length; i++) {\n        if (direction === 0) {\n            direction = A[i] - A[i - 1];\n            continue;\n        }\n\n        if (breaksDirection(direction, A[i - 1], A[i])) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122894,
      "stdout": "../../../../tmp/tmp2zuf_4yu.ts(14,13): error TS2304: Cannot find name 'breaksDirection'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (store != 0) {\n            if ((A[index] - A[index - 1]) * store < 0) {\n                flag = false;\n                break;\n            }\n        } else {\n            store = A[index] - A[index - 1];\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpq8nva5qx.js:23:12)\n    at Object.<anonymous> (/tmp/tmpq8nva5qx.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store = 0;\n  let flag = true;\n  for (let i = 0; i < A.length; i++) {\n    if (store !== 0) {\n      if (Math.sign(A[i] - A[i - 1]) !== store) {\n        flag = false;\n        break;\n      }\n    } else {\n      store = Math.sign(A[i] - A[i - 1]);\n    }\n  }\n  return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122894,
      "stdout": "../../../../tmp/tmpjjesw87w.ts(22,1): error TS1005: ',' expected.\n../../../../tmp/tmpjjesw87w.ts(22,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        }\n        else {\n            store = store + 1;\n        }\n    }\n    if (store == 0 || store == A.length - 1) {\n        flag = true;\n    }\n    else {\n        flag = false;\n    }\n    return flag;\n}\nconsole.log(is_Monotonic([5, 15, 31, 70, 120, 900]));\nconsole.log(is_Monotonic([-5, -15, -31, -70, -120, -900]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 4, 5, 5, 5, 6, 7, 8, 8, 9, 10, 11]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 4, 5, 5, 5, 5, 6, 7, 8, 8, 9, 10, 11]));\nconsole.log(is_Monotonic([1, 1, 1, 1, 4, 5, 5, 5, 5, 6, 7, 8, 8, 9, 10, 11]));\nconsole.log(is_Monotonic([1, 1, 1, 1, 1, 5, 5, 5, 5, 6, 7, 8, 8, 9, 10, 11]));\nconsole.log(is_Monotonic([1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 6, 7, 8, 8, 9, 10, 11]));\nconsole.log(is_Monotonic([1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 6, 7, 8, 8, 9, 10, 11]));\nconsole.log(is_Monotonic([1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 6, 7, 8, 8, 9, 10, 11]));\nconsole.log(is_Monotonic([1,\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "../../../../tmp/tmp2f5polla.ts(31,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            flag = true;\n        }\n        else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp94ju5dro.js:19:12)\n    at Object.<anonymous> (/tmp/tmp94ju5dro.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store = 0;\n  for (let i = 0; i < A.length; i++) {\n    if (A[i] >= A[i + 1]) {\n      store = store + 1;\n    }\n  }\n  if (store === A.length - 1) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpl4m3gfws.js:21:12)\n    at Object.<anonymous> (/tmp/tmpl4m3gfws.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i: number = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp14bwgdi7.js:20:12)\n    at Object.<anonymous> (/tmp/tmp14bwgdi7.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number = 0;\n  let flag: boolean = true;\n  for (let i = 0; i <= A.length; i++) {\n    if (A[i] >= A[i + 1]) {\n      flag = true;\n    } else {\n      flag = false;\n    }\n  }\n  return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp72vda2n1.js:19:12)\n    at Object.<anonymous> (/tmp/tmp72vda2n1.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number = 0;\n  let flag: boolean = true;\n  for (let i = 0; i <= A.length; i++) {\n    if (A[i] >= A[i + 1]) {\n      flag = true;\n    } else {\n      flag = false;\n    }\n  }\n  return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp72vda2n1.js:19:12)\n    at Object.<anonymous> (/tmp/tmp72vda2n1.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number = 0;\n  let flag: boolean = true;\n  for (let index = 0; index <= A.length; index++) {\n    if (A[index] >= A[index + 1]) {\n      flag = true;\n    } else {\n      flag = false;\n    }\n  }\n  return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpilqmg1au.js:19:12)\n    at Object.<anonymous> (/tmp/tmpilqmg1au.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpyb5e91em.js:19:12)\n    at Object.<anonymous> (/tmp/tmpyb5e91em.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = -1;\n        }\n        else {\n            store = 1;\n        }\n        if (store * flag < 0) {\n            return false;\n        }\n        flag = store;\n    }\n    return true;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "../../../../tmp/tmpnp1upva4.ts(24,1): error TS1005: ',' expected.\n../../../../tmp/tmpnp1upva4.ts(24,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0zyv3jzm.js:19:12)\n    at Object.<anonymous> (/tmp/tmp0zyv3jzm.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpyb5e91em.js:19:12)\n    at Object.<anonymous> (/tmp/tmpyb5e91em.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i: number = 0; i <= A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        }\n        else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpyc207mw7.js:18:12)\n    at Object.<anonymous> (/tmp/tmpyc207mw7.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (store != 0) {\n            if ((A[index] - A[index - 1]) * store < 0) {\n                flag = false;\n                break;\n            }\n        } else {\n            store = A[index] - A[index - 1];\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpq8nva5qx.js:23:12)\n    at Object.<anonymous> (/tmp/tmpq8nva5qx.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpqgtmuvz8.js:23:12)\n    at Object.<anonymous> (/tmp/tmpqgtmuvz8.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmppvpfnd0v.js:23:12)\n    at Object.<anonymous> (/tmp/tmppvpfnd0v.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number[] = A;\n  let reversed: number[] = A.slice(0).reverse();\n  if (\n    JSON.stringify(A) === JSON.stringify(store.sort((a, b) => a - b)) ||\n    JSON.stringify(A) === JSON.stringify(reversed.sort((a, b) => a - b))\n  ) {\n    return true;\n  }\n  return false;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpczbb_pin.js:17:12)\n    at Object.<anonymous> (/tmp/tmpczbb_pin.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number = 0;\n  let flag: boolean = true;\n  for (let index = 0; index < A.length; index++) {\n    if (store != 0) {\n      if (\n        (A[index] - A[index - 1] > 0 && store == 1) ||\n        (A[index] - A[index - 1] < 0 && store == -1)\n      ) {\n        flag = true;\n      } else {\n        flag = false;\n        break;\n      }\n    } else {\n      if (A[index] - A[index - 1] > 0) {\n        store = 1;\n      } else if (A[index] - A[index - 1] < 0) {\n        store = -1;\n      } else {\n        store = 0;\n      }\n    }\n  }\n  return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 10, 11]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10, -10, -11]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10, -10, -11, -11]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10, -10, -11, -11, -11]));\nconsole.log(is_Monotonic([-1, -1, -2, -3, -7, -9, -9, -10, -10, -11, -11, -11]));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "../../../../tmp/tmpdcr7nju6.ts(37,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i <= A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        }\n        else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmphs39soah.js:18:12)\n    at Object.<anonymous> (/tmp/tmphs39soah.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpdno8v4i5.js:23:12)\n    at Object.<anonymous> (/tmp/tmpdno8v4i5.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store == 0) {\n        flag = true;\n    } else {\n        flag = false;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpwepv5a66.js:24:12)\n    at Object.<anonymous> (/tmp/tmpwepv5a66.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 0) {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmprvjtkdy7.js:22:12)\n    at Object.<anonymous> (/tmp/tmprvjtkdy7.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmppvpfnd0v.js:23:12)\n    at Object.<anonymous> (/tmp/tmppvpfnd0v.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (store != 0) {\n            if ((A[index] - A[index - 1]) * store < 0) {\n                flag = false;\n                break;\n            }\n        } else {\n            store = A[index] - A[index - 1];\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpdrukzphb.js:24:12)\n    at Object.<anonymous> (/tmp/tmpdrukzphb.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number[] = A;\n  let reversed: number[] = A.slice(0).reverse();\n  if (\n    JSON.stringify(A) === JSON.stringify(store.sort((a, b) => a - b)) ||\n    JSON.stringify(A) === JSON.stringify(reversed.sort((a, b) => a - b))\n  ) {\n    return true;\n  }\n  return false;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 11, 12, 13]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 11, 12, 13]));\nconsole.log(is_Monotonic([-1, -1, -2, -3, -7, -9, -9, -10, -11, -12, -13]));\nconsole.log(is_Monotonic([-1, -1, -2, -3, -7, -9, -9, -10, -11, -12, -13]));\nconsole.log(is_Monotonic([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]));\nconsole.log(is_Monotonic([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]));\nconsole.log(is_Monotonic([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]));\nconsole.log(is_Monotonic([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0]));\nconsole.log(is_Monotonic([1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]));\nconsole.log(is_Monotonic([-1, -\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "../../../../tmp/tmpgiy1uczv.ts(25,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpa8_wtxzy.js:20:12)\n    at Object.<anonymous> (/tmp/tmpa8_wtxzy.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = store + 0;\n        }\n        else {\n            store = store + 1;\n        }\n    }\n    if (store == 0 || store == A.length - 1) {\n        flag = true;\n    }\n    else {\n        flag = false;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpt2jt90_q.js:24:12)\n    at Object.<anonymous> (/tmp/tmpt2jt90_q.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i <= A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        }\n        else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpk944r06u.js:19:12)\n    at Object.<anonymous> (/tmp/tmpk944r06u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store = 0;\n  let flag = true;\n  for (let i = 0; i < A.length; i++) {\n    if (store !== 0) {\n      if (Math.sign(A[i] - A[i - 1]) !== store) {\n        flag = false;\n        break;\n      }\n    } else {\n      store = Math.sign(A[i] - A[i - 1]);\n    }\n  }\n  return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8eh5d6v_.js:22:12)\n    at Object.<anonymous> (/tmp/tmp8eh5d6v_.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i - 1]) {\n            store = 1;\n        }\n        else {\n            store = 2;\n        }\n        if (store != 1 && store != 2) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122897,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpyeu3pkn8.js:24:12)\n    at Object.<anonymous> (/tmp/tmpyeu3pkn8.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        }\n        else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp_0jod28v.js:19:12)\n    at Object.<anonymous> (/tmp/tmp_0jod28v.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122897,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpwnbj1q0o.js:22:12)\n    at Object.<anonymous> (/tmp/tmpwnbj1q0o.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store == 0 || store == A.length - 1) {\n        flag = true;\n    }\n    else {\n        flag = false;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122897,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp3dyh3_4i.js:24:12)\n    at Object.<anonymous> (/tmp/tmp3dyh3_4i.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number[] = A.slice(0);\n    let reversed: number[] = A.slice(0).reverse();\n    if (A.join('') === store.sort((a, b) => a - b).join('') || A.join('') === reversed.sort((a, b) => a - b).join('')) {\n        return true\n    }\n    return false;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122897,
      "stdout": "../../../../tmp/tmp6lc990lo.ts(15,1): error TS1005: ',' expected.\n../../../../tmp/tmp6lc990lo.ts(15,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpp3_q9m3x.js:19:12)\n    at Object.<anonymous> (/tmp/tmpp3_q9m3x.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (store != 0) {\n            if ((A[index] - A[index - 1]) * store < 0) {\n                flag = false;\n                break;\n            }\n        } else {\n            store = A[index] - A[index - 1];\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpq8nva5qx.js:23:12)\n    at Object.<anonymous> (/tmp/tmpq8nva5qx.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 21]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122897,
      "stdout": "true\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpcye3ah0v.js:26:12)\n    at Object.<anonymous> (/tmp/tmpcye3ah0v.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index <= A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122897,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp_ypynwnx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp_ypynwnx.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number[] = A;\n  let reversed: number[] = A.slice(0).reverse();\n  if (\n    JSON.stringify(A) === JSON.stringify(store.sort((a, b) => a - b)) ||\n    JSON.stringify(A) === JSON.stringify(reversed.sort((a, b) => a - b))\n  ) {\n    return true;\n  }\n  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1frfa3co.js:16:12)\n    at Object.<anonymous> (/tmp/tmp1frfa3co.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number = 0;\n  let flag: boolean = true;\n  for (let i = 0; i <= A.length - 2; i++) {\n    store = A[i] - A[i + 1];\n    if (store != 0) {\n      flag = false;\n      break;\n    }\n  }\n  return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp2o03al9n.js:17:12)\n    at Object.<anonymous> (/tmp/tmp2o03al9n.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number[] = A;\n  let isNonDecreasing: boolean = true;\n  let isNonIncreasing: boolean = true;\n\n  for (let i: number = 0; i < store.length; i++) {\n    if (store[i] < store[i - 1]) {\n      isNonDecreasing = false;\n    }\n    if (store[i] > store[i - 1]) {\n      isNonIncreasing = false;\n    }\n  }\n\n  return isNonDecreasing || isNonIncreasing;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122897,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        }\n        else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7wznjvfy.js:19:12)\n    at Object.<anonymous> (/tmp/tmp7wznjvfy.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store == 0 || store == A.length - 1) {\n        flag = true;\n    } else {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpitufp6w5.js:25:12)\n    at Object.<anonymous> (/tmp/tmpitufp6w5.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i: number = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\nconsole.log(is_Monotonic([5, 4, 4, 3, 2, 2, 2, 1]));\nconsole.log(is_Monotonic([5, 4, 4, 3, 2, 2, 2, 1, 0, -1, -2, -3, -4]));\nconsole.log(is_Monotonic([5, 4, 4, 3, 2, 2, 2, 1, 0, -1, -2, -3, -4, -5]));\nconsole.log(is_Monotonic([5, 4, 4, 3, 2, 2, 2, 1, 0, -1, -2, -3, -4, -5, -6]));\nconsole.log(is_Monotonic([5, 4, 4, 3, 2, 2, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7]));\nconsole.log(is_Monotonic([5, 4, 4, 3, 2, 2, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8]));\nconsole.log(is_Monotonic([5, 4, 4, 3, 2, 2, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9]));\nconsole.log(is_Monotonic([5, 4, 4, 3, 2, 2, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(is_Monotonic([5, 4, 4, 3, 2, 2, 2, 1, 0, -1, -2, -3, -\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122897,
      "stdout": "../../../../tmp/tmp8lsaj6ou.ts(24,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number = 0;\n  let flag: boolean = true;\n  for (let i = 0; i < A.length; i++) {\n    if (A[i] >= A[i + 1]) {\n      flag = true;\n    } else {\n      flag = false;\n      break;\n    }\n  }\n  return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpo4t7te9g.js:20:12)\n    at Object.<anonymous> (/tmp/tmpo4t7te9g.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store == 0 || store == A.length - 1) {\n        flag = true;\n    }\n    else {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxkmb0cmp.js:25:12)\n    at Object.<anonymous> (/tmp/tmpxkmb0cmp.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i: number = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 0) {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122897,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp2dubb3ke.js:22:12)\n    at Object.<anonymous> (/tmp/tmp2dubb3ke.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i: number = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpnkmp6tlk.js:19:12)\n    at Object.<anonymous> (/tmp/tmpnkmp6tlk.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number[] = A;\n  let reversed: number[] = A.slice(0).reverse();\n  if (\n    JSON.stringify(A) === JSON.stringify(store.sort((a, b) => a - b)) ||\n    JSON.stringify(A) === JSON.stringify(reversed.sort((a, b) => a - b))\n  ) {\n    return true;\n  }\n  return false;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpwkqg0k9l.js:17:12)\n    at Object.<anonymous> (/tmp/tmpwkqg0k9l.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (store != 0) {\n            if ((A[index] - A[index - 1]) * store < 0) {\n                flag = false;\n                break;\n            }\n        } else {\n            store = A[index] - A[index - 1];\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpq8nva5qx.js:23:12)\n    at Object.<anonymous> (/tmp/tmpq8nva5qx.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxx_xbzjl.js:22:12)\n    at Object.<anonymous> (/tmp/tmpxx_xbzjl.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number[] = [];\n  let flag: boolean = true;\n  if (A.length <= 2) {\n    return true;\n  }\n  for (let i = 0; i < A.length - 1; i++) {\n    store.push(A[i + 1] - A[i]);\n  }\n  for (let i = 0; i < store.length - 1; i++) {\n    if (store[i] * store[i + 1] < 0) {\n      flag = false;\n    }\n  }\n  return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i: number = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpnkmp6tlk.js:19:12)\n    at Object.<anonymous> (/tmp/tmpnkmp6tlk.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        }\n        else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp_0jod28v.js:19:12)\n    at Object.<anonymous> (/tmp/tmp_0jod28v.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store = 0;\n  for (let i = 0; i < A.length; i++) {\n    if (A[i] >= A[i + 1]) {\n      store = store + 1;\n    }\n  }\n  if (store === A.length - 1) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nconsole.log(is_Monotonic([1, 2, 3, 4, 5]));\nconsole.log(is_Monotonic([5, 4, 3, 2, 1]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 4, 4, 5, 5, 5]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 3, 4, 4, 10, 9]));\nconsole.log(is_Monotonic([1, 1, 1, 2, 3, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "false\ntrue\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp13dx3ixg.js:25:12)\n    at Object.<anonymous> (/tmp/tmp13dx3ixg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = -1;\n        }\n        else {\n            store = 1;\n        }\n        if (store * flag < 0) {\n            return false;\n        }\n        flag = store;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "../../../../tmp/tmp7y7j8tl4.ts(12,21): error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.\n../../../../tmp/tmp7y7j8tl4.ts(15,9): error TS2322: Type 'number' is not assignable to type 'boolean'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store = 0;\n  for (let i = 0; i < A.length; i++) {\n    if (A[i] >= A[i + 1]) {\n      store++;\n    }\n  }\n  if (store === A.length - 1) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nconsole.log(is_Monotonic([1, 2, 3, 4, 5, 6, 7]));\nconsole.log(is_Monotonic([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(is_Monotonic([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\nconsole.log(is_Monotonic([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\nconsole.log(is_Monotonic([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]));\nconsole.log(is_Monotonic([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]));\nconsole.log(is_Monotonic([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50])\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "../../../../tmp/tmpr3euk23i.ts(23,1): error TS1005: ',' expected.\n../../../../tmp/tmpr3euk23i.ts(23,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number[] = A;\n  let reversed: number[] = A.slice(0).reverse();\n  if (\n    JSON.stringify(A) === JSON.stringify(store.sort((a, b) => a - b)) ||\n    JSON.stringify(A) === JSON.stringify(reversed.sort((a, b) => a - b))\n  ) {\n    return true;\n  }\n  return false;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10, 9]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10, -9]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10, -11]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10, -11, -11]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10, -11, -11, -11]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10, -11, -11, -11, -11]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10, -11, -11, -11, -11, -11]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122897,
      "stdout": "../../../../tmp/tmp6rj2_gg2.ts(25,1): error TS1005: ',' expected.\n../../../../tmp/tmp6rj2_gg2.ts(25,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = store + 0;\n        }\n        else {\n            store = store + 1;\n        }\n    }\n    if (store == 0 || store == A.length - 1) {\n        flag = true;\n    }\n    else {\n        flag = false;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpt2jt90_q.js:24:12)\n    at Object.<anonymous> (/tmp/tmpt2jt90_q.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number[] = A;\n  let reversed: number[] = A.slice(0).reverse();\n  if (\n    JSON.stringify(A) === JSON.stringify(store.sort((a, b) => a - b)) ||\n    JSON.stringify(A) === JSON.stringify(reversed.sort((a, b) => a - b))\n  ) {\n    return true;\n  }\n  return false;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpwkqg0k9l.js:17:12)\n    at Object.<anonymous> (/tmp/tmpwkqg0k9l.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        }\n        else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp_0jod28v.js:19:12)\n    at Object.<anonymous> (/tmp/tmp_0jod28v.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store == 0 || store == A.length - 1) {\n        flag = true;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp9gohwccl.js:24:12)\n    at Object.<anonymous> (/tmp/tmp9gohwccl.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number[] = A;\n  let reversed: number[] = A.slice(0).reverse();\n  if (\n    JSON.stringify(A) === JSON.stringify(store.sort((a, b) => a - b)) ||\n    JSON.stringify(A) === JSON.stringify(reversed.sort((a, b) => a - b))\n  ) {\n    return true;\n  }\n  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1frfa3co.js:16:12)\n    at Object.<anonymous> (/tmp/tmp1frfa3co.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpdno8v4i5.js:23:12)\n    at Object.<anonymous> (/tmp/tmpdno8v4i5.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i: number = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpk5zfnjkc.js:22:12)\n    at Object.<anonymous> (/tmp/tmpk5zfnjkc.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store = 0;\n  let flag = true;\n  for (let i = 0; i < A.length - 1; i++) {\n    store = A[i] - A[i + 1];\n    if (store !== 0) {\n      flag = false;\n      break;\n    }\n  }\n  return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp299g3dfw.js:17:12)\n    at Object.<anonymous> (/tmp/tmp299g3dfw.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i: number = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 0) {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmppef_vbbp.js:22:12)\n    at Object.<anonymous> (/tmp/tmppef_vbbp.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number = 0;\n  let flag: boolean = true;\n  for (let i = 0; i <= A.length; i++) {\n    if (A[i] >= A[i + 1]) {\n      flag = true;\n    } else {\n      flag = false;\n    }\n  }\n  return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp72vda2n1.js:19:12)\n    at Object.<anonymous> (/tmp/tmp72vda2n1.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store == 0 || store == A.length - 1) {\n        flag = true;\n    } else {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(is_Monotonic([9, 8, 7, 6, 5, 4, 3, 2, 1]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 4, 5, 5, 5, 6, 7, 8, 8, 9, 10, 11]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 4, 5, -5, 5, 6, 7, 8, 8, 9, 10, 11]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 4, 5, 5, 5, 6, -7, 8, 8, 9, 10, 11]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpqd90yzvz.js:29:12)\n    at Object.<anonymous> (/tmp/tmpqd90yzvz.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122897,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpwnbj1q0o.js:22:12)\n    at Object.<anonymous> (/tmp/tmpwnbj1q0o.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i: number = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\nconsole.log(is_Monotonic([5, 15, 31, 70, 120, 900]));\nconsole.log(is_Monotonic([5, 15, 31, 70, 120, 900, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "false\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpyv_e3mi3.js:24:12)\n    at Object.<anonymous> (/tmp/tmpyv_e3mi3.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (store != 0) {\n            if ((A[index] - A[index - 1]) * store < 0) {\n                flag = false;\n                break;\n            }\n        } else {\n            store = A[index] - A[index - 1];\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpq8nva5qx.js:23:12)\n    at Object.<anonymous> (/tmp/tmpq8nva5qx.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (store != 0) {\n            if ((A[index] - A[index - 1]) * store < 0) {\n                flag = false;\n                break;\n            }\n        } else {\n            store = A[index] - A[index - 1];\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpdrukzphb.js:24:12)\n    at Object.<anonymous> (/tmp/tmpdrukzphb.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i: number = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        }\n        else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpc4czfgks.js:19:12)\n    at Object.<anonymous> (/tmp/tmpc4czfgks.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = -1;\n        }\n        else {\n            store = 1;\n        }\n        if (store * flag < 0) {\n            return false;\n        }\n        flag = store;\n    }\n    return true;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "../../../../tmp/tmpnwvxh6th.ts(12,21): error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.\n../../../../tmp/tmpnwvxh6th.ts(15,9): error TS2322: Type 'number' is not assignable to type 'boolean'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number[] = A.slice(0);\n    let reversed: number[] = A.slice(0).reverse();\n    if (\n        JSON.stringify(A) === JSON.stringify(store.sort((a, b) => a - b)) ||\n        JSON.stringify(A) === JSON.stringify(reversed.sort((a, b) => a - b))\n    ) {\n        return true;\n    }\n    return false;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10]));\nconsole.log(is_Monotonic([-1, -1, -2, -3, -7, -9, -9, -10]));\nconsole.log(is_Monotonic([-1, -1, -2, -3, -7, -9, -9, -10]));\nconsole.log(is_Monotonic([-1, -1, -2, -3, -7, -9, -9, -10]));\nconsole.log(is_Monotonic([-1, -1, -2, -3, -7, -9, -9, -10]));\nconsole.log(is_Monotonic([-1, -1, -2, -3, -7, -9, -9, -10]));\nconsole.log(is_Monotonic([-1, -1, -2, -3, -7, -9, -9, -10]));\nconsole.log(is_Monotonic([-1, -1, -2, -3, -\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "../../../../tmp/tmpmfkjbw_u.ts(26,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpp3_q9m3x.js:19:12)\n    at Object.<anonymous> (/tmp/tmpp3_q9m3x.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122895,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpp3_q9m3x.js:19:12)\n    at Object.<anonymous> (/tmp/tmpp3_q9m3x.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122889,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmppvpfnd0v.js:23:12)\n    at Object.<anonymous> (/tmp/tmppvpfnd0v.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store == 0 || store == A.length - 1) {\n        flag = true;\n    }\n    else {\n        flag = false;\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([5, 15, 31, 70, 120, 900]));\nconsole.log(is_Monotonic([-5, 10, 99, 123]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 4, 5, 5, 5, 6, 7, 8, 8, 9, 10, 11]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 4, 5, 5, 5, 6, 7, 8, 8, 9, 10, 10]));\nconsole.log(is_Monotonic([10, 10, 9, 8, 7, 7, 7, 6, 5, 4, 3, 2, 1, 1]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122899,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpojwk8s1r.js:29:12)\n    at Object.<anonymous> (/tmp/tmpojwk8s1r.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxx_xbzjl.js:22:12)\n    at Object.<anonymous> (/tmp/tmpxx_xbzjl.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpyb5e91em.js:19:12)\n    at Object.<anonymous> (/tmp/tmpyb5e91em.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (store != 0) {\n            if ((A[index] - A[index - 1]) * store < 0) {\n                flag = false;\n                break;\n            }\n        } else {\n            store = A[index] - A[index - 1];\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpq8nva5qx.js:23:12)\n    at Object.<anonymous> (/tmp/tmpq8nva5qx.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number = 0;\n  let flag: boolean = true;\n  for (let i = 0; i <= A.length - 2; i++) {\n    store = A[i] - A[i + 1];\n    if (store !== 0) {\n      flag = false;\n      break;\n    }\n  }\n  return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122899,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9mb3r__x.js:18:12)\n    at Object.<anonymous> (/tmp/tmp9mb3r__x.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = store + 0;\n        } else {\n            store = store + 1;\n        }\n    }\n    if (store > 1) {\n        flag = false;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510048,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxx_xbzjl.js:22:12)\n    at Object.<anonymous> (/tmp/tmpxx_xbzjl.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number = 0;\n  let flag: boolean = true;\n  for (let index = 0; index < A.length; index++) {\n    if (A[index] >= A[index + 1]) {\n      flag = true;\n    } else {\n      flag = false;\n      break;\n    }\n  }\n  return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122899,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp07qs5jbz.js:19:12)\n    at Object.<anonymous> (/tmp/tmp07qs5jbz.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let i: number = 0; i <= A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122899,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpnazvpxlx.js:19:12)\n    at Object.<anonymous> (/tmp/tmpnazvpxlx.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number = 0;\n  let flag: boolean = true;\n  for (let i = 0; i <= A.length - 2; i++) {\n    store = A[i] - A[i + 1];\n    if (store != 0) {\n      flag = false;\n      break;\n    }\n  }\n  return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122892,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp2o03al9n.js:17:12)\n    at Object.<anonymous> (/tmp/tmp2o03al9n.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpv_fdq0ce.js:18:12)\n    at Object.<anonymous> (/tmp/tmpv_fdq0ce.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a tsthon function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n  let store: number[] = A;\n  let reversed: number[] = A.slice(0).reverse();\n  if (\n    JSON.stringify(A) === JSON.stringify(store.sort((a, b) => a - b)) ||\n    JSON.stringify(A) === JSON.stringify(reversed.sort((a, b) => a - b))\n  ) {\n    return true;\n  }\n  return false;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 11, 12, 13]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10, -11, -12, -13]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 11, 12, 13]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10, -11, -12, -13]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 11, 12, 13]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10, -11, -12, -13]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 11, 12, 13]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10, -11, -12, -13]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 9, 9, 10, 11, 12, 13]));\nconsole.log(is_Monotonic([1, 1, 2, 3, -7, -9, -9, -10\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
      "timestamp": 1666122899,
      "stdout": "../../../../tmp/tmpbe_j94z6.ts(25,1): error TS1005: ',' expected.\n../../../../tmp/tmpbe_j94z6.ts(25,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    }
  ]
}
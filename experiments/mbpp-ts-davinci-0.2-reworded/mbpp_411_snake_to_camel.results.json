{
  "name": "mbpp_411_snake_to_camel",
  "language": "ts",
  "prompt": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_411_snake_to_camel.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = '';\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('apples_and_oranges'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\napplesAndOranges\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpiyng6v_a.js:24:12)\n    at Object.<anonymous> (/tmp/tmpiyng6v_a.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/_\\w/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"snake_case\"));\nconsole.log(snake_to_camel(\"snake_case_string\"));\nconsole.log(snake_to_camel(\"snake\"));\nconsole.log(snake_to_camel(\"SNAKE_CASE\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "snakeCase\nsnakeCaseString\nsnake\nSNAKECASE\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp7cn1yjgu.js:12:12)\n    at Object.<anonymous> (/tmp/tmp7cn1yjgu.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_exercises\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\njavascriptExercises\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpzr96hdvu.js:20:12)\n    at Object.<anonymous> (/tmp/tmpzr96hdvu.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let camelCase = word.replace(/_\\w/g, (match) => match[1].toUpperCase());\n  return camelCase;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"coding_challenge\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\njavascriptIsAwesome\ncodingChallenge\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpdoeoyhz8.js:12:12)\n    at Object.<anonymous> (/tmp/tmpdoeoyhz8.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = \"\";\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"coding_challenge\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\njavascriptIsAwesome\ncodingChallenge\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp15myicol.js:21:12)\n    at Object.<anonymous> (/tmp/tmp15myicol.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(_\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(sn\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "../../../../tmp/tmpxi9gkixk.ts(28,1): error TS1005: ',' expected.\n../../../../tmp/tmpxi9gkixk.ts(28,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(-\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello-world\"));\nconsole.log(snake_to_camel(\"snake-case-string\"));\nconsole.log(snake_to_camel(\"snake_case_string\"));\nconsole.log(snake_to_camel(\"snake_case_string\"));\nconsole.log(snake_to_camel(\"snake-case-string\"));\nconsole.log(snake_to_camel(\"snake-case-string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\nsnakeCaseString\nsnake_case_string\nsnake_case_string\nsnakeCaseString\nsnakeCaseString\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpcy5w7zrc.js:14:12)\n    at Object.<anonymous> (/tmp/tmpcy5w7zrc.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello_to_my_little_friend\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\nconsole.log(snake_to_camel(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\n\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpberryrqf.js:24:12)\n    at Object.<anonymous> (/tmp/tmpberryrqf.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = word.split(\"_\");\n  for (let i = 1; i < newWord.length; i++) {\n    newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n  }\n  return newWord.join(\"\");\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello_to_my_little_friend\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\nconsole.log(snake_to_camel(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\n\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpkev4xfwc.js:18:12)\n    at Object.<anonymous> (/tmp/tmpkev4xfwc.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let result: string = \"\";\n  let wordArr: string[] = word.split(\"_\");\n  for (let i: number = 0; i < wordArr.length; i++) {\n    if (i > 0) {\n      result += wordArr[i].charAt(0).toUpperCase() + wordArr[i].slice(1);\n    } else {\n      result += wordArr[i];\n    }\n  }\n  return result;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snake_to_camel\"));\nconsole.log(snake_to_camel(\"snake_case_to_camel_case\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\nsnakeToCamel\nsnakeCaseToCamelCase\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp5j8clagd.js:21:12)\n    at Object.<anonymous> (/tmp/tmp5j8clagd.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('main'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nmain\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmphu6j39j4.js:24:12)\n    at Object.<anonymous> (/tmp/tmphu6j39j4.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('apples_and_oranges'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\napplesAndOranges\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpw1quyj3k.js:24:12)\n    at Object.<anonymous> (/tmp/tmpw1quyj3k.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = \"\";\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_exercises\"));\nconsole.log(snake_to_camel(\"java_script_exercises\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\njavascriptExercises\njavaScriptExercises\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpqgi2rq9o.js:21:12)\n    at Object.<anonymous> (/tmp/tmpqgi2rq9o.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(_\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"snake_to_camel\"));\nconsole.log(snake_to_camel(\"snake_to_camel_case\"));\nconsole.log(snake_to_camel(\"snake_to_camel_case_string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "snakeToCamel\nsnakeToCamelCase\nsnakeToCamelCaseString\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpm0v8uf2p.js:11:12)\n    at Object.<anonymous> (/tmp/tmpm0v8uf2p.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(-\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello-world\"));\nconsole.log(snake_to_camel(\"snake-case-string\"));\nconsole.log(snake_to_camel(\"snake_case_string\"));\nconsole.log(snake_to_camel(\"snake_case-string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\nsnakeCaseString\nsnake_case_string\nsnake_caseString\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpq6228n7v.js:12:12)\n    at Object.<anonymous> (/tmp/tmpq6228n7v.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    return word.replace(/(_\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\njavascriptIsAwesome\njavaScriptIsAwesome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp6331o1rb.js:11:12)\n    at Object.<anonymous> (/tmp/tmp6331o1rb.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello_to_my_little_friend\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\nconsole.log(snake_to_camel(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\n\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpberryrqf.js:24:12)\n    at Object.<anonymous> (/tmp/tmpberryrqf.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(_\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"coding_challenge\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\njavascriptIsAwesome\ncodingChallenge\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmprrjo2rnh.js:11:12)\n    at Object.<anonymous> (/tmp/tmprrjo2rnh.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/_\\w/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\njavascriptIsAwesome\njavaScriptIsAwesome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpjeknt4pk.js:11:12)\n    at Object.<anonymous> (/tmp/tmpjeknt4pk.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"java_script_exercises\"));\nconsole.log(snake_to_camel(\"java_script_exercises_test\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\njavaScriptExercises\njavaScriptExercisesTest\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpr3p1dfai.js:21:12)\n    at Object.<anonymous> (/tmp/tmpr3p1dfai.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord = '';\n    for (let i = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_Do_This_at_Home'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontDoThisAtHome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpbks_qtae.js:24:12)\n    at Object.<anonymous> (/tmp/tmpbks_qtae.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(-\\w)/g, (matches) => matches[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello-world\"));\nconsole.log(snake_to_camel(\"snake-case-string\"));\nconsole.log(snake_to_camel(\"snake_case_string\"));\nconsole.log(snake_to_camel(\"snake_case-string\"));\nconsole.log(snake_to_camel(\"snake-case_string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakeCaseString\nsnake_case_string\nsnake_caseString\nsnakeCase_string\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp_z3nxbxj.js:13:12)\n    at Object.<anonymous> (/tmp/tmp_z3nxbxj.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = word.split(\"_\");\n  for (let i = 1; i < newWord.length; i++) {\n    newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n  }\n  return newWord.join(\"\");\n}\nconsole.log(snake_to_camel(\"hello_world\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpntpv85cn.js:13:12)\n    at Object.<anonymous> (/tmp/tmpntpv85cn.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let result: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      result += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      result += word[i];\n    }\n  }\n  return result;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello_to_my_little_friend\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\nconsole.log(snake_to_camel(\"app_academy_is_cool\"));\nconsole.log(snake_to_camel(\"number_22\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nappAcademyIsCool\nnumber22\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpvc0aj4f_.js:25:12)\n    at Object.<anonymous> (/tmp/tmpvc0aj4f_.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello_to_my_little_friend\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\nconsole.log(snake_to_camel(\"app_academy_is_cool\"));\nconsole.log(snake_to_camel(\"number_22\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nappAcademyIsCool\nnumber22\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmph2xxhn_q.js:25:12)\n    at Object.<anonymous> (/tmp/tmph2xxhn_q.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello_to_my_little_friend\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\nconsole.log(snake_to_camel(\"apples_and_oranges\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\napplesAndOranges\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp44x9ye4v.js:24:12)\n    at Object.<anonymous> (/tmp/tmp44x9ye4v.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_Do_This_At_Home'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontDoThisAtHome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpoh3q5qm3.js:24:12)\n    at Object.<anonymous> (/tmp/tmpoh3q5qm3.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = '';\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('app_les_and_oran_ges_are_delicious'));\nconsole.log(snake_to_camel('one_2_three'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nappLesAndOranGesAreDelicious\none2Three\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpbkhc0_t1.js:25:12)\n    at Object.<anonymous> (/tmp/tmpbkhc0_t1.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_Do_This_AT_Home'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontDoThisATHome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpe7kjosay.js:24:12)\n    at Object.<anonymous> (/tmp/tmpe7kjosay.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello\"));\nconsole.log(snake_to_camel(\"bootcamp_prep\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHello\nbootcampPrep\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmphu_zfkrx.js:22:12)\n    at Object.<anonymous> (/tmp/tmphu_zfkrx.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = \"\";\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === \"_\") {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel(\"snake_to_camel\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "snakeToCamel\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpyzh9lix8.js:19:12)\n    at Object.<anonymous> (/tmp/tmpyzh9lix8.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(_\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\njavascriptIsAwesome\njavaScriptIsAwesome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpvfxy7_so.js:11:12)\n    at Object.<anonymous> (/tmp/tmpvfxy7_so.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    return word.replace(/(_\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome_and_python_too\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\njavascriptIsAwesome\njavaScriptIsAwesome\njavaScriptIsAwesomeAndPythonToo\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpg059gofn.js:12:12)\n    at Object.<anonymous> (/tmp/tmpg059gofn.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(_\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\njavascriptIsAwesome\njavaScriptIsAwesome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpvfxy7_so.js:11:12)\n    at Object.<anonymous> (/tmp/tmpvfxy7_so.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = word.split(\"_\");\n  for (let i = 1; i < newWord.length; i++) {\n    newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n  }\n  return newWord.join(\"\");\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_exercises\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\njavascriptExercises\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp8rfcagn9.js:14:12)\n    at Object.<anonymous> (/tmp/tmp8rfcagn9.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let result: string = \"\";\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === \"_\") {\n            result += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            result += word[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello_to_my_little_friend\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\nconsole.log(snake_to_camel(\"app_academy_is_cool\"));\nconsole.log(snake_to_camel(\"\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nappAcademyIsCool\n\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp8vrg25p6.js:25:12)\n    at Object.<anonymous> (/tmp/tmp8vrg25p6.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(\n    /(_\\w)/g,\n    (matches) => matches[1].toUpperCase()\n  );\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\njavascriptIsAwesome\njavaScriptIsAwesome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpk591ahm2.js:11:12)\n    at Object.<anonymous> (/tmp/tmpk591ahm2.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"snake_case\"));\nconsole.log(snake_to_camel(\"snake_case_word\"));\nconsole.log(snake_to_camel(\"snake_case_word_with_many_underscores\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "snakeCase\nsnakeCaseWord\nsnakeCaseWordWithManyUnderscores\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpziwxvmu0.js:21:12)\n    at Object.<anonymous> (/tmp/tmpziwxvmu0.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"i_love_coding\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\njavascriptIsAwesome\niLoveCoding\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpavw5nvev.js:21:12)\n    at Object.<anonymous> (/tmp/tmpavw5nvev.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_Do_This_at_Home'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontDoThisAtHome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp5ygeupfe.js:24:12)\n    at Object.<anonymous> (/tmp/tmp5ygeupfe.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord = word.split(\"_\");\n    let camelWord = newWord[0];\n    for (let i = 1; i < newWord.length; i++) {\n        camelWord += newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return camelWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello_to_my_little_friend\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_the_best\"));\nconsole.log(snake_to_camel(\"i_am_a_camel\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsTheBest\niAmACamel\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpxmb0jrl7.js:18:12)\n    at Object.<anonymous> (/tmp/tmpxmb0jrl7.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let result: string = \"\";\n  let wordArray: string[] = word.split(\"_\");\n  for (let i: number = 0; i < wordArray.length; i++) {\n    if (i > 0) {\n      result += wordArray[i].charAt(0).toUpperCase() + wordArray[i].slice(1);\n    } else {\n      result += wordArray[i];\n    }\n  }\n  return result;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snake_case\"));\nconsole.log(snake_to_camel(\"snake_case_function\"));\nconsole.log(snake_to_camel(\"snake_case_function_to_camel_case\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakeCase\nsnakeCaseFunction\nsnakeCaseFunctionToCamelCase\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpho7ovswc.js:22:12)\n    at Object.<anonymous> (/tmp/tmpho7ovswc.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord = '';\n    for (let i = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_Do_This_AT_Home'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontDoThisATHome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp4xjo36ra.js:24:12)\n    at Object.<anonymous> (/tmp/tmp4xjo36ra.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let result = \"\";\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      result += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      result += word[i];\n    }\n  }\n  return result;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello_to_my_little_friend\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\nconsole.log(snake_to_camel(\"app_academy_is_cool\"));\nconsole.log(snake_to_camel(\"number_22\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nappAcademyIsCool\nnumber22\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpi7luezbv.js:25:12)\n    at Object.<anonymous> (/tmp/tmpi7luezbv.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let camelCaseWord: string = '';\n    let wordArray: string[] = word.split('_');\n    for (let i: number = 0; i < wordArray.length; i++) {\n        if (i === 0) {\n            camelCaseWord += wordArray[i];\n        } else {\n            camelCaseWord += wordArray[i].charAt(0).toUpperCase() + wordArray[i].slice(1);\n        }\n    }\n    return camelCaseWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snake_case'));\nconsole.log(snake_to_camel('snake_case_function'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122726,
      "stdout": "helloWorld\nsnakeCase\nsnakeCaseFunction\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp8mpd9440.js:21:12)\n    at Object.<anonymous> (/tmp/tmp8mpd9440.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = word.split(\"_\");\n  for (let i = 1; i < newWord.length; i++) {\n    newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n  }\n  return newWord.join(\"\");\n}\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello_to_my_little_friend\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\nconsole.log(snake_to_camel(\"\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\n\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpn4kijx2_.js:18:12)\n    at Object.<anonymous> (/tmp/tmpn4kijx2_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = \"\";\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === \"_\") {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"coding_challenge\"));\nconsole.log(snake_to_camel(\"i_love_coding\"));\nconsole.log(snake_to_camel(\"i_am_a_coder\"));\nconsole.log(snake_to_camel(\"i_am_a_coder\"));\nconsole.log(snake_to_camel(\"i_am_a_coder\"));\nconsole.log(snake_to_camel(\"i_am_a_coder\"));\nconsole.log(snake_to_camel(\"i_am_a_coder\"));\nconsole.log(snake_to_camel(\"i_am_a_coder\"));\nconsole.log(snake_to_camel(\"i_am_a_coder\"));\nconsole.log(snake_to_camel(\"i_am_a_coder\"));\nconsole.log(snake_to_camel(\"i_am_a_coder\"));\nconsole.log(snake_to_camel(\"i_am_a_coder\"));\nconsole.log(snake_to_camel(\"i_am_a_coder\"));\nconsole.log(snake_to_camel(\"i_am_a_coder\"));\nconsole.log(snake_to_camel(\"i_am_a_coder\"));\nconsole.log(snake_to_camel(\"i_am_a_coder\"));\nconsole.log(snake_to_camel(\"i_am_a_\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122726,
      "stdout": "../../../../tmp/tmpihppmzx0.ts(33,36): error TS1002: Unterminated string literal.\n../../../../tmp/tmpihppmzx0.ts(34,1): error TS1005: ',' expected.\n../../../../tmp/tmpihppmzx0.ts(34,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = \"\";\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === \"_\") {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello\"));\nconsole.log(snake_to_camel(\"bootcamp_prep\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHello\nbootcampPrep\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp0e5qnnzx.js:22:12)\n    at Object.<anonymous> (/tmp/tmp0e5qnnzx.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = \"\";\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\nconsole.log(snake_to_camel(\"\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHello\nbootcampPrepIsCool\nBOOtcampPREPISCOol\n\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpy7vj55ta.js:24:12)\n    at Object.<anonymous> (/tmp/tmpy7vj55ta.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('javascript_exercises'));\nconsole.log(snake_to_camel('number_of_students'));\nconsole.log(snake_to_camel('number_of_students_in_class'));\nconsole.log(snake_to_camel('number_of_students_in_class_of_java'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "helloWorld\njavascriptExercises\nnumberOfStudents\nnumberOfStudentsInClass\nnumberOfStudentsInClassOfJava\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmppvlynpac.js:23:12)\n    at Object.<anonymous> (/tmp/tmppvlynpac.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let camelCase: string = \"\";\n    let wordArray: string[] = word.split(\"_\");\n    for (let i: number = 0; i < wordArray.length; i++) {\n        if (i === 0) {\n            camelCase += wordArray[i];\n        } else {\n            camelCase += wordArray[i].charAt(0).toUpperCase() + wordArray[i].slice(1);\n        }\n    }\n    return camelCase;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello\"));\nconsole.log(snake_to_camel(\"bootcamp_prep\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHello\nbootcampPrep\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpjf096j81.js:22:12)\n    at Object.<anonymous> (/tmp/tmpjf096j81.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let result: string = '';\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      i++;\n      result += word[i].toUpperCase();\n    } else {\n      result += word[i];\n    }\n  }\n  return result;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('app_academy_is_cool'));\nconsole.log(snake_to_camel('number_22'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nappAcademyIsCool\nnumber22\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmprwn1kbrq.js:25:12)\n    at Object.<anonymous> (/tmp/tmprwn1kbrq.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = \"\";\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_exercises\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "helloWorld\njavascriptExercises\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpb58tg404.js:20:12)\n    at Object.<anonymous> (/tmp/tmpb58tg404.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"hello_world_again\"));\nconsole.log(snake_to_camel(\"hello_world_again_and_again\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "helloWorld\nhelloWorldAgain\nhelloWorldAgainAndAgain\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpmna53x1x.js:21:12)\n    at Object.<anonymous> (/tmp/tmpmna53x1x.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_exercises\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\njavascriptExercises\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpzr96hdvu.js:20:12)\n    at Object.<anonymous> (/tmp/tmpzr96hdvu.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_exercises\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "helloWorld\njavascriptExercises\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpmy1m3ovv.js:20:12)\n    at Object.<anonymous> (/tmp/tmpmy1m3ovv.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let result: string = '';\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      result += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      result += word[i];\n    }\n  }\n  return result;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmprc0kk06k.js:23:12)\n    at Object.<anonymous> (/tmp/tmprc0kk06k.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord = word.split(\"_\");\n    for (let i = 1; i < newWord.length; i++) {\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snake_case\"));\nconsole.log(snake_to_camel(\"snake_case_string\"));\nconsole.log(snake_to_camel(\"snake_case_string_conversion\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "helloWorld\nsnakeCase\nsnakeCaseString\nsnakeCaseStringConversion\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmprtlnut1_.js:16:12)\n    at Object.<anonymous> (/tmp/tmprtlnut1_.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('apples_and_oranges'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\napplesAndOranges\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpw1quyj3k.js:24:12)\n    at Object.<anonymous> (/tmp/tmpw1quyj3k.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = \"\";\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello\"));\nconsole.log(snake_to_camel(\"bootcamp_prep\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHello\nbootcampPrep\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpzy4jldgy.js:22:12)\n    at Object.<anonymous> (/tmp/tmpzy4jldgy.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = '';\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('apples_and_oranges'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\napplesAndOranges\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpiyng6v_a.js:24:12)\n    at Object.<anonymous> (/tmp/tmpiyng6v_a.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(_\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"coding_is_fun\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "helloWorld\njavascriptIsAwesome\ncodingIsFun\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpam4tm1p0.js:11:12)\n    at Object.<anonymous> (/tmp/tmpam4tm1p0.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\nconsole.log(snake_to_camel(\"hello_world\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "helloWorld\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpdfn_k179.js:19:12)\n    at Object.<anonymous> (/tmp/tmpdfn_k179.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = '';\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_forget_underscores'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontForgetUnderscores\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpfyp8i7i5.js:24:12)\n    at Object.<anonymous> (/tmp/tmpfyp8i7i5.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = word.split(\"_\");\n  for (let i = 1; i < newWord.length; i++) {\n    newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n  }\n  return newWord.join(\"\");\n}\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"coding_is_fun\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "helloWorld\njavascriptIsAwesome\ncodingIsFun\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpkrlwx3iu.js:15:12)\n    at Object.<anonymous> (/tmp/tmpkrlwx3iu.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = \"\";\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\nconsole.log(snake_to_camel(\"\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHello\nbootcampPrepIsCool\nBOOtcampPREPISCOol\n\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpy7vj55ta.js:24:12)\n    at Object.<anonymous> (/tmp/tmpy7vj55ta.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_Do_This_At_Home'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontDoThisAtHome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpoh3q5qm3.js:24:12)\n    at Object.<anonymous> (/tmp/tmpoh3q5qm3.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_Do_This_At_Home'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontDoThisAtHome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpoh3q5qm3.js:24:12)\n    at Object.<anonymous> (/tmp/tmpoh3q5qm3.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"snake_to_camel\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "snakeToCamel\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpsi8mwwz_.js:19:12)\n    at Object.<anonymous> (/tmp/tmpsi8mwwz_.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_Do_This_at_Home'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontDoThisAtHome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp5ygeupfe.js:24:12)\n    at Object.<anonymous> (/tmp/tmp5ygeupfe.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = \"\";\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === \"_\") {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"coding_challenge\"));\nconsole.log(snake_to_camel(\"i_love_coding\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "helloWorld\njavascriptIsAwesome\ncodingChallenge\niLoveCoding\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpynnm_6do.js:22:12)\n    at Object.<anonymous> (/tmp/tmpynnm_6do.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = '';\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel('snake_case'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "snakeCase\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp6gihqcgb.js:19:12)\n    at Object.<anonymous> (/tmp/tmp6gihqcgb.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(-\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello-world\"));\nconsole.log(snake_to_camel(\"snake-case-string\"));\nconsole.log(snake_to_camel(\"snake_case_string\"));\nconsole.log(snake_to_camel(\"snake_case-string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\nsnakeCaseString\nsnake_case_string\nsnake_caseString\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpq6228n7v.js:12:12)\n    at Object.<anonymous> (/tmp/tmpq6228n7v.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = '';\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('javascript_exercises'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "helloWorld\njavascriptExercises\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpplj617am.js:20:12)\n    at Object.<anonymous> (/tmp/tmpplj617am.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = \"\";\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === \"_\") {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_my_name\"));\nconsole.log(snake_to_camel(\"i_have_no_idea_what_i_am_doing\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "helloWorld\nsnakesGoHiss\nsayMyName\niHaveNoIdeaWhatIAmDoing\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpzh0odqpe.js:22:12)\n    at Object.<anonymous> (/tmp/tmpzh0odqpe.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let words: string[] = word.split(\"_\");\n    let result: string = \"\";\n    for (let i: number = 0; i < words.length; i++) {\n        if (i == 0) {\n            result += words[i];\n        } else {\n            result += words[i].charAt(0).toUpperCase() + words[i].slice(1);\n        }\n    }\n    return result;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snake_case\"));\nconsole.log(snake_to_camel(\"snake_case_function\"));\nconsole.log(snake_to_camel(\"snake_case_function_in_typescript\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122729,
      "stdout": "helloWorld\nsnakeCase\nsnakeCaseFunction\nsnakeCaseFunctionInTypescript\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpksza2zm8.js:22:12)\n    at Object.<anonymous> (/tmp/tmpksza2zm8.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(_\\w)/g, (match) => match[1].toUpperCase());\n}\nconsole.log(snake_to_camel(\"snake_to_camel\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122729,
      "stdout": "snakeToCamel\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpq9yc5blm.js:9:12)\n    at Object.<anonymous> (/tmp/tmpq9yc5blm.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/_[a-z]/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello_to_my_little_friend\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122730,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcamp_PREPISCOol\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps74aynva.js:13:12)\n    at Object.<anonymous> (/tmp/tmps74aynva.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_you_wish_your_girlfriend_was_hot_like_me'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122730,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontYouWishYourGirlfriendWasHotLikeMe\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpcug0bygv.js:24:12)\n    at Object.<anonymous> (/tmp/tmpcug0bygv.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = word.split(\"_\");\n  for (let i = 1; i < newWord.length; i++) {\n    newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n  }\n  return newWord.join(\"\");\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello_to_my_little_friend\"));\nconsole.log(snake_to_camel(\"bootcamp_prep\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122730,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrep\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp2b1n_k6e.js:16:12)\n    at Object.<anonymous> (/tmp/tmp2b1n_k6e.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(_\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\njavascriptIsAwesome\njavaScriptIsAwesome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpvfxy7_so.js:11:12)\n    at Object.<anonymous> (/tmp/tmpvfxy7_so.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    return word.replace(/(-\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello-world\"));\nconsole.log(snake_to_camel(\"hello-world-beautiful\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122730,
      "stdout": "helloWorld\nhelloWorldBeautiful\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpab044h7i.js:10:12)\n    at Object.<anonymous> (/tmp/tmpab044h7i.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(-\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello-world\"));\nconsole.log(snake_to_camel(\"snake-case-string\"));\nconsole.log(snake_to_camel(\"snake_case_string\"));\nconsole.log(snake_to_camel(\"snake_case-string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\nsnakeCaseString\nsnake_case_string\nsnake_caseString\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpq6228n7v.js:12:12)\n    at Object.<anonymous> (/tmp/tmpq6228n7v.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let result: string = \"\";\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === \"_\") {\n            result += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            result += word[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello\"));\nconsole.log(snake_to_camel(\"bootcamp_prep\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122730,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHello\nbootcampPrep\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp46pjqmex.js:22:12)\n    at Object.<anonymous> (/tmp/tmp46pjqmex.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('javascript_exercises'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122730,
      "stdout": "helloWorld\njavascriptExercises\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpm9ke6iq3.js:20:12)\n    at Object.<anonymous> (/tmp/tmpm9ke6iq3.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = '';\n    let wordArray: string[] = word.split('');\n    for (let i: number = 0; i < wordArray.length; i++) {\n        if (wordArray[i] === '_') {\n            wordArray[i + 1] = wordArray[i + 1].toUpperCase();\n        } else {\n            newWord += wordArray[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('app_academy_is_cool'));\nconsole.log(snake_to_camel('number_22'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122730,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nappAcademyIsCool\nnumber22\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpb1u5j44b.js:25:12)\n    at Object.<anonymous> (/tmp/tmpb1u5j44b.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_Do_This_AT_Home'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontDoThisATHome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpe7kjosay.js:24:12)\n    at Object.<anonymous> (/tmp/tmpe7kjosay.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord = word.split('_');\n    let camelWord = newWord.map(function(word, index) {\n        if (index === 0) {\n            return word;\n        } else {\n            return word.charAt(0).toUpperCase() + word.slice(1);\n        }\n    }).join('');\n    return camelWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('apples_and_oranges'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122730,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\napplesAndOranges\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmph5t_8zde.js:23:12)\n    at Object.<anonymous> (/tmp/tmph5t_8zde.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = \"\";\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\nconsole.log(snake_to_camel(\"\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHello\nbootcampPrepIsCool\nBOOtcampPREPISCOol\n\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpy7vj55ta.js:24:12)\n    at Object.<anonymous> (/tmp/tmpy7vj55ta.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = '';\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('apples_and_oranges'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\napplesAndOranges\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpiyng6v_a.js:24:12)\n    at Object.<anonymous> (/tmp/tmpiyng6v_a.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_Do_This_at_Home'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122730,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontDoThisAtHome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpwipuntt3.js:24:12)\n    at Object.<anonymous> (/tmp/tmpwipuntt3.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    return word.replace(/_\\w/g, (match) => match[1].toUpperCase());\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122730,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpg3lua7dt.js:8:12)\n    at Object.<anonymous> (/tmp/tmpg3lua7dt.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\nconsole.log(snake_to_camel(\"hello_world\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "helloWorld\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpdfn_k179.js:19:12)\n    at Object.<anonymous> (/tmp/tmpdfn_k179.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let result: string = \"\";\n  let isUpper: boolean = false;\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      isUpper = true;\n    } else {\n      if (isUpper) {\n        result += word[i].toUpperCase();\n        isUpper = false;\n      } else {\n        result += word[i];\n      }\n    }\n  }\n  return result;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snake_case\"));\nconsole.log(snake_to_camel(\"snake_case_function\"));\nconsole.log(snake_to_camel(\"snake_case_function_to_camel_case\"));\nconsole.log(snake_to_camel(\"snake_case_function_to_camel_case_with_underscore\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122730,
      "stdout": "helloWorld\nsnakeCase\nsnakeCaseFunction\nsnakeCaseFunctionToCamelCase\nsnakeCaseFunctionToCamelCaseWithUnderscore\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpc5up5_hr.js:29:12)\n    at Object.<anonymous> (/tmp/tmpc5up5_hr.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord = '';\n    for (let i = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('javascript_exercises'));\nconsole.log(snake_to_camel('number_of_students'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122730,
      "stdout": "helloWorld\njavascriptExercises\nnumberOfStudents\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpmdvcgqgd.js:21:12)\n    at Object.<anonymous> (/tmp/tmpmdvcgqgd.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = \"\";\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122730,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpye2x2na8.js:18:12)\n    at Object.<anonymous> (/tmp/tmpye2x2na8.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"i_have_done_all_of_these_exercises_on_codingame\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122730,
      "stdout": "helloWorld\njavascriptIsAwesome\niHaveDoneAllOfTheseExercisesOnCodingame\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpt3a6ja5n.js:21:12)\n    at Object.<anonymous> (/tmp/tmpt3a6ja5n.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let wordArray: string[] = word.split(\"_\");\n    for (let i: number = 1; i < wordArray.length; i++) {\n        wordArray[i] = wordArray[i].charAt(0).toUpperCase() + wordArray[i].slice(1);\n    }\n    return wordArray.join(\"\");\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snake_case_function\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122730,
      "stdout": "helloWorld\nsnakeCaseFunction\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmponrund4p.js:14:12)\n    at Object.<anonymous> (/tmp/tmponrund4p.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let result = \"\";\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      result += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      result += word[i];\n    }\n  }\n  return result;\n}\n\nconsole.log(snake_to_camel(\"snake_case\"));\nconsole.log(snake_to_camel(\"snake_case_string\"));\nconsole.log(snake_to_camel(\"snake_case_string_to_camel_case\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122730,
      "stdout": "snakeCase\nsnakeCaseString\nsnakeCaseStringToCamelCase\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpaoxj9via.js:21:12)\n    at Object.<anonymous> (/tmp/tmpaoxj9via.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122730,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp9hz8s_i0.js:8:12)\n    at Object.<anonymous> (/tmp/tmp9hz8s_i0.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = word.split(\"_\");\n  for (let i = 1; i < newWord.length; i++) {\n    newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n  }\n  return newWord.join(\"\");\n}\nconsole.log(snake_to_camel(\"hello_world\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpntpv85cn.js:13:12)\n    at Object.<anonymous> (/tmp/tmpntpv85cn.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    return word.replace(/(-\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello-world\"));\nconsole.log(snake_to_camel(\"hello-world-beautiful\"));\nconsole.log(snake_to_camel(\"snake-case-string\"));\nconsole.log(snake_to_camel(\"snake-case-string-to-camel-case\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122730,
      "stdout": "helloWorld\nhelloWorldBeautiful\nsnakeCaseString\nsnakeCaseStringToCamelCase\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp5lotpjtj.js:12:12)\n    at Object.<anonymous> (/tmp/tmp5lotpjtj.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    return word.replace(/(_\\w)/g, function (match) {\n        return match[1].toUpperCase();\n    });\n}\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_exercises\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122730,
      "stdout": "helloWorld\njavascriptExercises\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmptn1ambvv.js:12:12)\n    at Object.<anonymous> (/tmp/tmptn1ambvv.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let result: string = '';\n  let wordArray: string[] = word.split('_');\n  for (let i: number = 0; i < wordArray.length; i++) {\n    if (i === 0) {\n      result += wordArray[i];\n    } else {\n      result += wordArray[i].charAt(0).toUpperCase() + wordArray[i].slice(1);\n    }\n  }\n  return result;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snake_case'));\nconsole.log(snake_to_camel('snake'));\nconsole.log(snake_to_camel('SNAKE'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122730,
      "stdout": "helloWorld\nsnakeCase\nsnake\nSNAKE\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpi3olycfk.js:22:12)\n    at Object.<anonymous> (/tmp/tmpi3olycfk.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = \"\";\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"coding_challenge\"));\nconsole.log(snake_to_camel(\"i_am_a_developer\"));\nconsole.log(snake_to_camel(\"i_am_a_developer\"));\nconsole.log(snake_to_camel(\"i_am_a_developer\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122730,
      "stdout": "helloWorld\njavascriptIsAwesome\ncodingChallenge\niAmADeveloper\niAmADeveloper\niAmADeveloper\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpbbqb_ps5.js:24:12)\n    at Object.<anonymous> (/tmp/tmpbbqb_ps5.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(_\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_exercises\"));\nconsole.log(snake_to_camel(\"java_script_exercises\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122732,
      "stdout": "helloWorld\njavascriptExercises\njavaScriptExercises\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmparb81r_f.js:11:12)\n    at Object.<anonymous> (/tmp/tmparb81r_f.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('apples_and_oranges'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\napplesAndOranges\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpw1quyj3k.js:24:12)\n    at Object.<anonymous> (/tmp/tmpw1quyj3k.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let result: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            result += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            result += word[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('app_academy_is_cool'));\nconsole.log(snake_to_camel('number_22_is_my_favorite_number'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122732,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nappAcademyIsCool\nnumber22IsMyFavoriteNumber\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp288c3ob9.js:25:12)\n    at Object.<anonymous> (/tmp/tmp288c3ob9.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello_to_my_little_friend\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\nconsole.log(snake_to_camel(\"app_academy_is_cool\"));\nconsole.log(snake_to_camel(\"number_22\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nappAcademyIsCool\nnumber22\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmph2xxhn_q.js:25:12)\n    at Object.<anonymous> (/tmp/tmph2xxhn_q.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello\"));\nconsole.log(snake_to_camel(\"bootcamp_prep\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHello\nbootcampPrep\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmphu_zfkrx.js:22:12)\n    at Object.<anonymous> (/tmp/tmphu_zfkrx.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    return word.replace(/(_\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"i_am_learning_java_script\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122732,
      "stdout": "helloWorld\njavascriptIsAwesome\njavaScriptIsAwesome\niAmLearningJavaScript\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp051nboxg.js:12:12)\n    at Object.<anonymous> (/tmp/tmp051nboxg.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let result: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            result += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            result += word[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('app_academy_is_cool'));\nconsole.log(snake_to_camel('number_22_is_my_favorite_number'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122732,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nappAcademyIsCool\nnumber22IsMyFavoriteNumber\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp288c3ob9.js:25:12)\n    at Object.<anonymous> (/tmp/tmp288c3ob9.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = \"\";\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === \"_\") {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello\"));\nconsole.log(snake_to_camel(\"bootcamp_prep\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122733,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHello\nbootcampPrep\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpyp484o71.js:22:12)\n    at Object.<anonymous> (/tmp/tmpyp484o71.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(_\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_exercises\"));\nconsole.log(snake_to_camel(\"java_script_exercises\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122732,
      "stdout": "helloWorld\njavascriptExercises\njavaScriptExercises\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmparb81r_f.js:11:12)\n    at Object.<anonymous> (/tmp/tmparb81r_f.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let result: string = '';\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      result += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      result += word[i];\n    }\n  }\n  return result;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('app_academy_is_cool'));\nconsole.log(snake_to_camel('number_22'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122733,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nappAcademyIsCool\nnumber22\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpqnvemz42.js:25:12)\n    at Object.<anonymous> (/tmp/tmpqnvemz42.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = \"\";\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello\"));\nconsole.log(snake_to_camel(\"bootcamp_prep\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHello\nbootcampPrep\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpzy4jldgy.js:22:12)\n    at Object.<anonymous> (/tmp/tmpzy4jldgy.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = '';\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_Do_This_at_Home'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122733,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontDoThisAtHome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp5604rc46.js:24:12)\n    at Object.<anonymous> (/tmp/tmp5604rc46.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let words: string[] = word.split('_');\n    let camelCase: string = words[0];\n    for (let i: number = 1; i < words.length; i++) {\n        camelCase += words[i].charAt(0).toUpperCase() + words[i].slice(1);\n    }\n    return camelCase;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('app_academy_is_cool'));\nconsole.log(snake_to_camel('number_22'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122733,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nappAcademyIsCool\nnumber22\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmprmc3c6a1.js:20:12)\n    at Object.<anonymous> (/tmp/tmprmc3c6a1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = \"\";\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"coding_challenge\"));\nconsole.log(snake_to_camel(\"i_love_coding\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122733,
      "stdout": "helloWorld\njavascriptIsAwesome\ncodingChallenge\niLoveCoding\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpgxl3lnxg.js:22:12)\n    at Object.<anonymous> (/tmp/tmpgxl3lnxg.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = \"\";\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === \"_\") {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_my_name\"));\nconsole.log(snake_to_camel(\"i_am_a_little_teapot\"));\nconsole.log(snake_to_camel(\"this_is_a_string\"));\nconsole.log(snake_to_camel(\"hello_world\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122733,
      "stdout": "helloWorld\nsnakesGoHiss\nsayMyName\niAmALittleTeapot\nthisIsAString\nhelloWorld\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp3t3dqlul.js:24:12)\n    at Object.<anonymous> (/tmp/tmp3t3dqlul.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = '';\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_forget_underscores'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122732,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontForgetUnderscores\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpycc_3_5e.js:24:12)\n    at Object.<anonymous> (/tmp/tmpycc_3_5e.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let result: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      result += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      result += word[i];\n    }\n  }\n  return result;\n}\n\nconsole.log(snake_to_camel(\"snake_to_camel\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122733,
      "stdout": "snakeToCamel\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmptjp7hz_p.js:19:12)\n    at Object.<anonymous> (/tmp/tmptjp7hz_p.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello\"));\nconsole.log(snake_to_camel(\"bootcamp_prep\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHello\nbootcampPrep\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmphu_zfkrx.js:22:12)\n    at Object.<anonymous> (/tmp/tmphu_zfkrx.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    return word.replace(/(_\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\njavascriptIsAwesome\njavaScriptIsAwesome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp6331o1rb.js:11:12)\n    at Object.<anonymous> (/tmp/tmp6331o1rb.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord = word.split(\"_\");\n    for (let i = 1; i < newWord.length; i++) {\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello_to_my_little_friend\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\nconsole.log(snake_to_camel(\"\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122733,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\n\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp_7ln5iij.js:18:12)\n    at Object.<anonymous> (/tmp/tmp_7ln5iij.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\nconsole.log(snake_to_camel('snake_case'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122733,
      "stdout": "snakeCase\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpacab9q5g.js:19:12)\n    at Object.<anonymous> (/tmp/tmpacab9q5g.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = \"\";\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello_to_my_little_friend\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\nconsole.log(snake_to_camel(\"apples_and_oranges\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122733,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\napplesAndOranges\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp3v_m9q83.js:24:12)\n    at Object.<anonymous> (/tmp/tmp3v_m9q83.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('app_academy_is_cool'));\nconsole.log(snake_to_camel('number_22'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122733,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nappAcademyIsCool\nnumber22\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp2_tj1zk1.js:25:12)\n    at Object.<anonymous> (/tmp/tmp2_tj1zk1.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(_\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"snake_case\"));\nconsole.log(snake_to_camel(\"snake_case_string\"));\nconsole.log(snake_to_camel(\"snake_case_string_to_camel_case\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122733,
      "stdout": "snakeCase\nsnakeCaseString\nsnakeCaseStringToCamelCase\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpvxdfrebg.js:11:12)\n    at Object.<anonymous> (/tmp/tmpvxdfrebg.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let result: string = '';\n  let wordArray: string[] = word.split('_');\n  for (let i: number = 0; i < wordArray.length; i++) {\n    if (i === 0) {\n      result += wordArray[i];\n    } else {\n      result += wordArray[i].charAt(0).toUpperCase() + wordArray[i].slice(1);\n    }\n  }\n  return result;\n}\n\nconsole.log(snake_to_camel('snake_case'));\nconsole.log(snake_to_camel('snake_case_string'));\nconsole.log(snake_to_camel('snake_case_string_conversion'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122733,
      "stdout": "snakeCase\nsnakeCaseString\nsnakeCaseStringConversion\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpqcloz_ll.js:21:12)\n    at Object.<anonymous> (/tmp/tmpqcloz_ll.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello\"));\nconsole.log(snake_to_camel(\"bootcamp_prep\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHello\nbootcampPrep\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmphu_zfkrx.js:22:12)\n    at Object.<anonymous> (/tmp/tmphu_zfkrx.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(-\\w)/g, (matches) => matches[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello-world\"));\nconsole.log(snake_to_camel(\"snake-case-string\"));\nconsole.log(snake_to_camel(\"snake_case_string\"));\nconsole.log(snake_to_camel(\"snake_case-string\"));\nconsole.log(snake_to_camel(\"snake-case_string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakeCaseString\nsnake_case_string\nsnake_caseString\nsnakeCase_string\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp_z3nxbxj.js:13:12)\n    at Object.<anonymous> (/tmp/tmp_z3nxbxj.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(-\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello-edabit\"));\nconsole.log(snake_to_camel(\"busy-day\"));\nconsole.log(snake_to_camel(\"black-and-white\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122733,
      "stdout": "helloEdabit\nbusyDay\nblackAndWhite\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmptdvnnhm1.js:11:12)\n    at Object.<anonymous> (/tmp/tmptdvnnhm1.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = \"\";\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === \"_\") {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello_to_my_little_friend\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\nconsole.log(snake_to_camel(\"app_academy_is_cool\"));\nconsole.log(snake_to_camel(\"number_22\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122733,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nappAcademyIsCool\nnumber22\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpy3k52ngd.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy3k52ngd.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = '';\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('apples_and_oranges'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122733,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\napplesAndOranges\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp2mhfroku.js:24:12)\n    at Object.<anonymous> (/tmp/tmp2mhfroku.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello_to_my_little_friend\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\nconsole.log(snake_to_camel(\"app_academy_is_cool\"));\nconsole.log(snake_to_camel(\"number_22\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nappAcademyIsCool\nnumber22\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmph2xxhn_q.js:25:12)\n    at Object.<anonymous> (/tmp/tmph2xxhn_q.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = word.split(\"_\");\n  for (let i = 1; i < newWord.length; i++) {\n    newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n  }\n  return newWord.join(\"\");\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello_to_my_little_friend\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\nconsole.log(snake_to_camel(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\n\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpkev4xfwc.js:18:12)\n    at Object.<anonymous> (/tmp/tmpkev4xfwc.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let result: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            result += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            result += word[i];\n        }\n    }\n    return result;\n}\nconsole.log(snake_to_camel('snake_case_word'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122733,
      "stdout": "snakeCaseWord\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpjpfwhqkf.js:19:12)\n    at Object.<anonymous> (/tmp/tmpjpfwhqkf.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = '';\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_forget_underscores'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122733,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontForgetUnderscores\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp5yk5ueli.js:24:12)\n    at Object.<anonymous> (/tmp/tmp5yk5ueli.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let result: string = '';\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      result += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      result += word[i];\n    }\n  }\n  return result;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122733,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpd9sqfe6l.js:23:12)\n    at Object.<anonymous> (/tmp/tmpd9sqfe6l.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let camelCase = '';\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      camelCase += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      camelCase += word[i];\n    }\n  }\n  return camelCase;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_Do_This_at_Home'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122735,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontDoThisAtHome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmppo290pvt.js:24:12)\n    at Object.<anonymous> (/tmp/tmppo290pvt.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord = '';\n    for (let i = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_forget_underscores'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122735,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontForgetUnderscores\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpe9mtafbt.js:24:12)\n    at Object.<anonymous> (/tmp/tmpe9mtafbt.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = '';\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel('snake_case'));\nconsole.log(snake_to_camel('snake_case_string'));\nconsole.log(snake_to_camel('snake_case_string_to_camel_case'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122735,
      "stdout": "snakeCase\nsnakeCaseString\nsnakeCaseStringToCamelCase\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp5githsm6.js:21:12)\n    at Object.<anonymous> (/tmp/tmp5githsm6.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = \"\";\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\nconsole.log(snake_to_camel(\"\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHello\nbootcampPrepIsCool\nBOOtcampPREPISCOol\n\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpy7vj55ta.js:24:12)\n    at Object.<anonymous> (/tmp/tmpy7vj55ta.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = \"\";\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"coding_challenge\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122735,
      "stdout": "helloWorld\njavascriptIsAwesome\ncodingChallenge\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp8bggj4g4.js:21:12)\n    at Object.<anonymous> (/tmp/tmp8bggj4g4.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let words = word.split('_');\n    let camelCase = words[0];\n    for (let i = 1; i < words.length; i++) {\n        camelCase += words[i].charAt(0).toUpperCase() + words[i].slice(1);\n    }\n    return camelCase;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('app_model_controller'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122735,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nappModelController\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpyvb6y_t3.js:19:12)\n    at Object.<anonymous> (/tmp/tmpyvb6y_t3.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"snake_case_word\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122735,
      "stdout": "snakeCaseWord\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpvin1f_64.js:19:12)\n    at Object.<anonymous> (/tmp/tmpvin1f_64.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    return word.replace(/(_\\w)/g, (m) => m[1].toUpperCase());\n}\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_exercises\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122735,
      "stdout": "helloWorld\njavascriptExercises\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp5r94b5yd.js:10:12)\n    at Object.<anonymous> (/tmp/tmp5r94b5yd.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = '';\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_you_wish_your_girlfriend_was_hot_like_me'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122735,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontYouWishYourGirlfriendWasHotLikeMe\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpy2myq14l.js:24:12)\n    at Object.<anonymous> (/tmp/tmpy2myq14l.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(_\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"snake_case_string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122736,
      "stdout": "snakeCaseString\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpq0sb5abd.js:9:12)\n    at Object.<anonymous> (/tmp/tmpq0sb5abd.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(-\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello-world\"));\nconsole.log(snake_to_camel(\"snake-case-string\"));\nconsole.log(snake_to_camel(\"snake_case_string\"));\nconsole.log(snake_to_camel(\"snake_case-string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\nsnakeCaseString\nsnake_case_string\nsnake_caseString\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpq6228n7v.js:12:12)\n    at Object.<anonymous> (/tmp/tmpq6228n7v.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord = '';\n    for (let i = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('apples_and_oranges'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122736,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\napplesAndOranges\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp_tl6fvgq.js:24:12)\n    at Object.<anonymous> (/tmp/tmp_tl6fvgq.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('snake_case_word'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122736,
      "stdout": "snakeCaseWord\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpfijpzjx_.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfijpzjx_.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let result: string = '';\n  let wordArray: string[] = word.split('_');\n  for (let i: number = 0; i < wordArray.length; i++) {\n    if (i !== 0) {\n      wordArray[i] = wordArray[i].charAt(0).toUpperCase() + wordArray[i].slice(1);\n    }\n    result += wordArray[i];\n  }\n  return result;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snake_to_camel'));\nconsole.log(snake_to_camel('snake_case'));\nconsole.log(snake_to_camel('snake_case_function'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122736,
      "stdout": "helloWorld\nsnakeToCamel\nsnakeCase\nsnakeCaseFunction\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpcbm3trv4.js:20:12)\n    at Object.<anonymous> (/tmp/tmpcbm3trv4.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = \"\";\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"snake_case\"));\nconsole.log(snake_to_camel(\"snake_case_word\"));\nconsole.log(snake_to_camel(\"snake_case_word_two\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122736,
      "stdout": "snakeCase\nsnakeCaseWord\nsnakeCaseWordTwo\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpjvmsk_o5.js:21:12)\n    at Object.<anonymous> (/tmp/tmpjvmsk_o5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = '';\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('javascript_exercises'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "helloWorld\njavascriptExercises\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpplj617am.js:20:12)\n    at Object.<anonymous> (/tmp/tmpplj617am.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('hello_world_again'));\nconsole.log(snake_to_camel('hello_world_again_and_again'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122736,
      "stdout": "helloWorld\nhelloWorldAgain\nhelloWorldAgainAndAgain\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmptfvutpnz.js:21:12)\n    at Object.<anonymous> (/tmp/tmptfvutpnz.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = \"\";\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === \"_\") {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_my_name\"));\nconsole.log(snake_to_camel(\"i_am_a_little_teapot\"));\nconsole.log(snake_to_camel(\"this_is_a_string\"));\nconsole.log(snake_to_camel(\"hello_world\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122733,
      "stdout": "helloWorld\nsnakesGoHiss\nsayMyName\niAmALittleTeapot\nthisIsAString\nhelloWorld\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp3t3dqlul.js:24:12)\n    at Object.<anonymous> (/tmp/tmp3t3dqlul.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = '';\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('apples_and_oranges'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\napplesAndOranges\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpiyng6v_a.js:24:12)\n    at Object.<anonymous> (/tmp/tmpiyng6v_a.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = \"\";\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello_to_my_little_friend\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\nconsole.log(snake_to_camel(\"apples_and_oranges\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122736,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\napplesAndOranges\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpbrv2m4hs.js:24:12)\n    at Object.<anonymous> (/tmp/tmpbrv2m4hs.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = \"\";\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === \"_\") {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_my_name\"));\nconsole.log(snake_to_camel(\"i_am_a_little_teapot\"));\nconsole.log(snake_to_camel(\"this_is_a_string\"));\nconsole.log(snake_to_camel(\"hello_world\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122733,
      "stdout": "helloWorld\nsnakesGoHiss\nsayMyName\niAmALittleTeapot\nthisIsAString\nhelloWorld\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp3t3dqlul.js:24:12)\n    at Object.<anonymous> (/tmp/tmp3t3dqlul.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = \"\";\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\nconsole.log(snake_to_camel(\"\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122727,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHello\nbootcampPrepIsCool\nBOOtcampPREPISCOol\n\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpy7vj55ta.js:24:12)\n    at Object.<anonymous> (/tmp/tmpy7vj55ta.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_exercises\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\njavascriptExercises\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpzr96hdvu.js:20:12)\n    at Object.<anonymous> (/tmp/tmpzr96hdvu.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_forget_underscores'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122736,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontForgetUnderscores\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpw1h0299a.js:24:12)\n    at Object.<anonymous> (/tmp/tmpw1h0299a.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(_\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\njavascriptIsAwesome\njavaScriptIsAwesome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpvfxy7_so.js:11:12)\n    at Object.<anonymous> (/tmp/tmpvfxy7_so.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord = '';\n    for (let i = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_Do_This_at_Home'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontDoThisAtHome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpbks_qtae.js:24:12)\n    at Object.<anonymous> (/tmp/tmpbks_qtae.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_Do_This_At_Home'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122736,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontDoThisAtHome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp5hdsyom7.js:24:12)\n    at Object.<anonymous> (/tmp/tmp5hdsyom7.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let camelCase: string = \"\";\n  let wordArray: string[] = word.split(\"_\");\n  for (let i: number = 0; i < wordArray.length; i++) {\n    if (i === 0) {\n      camelCase += wordArray[i];\n    } else {\n      camelCase += wordArray[i].charAt(0).toUpperCase() + wordArray[i].slice(1);\n    }\n  }\n  return camelCase;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello_to_my_little_friend\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122736,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp9ockh566.js:23:12)\n    at Object.<anonymous> (/tmp/tmp9ockh566.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = \"\";\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"coding_challenge\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122736,
      "stdout": "helloWorld\njavascriptIsAwesome\ncodingChallenge\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpqrhqy6we.js:21:12)\n    at Object.<anonymous> (/tmp/tmpqrhqy6we.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = '';\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('app_academy_is_cool'));\nconsole.log(snake_to_camel('number_22_is_my_favorite_number'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122736,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nappAcademyIsCool\nnumber22IsMyFavoriteNumber\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpmlv1vjfs.js:25:12)\n    at Object.<anonymous> (/tmp/tmpmlv1vjfs.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let result = '';\n    for (let i = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            result += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            result += word[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('javascript_is_awesome'));\nconsole.log(snake_to_camel('coding_challenge'));\nconsole.log(snake_to_camel('i_love_coding'));\nconsole.log(snake_to_camel('i_am_a_coder'));\nconsole.log(snake_to_camel('i_am_a_developer'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122736,
      "stdout": "helloWorld\njavascriptIsAwesome\ncodingChallenge\niLoveCoding\niAmACoder\niAmADeveloper\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp53ru30vj.js:24:12)\n    at Object.<anonymous> (/tmp/tmp53ru30vj.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = word.split(\"_\");\n  let camelWord = newWord[0];\n  for (let i = 1; i < newWord.length; i++) {\n    camelWord += newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n  }\n  return camelWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello_to_my_little_friend\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\nconsole.log(snake_to_camel(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122736,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\n\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpbhagn843.js:19:12)\n    at Object.<anonymous> (/tmp/tmpbhagn843.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = \"\";\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === \"_\") {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_my_name\"));\nconsole.log(snake_to_camel(\"i_am_a_little_teapot\"));\nconsole.log(snake_to_camel(\"app_id\"));\nconsole.log(snake_to_camel(\"what_is_up\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122736,
      "stdout": "helloWorld\nsnakesGoHiss\nsayMyName\niAmALittleTeapot\nappId\nwhatIsUp\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpf6vh5bk8.js:24:12)\n    at Object.<anonymous> (/tmp/tmpf6vh5bk8.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = '';\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('apples_and_oranges'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\napplesAndOranges\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpiyng6v_a.js:24:12)\n    at Object.<anonymous> (/tmp/tmpiyng6v_a.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel(\"snake_case_word\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122737,
      "stdout": "snakeCaseWord\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp6e_xmryb.js:19:12)\n    at Object.<anonymous> (/tmp/tmp6e_xmryb.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(-\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello-world\"));\nconsole.log(snake_to_camel(\"snake-case-string\"));\nconsole.log(snake_to_camel(\"snake_case_string\"));\nconsole.log(snake_to_camel(\"snake_case_string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122737,
      "stdout": "helloWorld\nsnakeCaseString\nsnake_case_string\nsnake_case_string\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpqh8a4imo.js:12:12)\n    at Object.<anonymous> (/tmp/tmpqh8a4imo.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    return word.replace(/(_\\w)/g, (m) => m[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_exercises\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122737,
      "stdout": "helloWorld\njavascriptExercises\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpoa1ygd2h.js:10:12)\n    at Object.<anonymous> (/tmp/tmpoa1ygd2h.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_Do_This_At_Home'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontDoThisAtHome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpoh3q5qm3.js:24:12)\n    at Object.<anonymous> (/tmp/tmpoh3q5qm3.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let camelCase: string = \"\";\n  let words: string[] = word.split(\"_\");\n  for (let i: number = 0; i < words.length; i++) {\n    if (i > 0) {\n      camelCase += words[i].charAt(0).toUpperCase() + words[i].slice(1);\n    } else {\n      camelCase += words[i];\n    }\n  }\n  return camelCase;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snake_case\"));\nconsole.log(snake_to_camel(\"snake_case_function\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122737,
      "stdout": "helloWorld\nsnakeCase\nsnakeCaseFunction\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpw1in9n_m.js:21:12)\n    at Object.<anonymous> (/tmp/tmpw1in9n_m.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(_\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\njavascriptIsAwesome\njavaScriptIsAwesome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpvfxy7_so.js:11:12)\n    at Object.<anonymous> (/tmp/tmpvfxy7_so.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(-\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello-world\"));\nconsole.log(snake_to_camel(\"snake-case-string\"));\nconsole.log(snake_to_camel(\"snake_case_string\"));\nconsole.log(snake_to_camel(\"snake_case-string\"));\nconsole.log(snake_to_camel(\"-snake_case-string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122737,
      "stdout": "helloWorld\nsnakeCaseString\nsnake_case_string\nsnake_caseString\nSnake_caseString\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpkc3v0yyg.js:13:12)\n    at Object.<anonymous> (/tmp/tmpkc3v0yyg.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let result: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            result += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            result += word[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('app_academy_is_cool'));\nconsole.log(snake_to_camel('number_22_is_my_favorite_number'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122732,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nappAcademyIsCool\nnumber22IsMyFavoriteNumber\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp288c3ob9.js:25:12)\n    at Object.<anonymous> (/tmp/tmp288c3ob9.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(_\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome\"));\nconsole.log(snake_to_camel(\"java_script_is_awesome_and_cool\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122738,
      "stdout": "helloWorld\njavascriptIsAwesome\njavaScriptIsAwesome\njavaScriptIsAwesomeAndCool\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp_bfwais6.js:12:12)\n    at Object.<anonymous> (/tmp/tmp_bfwais6.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let result: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      result += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      result += word[i];\n    }\n  }\n  return result;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello\"));\nconsole.log(snake_to_camel(\"bootcamp_prep\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122738,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHello\nbootcampPrep\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp3vk6cvnx.js:22:12)\n    at Object.<anonymous> (/tmp/tmp3vk6cvnx.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(_\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_exercises\"));\nconsole.log(snake_to_camel(\"java_script_exercises\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122732,
      "stdout": "helloWorld\njavascriptExercises\njavaScriptExercises\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmparb81r_f.js:11:12)\n    at Object.<anonymous> (/tmp/tmparb81r_f.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = \"\";\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"javascript_is_awesome\"));\nconsole.log(snake_to_camel(\"coding_is_fun\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122738,
      "stdout": "helloWorld\njavascriptIsAwesome\ncodingIsFun\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpmrm24ujm.js:21:12)\n    at Object.<anonymous> (/tmp/tmpmrm24ujm.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = '';\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('app_academy_is_cool'));\nconsole.log(snake_to_camel('number_22_is_my_favorite_number'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122738,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nappAcademyIsCool\nnumber22IsMyFavoriteNumber\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp74ep0szm.js:25:12)\n    at Object.<anonymous> (/tmp/tmp74ep0szm.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord = '';\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_Do_This_AT_Home'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122738,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontDoThisATHome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp0pr1y62g.js:24:12)\n    at Object.<anonymous> (/tmp/tmp0pr1y62g.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = \"\";\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello\"));\nconsole.log(snake_to_camel(\"bootcamp_prep\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHello\nbootcampPrep\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmphu_zfkrx.js:22:12)\n    at Object.<anonymous> (/tmp/tmphu_zfkrx.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = \"\";\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === \"_\") {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snake_case\"));\nconsole.log(snake_to_camel(\"snake_case_function\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122738,
      "stdout": "helloWorld\nsnakeCase\nsnakeCaseFunction\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpojsfgfvk.js:21:12)\n    at Object.<anonymous> (/tmp/tmpojsfgfvk.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    return word.replace(/(-\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello-world\"));\nconsole.log(snake_to_camel(\"hello-world-beautiful\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122730,
      "stdout": "helloWorld\nhelloWorldBeautiful\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpab044h7i.js:10:12)\n    at Object.<anonymous> (/tmp/tmpab044h7i.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(-\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello-world\"));\nconsole.log(snake_to_camel(\"snake-case-string\"));\nconsole.log(snake_to_camel(\"snake_case_string\"));\nconsole.log(snake_to_camel(\"snake_case-string\"));\nconsole.log(snake_to_camel(\"snake-case_string\"));\nconsole.log(snake_to_camel(\"snake-case-string\"));\nconsole.log(snake_to_camel(\"snake_case_string\"));\nconsole.log(snake_to_camel(\"snake_case-string\"));\nconsole.log(snake_to_camel(\"snake-case_string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122738,
      "stdout": "helloWorld\nsnakeCaseString\nsnake_case_string\nsnake_caseString\nsnakeCase_string\nsnakeCaseString\nsnake_case_string\nsnake_caseString\nsnakeCase_string\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp3xyci5gb.js:17:12)\n    at Object.<anonymous> (/tmp/tmp3xyci5gb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord = \"\";\n    for (let i = 0; i < word.length; i++) {\n        if (word[i] === \"_\") {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello\"));\nconsole.log(snake_to_camel(\"bootcamp_prep\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122738,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHello\nbootcampPrep\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp8lu4tovc.js:22:12)\n    at Object.<anonymous> (/tmp/tmp8lu4tovc.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  return word.replace(/(-\\w)/g, (match) => match[1].toUpperCase());\n}\n\nconsole.log(snake_to_camel(\"hello-world\"));\nconsole.log(snake_to_camel(\"snake-case-string\"));\nconsole.log(snake_to_camel(\"snake_case_string\"));\nconsole.log(snake_to_camel(\"snake_case-string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509936,
      "stdout": "helloWorld\nsnakeCaseString\nsnake_case_string\nsnake_caseString\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpq6228n7v.js:12:12)\n    at Object.<anonymous> (/tmp/tmpq6228n7v.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let newWord: string = '';\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      newWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      newWord += word[i];\n    }\n  }\n  return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_Do_This_at_Home'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122733,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontDoThisAtHome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp5604rc46.js:24:12)\n    at Object.<anonymous> (/tmp/tmp5604rc46.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let result: string = '';\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      result += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      result += word[i];\n    }\n  }\n  return result;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_forget_underscores'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122738,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontForgetUnderscores\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp1esnqkad.js:24:12)\n    at Object.<anonymous> (/tmp/tmp1esnqkad.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let result: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            result += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            result += word[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_forget_underscores'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122738,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontForgetUnderscores\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpifj8s_hf.js:24:12)\n    at Object.<anonymous> (/tmp/tmpifj8s_hf.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n    let newWord: string = '';\n    for (let i: number = 0; i < word.length; i++) {\n        if (word[i] === '_') {\n            newWord += word[i + 1].toUpperCase();\n            i++;\n        } else {\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('Dont_Do_This_At_Home'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122724,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nDontDoThisAtHome\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpoh3q5qm3.js:24:12)\n    at Object.<anonymous> (/tmp/tmpoh3q5qm3.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let result = \"\";\n  for (let i = 0; i < word.length; i++) {\n    if (word[i] === \"_\") {\n      result += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      result += word[i];\n    }\n  }\n  return result;\n}\n\nconsole.log(snake_to_camel(\"hello_world\"));\nconsole.log(snake_to_camel(\"snakes_go_hiss\"));\nconsole.log(snake_to_camel(\"say_hello_to_my_little_friend\"));\nconsole.log(snake_to_camel(\"bootcamp_prep_is_cool\"));\nconsole.log(snake_to_camel(\"BOOtcamp_PREP_iS_cOol\"));\nconsole.log(snake_to_camel(\"app_academy_is_cool\"));\nconsole.log(snake_to_camel(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122738,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nappAcademyIsCool\n\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpe6nng20v.js:25:12)\n    at Object.<anonymous> (/tmp/tmpe6nng20v.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word: string): string {\n  let camelCaseWord: string = '';\n  for (let i: number = 0; i < word.length; i++) {\n    if (word[i] === '_') {\n      camelCaseWord += word[i + 1].toUpperCase();\n      i++;\n    } else {\n      camelCaseWord += word[i];\n    }\n  }\n  return camelCaseWord;\n}\n\nconsole.log(snake_to_camel('hello_world'));\nconsole.log(snake_to_camel('snakes_go_hiss'));\nconsole.log(snake_to_camel('say_hello_to_my_little_friend'));\nconsole.log(snake_to_camel('bootcamp_prep_is_cool'));\nconsole.log(snake_to_camel('BOOtcamp_PREP_iS_cOol'));\nconsole.log(snake_to_camel('app_academy_is_awesome'));\nconsole.log(snake_to_camel('code_warrior_is_awesome'));\nconsole.log(snake_to_camel('love_python'));\nconsole.log(snake_to_camel('love_coding'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122738,
      "stdout": "helloWorld\nsnakesGoHiss\nsayHelloToMyLittleFriend\nbootcampPrepIsCool\nBOOtcampPREPISCOol\nappAcademyIsAwesome\ncodeWarriorIsAwesome\nlovePython\nloveCoding\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp904xkmo9.js:27:12)\n    at Object.<anonymous> (/tmp/tmp904xkmo9.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
{
  "name": "mbpp_130_max_occurrences",
  "language": "ts",
  "prompt": "//Write a function to find the item with maximum frequency in a given array.\nfunction max_occurrences(nums: number[]): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_130_max_occurrences.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_occurrences;\n  assert.deepEqual(candidate([2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]),2);\n  assert.deepEqual(candidate([2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]),8);\n  assert.deepEqual(candidate([10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]),20);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let max = 0;\n    let max_item = 0;\n    let count = 0;\n    let item = 0;\n    let i = 0;\n    let j = 0;\n    for (i = 0; i < nums.length; i++) {\n        count = 0;\n        item = nums[i];\n        for (j = 0; j < nums.length; j++) {\n            if (item == nums[j]) {\n                count++;\n            }\n        }\n        if (count > max) {\n            max = count;\n            max_item = item;\n        }\n    }\n    return max_item;\n}\n",
    "    let max = 0;\n    let max_num = 0;\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        for (let j = 0; j < nums.length; j++) {\n            if (nums[i] == nums[j]) {\n                count++;\n            }\n        }\n        if (count > max) {\n            max = count;\n            max_num = nums[i];\n        }\n        count = 0;\n    }\n    return max_num;\n}\n",
    "    let max = 0;\n    let max_item = 0;\n    let count = 0;\n    let item = 0;\n    for (let i = 0; i < nums.length; i++) {\n        item = nums[i];\n        count = 0;\n        for (let j = 0; j < nums.length; j++) {\n            if (item == nums[j]) {\n                count++;\n            }\n        }\n        if (count > max) {\n            max = count;\n            max_item = item;\n        }\n    }\n    return max_item;\n}\n",
    "    let max = 0;\n    let max_num = 0;\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        for (let j = 0; j < nums.length; j++) {\n            if (nums[i] === nums[j]) {\n                count++;\n            }\n        }\n        if (count > max) {\n            max = count;\n            max_num = nums[i];\n        }\n        count = 0;\n    }\n    return max_num;\n}\nconsole.log(max_occurrences([1, 2, 3, 4, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6",
    "    let max = 0;\n    let max_item = 0;\n    let count = 0;\n    let item = 0;\n    for (let i = 0; i < nums.length; i++) {\n        item = nums[i];\n        count = 0;\n        for (let j = 0; j < nums.length; j++) {\n            if (item == nums[j]) {\n                count++;\n            }\n        }\n        if (count > max) {\n            max = count;\n            max_item = item;\n        }\n    }\n    return max_item;\n}\n",
    "    let max = 0;\n    let max_item = 0;\n    let counts = {};\n    for (let i = 0; i < nums.length; i++) {\n        let num = nums[i];\n        if (counts[num] === undefined) {\n            counts[num] = 1;\n        } else {\n            counts[num] += 1;\n        }\n        if (counts[num] > max) {\n            max = counts[num];\n            max_item = num;\n        }\n    }\n    return max_item;\n}\n",
    "    let max = 0;\n    let max_num = 0;\n    let count = 0;\n    let num = 0;\n    for (let i = 0; i < nums.length; i++) {\n        num = nums[i];\n        count = 0;\n        for (let j = 0; j < nums.length; j++) {\n            if (num === nums[j]) {\n                count++;\n            }\n        }\n        if (count > max) {\n            max = count;\n            max_num = num;\n        }\n    }\n    return max_num;\n}\n",
    "    let max = 0;\n    let max_item = nums[0];\n    let counts: { [key: number]: number } = {};\n    for (let i = 0; i < nums.length; i++) {\n        if (counts[nums[i]] === undefined) {\n            counts[nums[i]] = 1;\n        } else {\n            counts[nums[i]]++;\n        }\n        if (counts[nums[i]] > max) {\n            max = counts[nums[i]];\n            max_item = nums[i];\n        }\n    }\n    return max_item;\n}\n",
    "    let max_count = 0;\n    let max_item = 0;\n    let count = 0;\n    let item = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] === item) {\n            count++;\n        } else {\n            item = nums[i];\n            count = 1;\n        }\n        if (count > max_count) {\n            max_count = count;\n            max_item = item;\n        }\n    }\n    return max_item;\n}\n",
    "    let max = 0;\n    let max_item = nums[0];\n    let counts = {};\n    for (let i = 0; i < nums.length; i++) {\n        let num = nums[i];\n        if (counts[num] === undefined) {\n            counts[num] = 1;\n        } else {\n            counts[num] += 1;\n        }\n        if (counts[num] > max) {\n            max = counts[num];\n            max_item = num;\n        }\n    }\n    return max_item;\n}\n",
    "    let max = 0;\n    let max_num = 0;\n    let count = 0;\n    let num_count = {};\n    for (let i = 0; i < nums.length; i++) {\n        if (num_count[nums[i]]) {\n            num_count[nums[i]] += 1;\n        } else {\n            num_count[nums[i]] = 1;\n        }\n    }\n    for (let key in num_count) {\n        if (num_count[key] > max) {\n            max = num_count[key];\n            max_num = key;\n        }\n    }\n    return max_num;\n}\n",
    "    let max = 0;\n    let max_item = 0;\n    let count = 0;\n    let item = 0;\n    for (let i = 0; i < nums.length; i++) {\n        item = nums[i];\n        count = 0;\n        for (let j = 0; j < nums.length; j++) {\n            if (item === nums[j]) {\n                count++;\n            }\n        }\n        if (count > max) {\n            max = count;\n            max_item = item;\n        }\n    }\n    return max_item;\n}\n",
    "  let max = 0;\n  let max_num = 0;\n  let num_count = {};\n  for (let i = 0; i < nums.length; i++) {\n    if (num_count[nums[i]]) {\n      num_count[nums[i]]++;\n    } else {\n      num_count[nums[i]] = 1;\n    }\n    if (num_count[nums[i]] > max) {\n      max = num_count[nums[i]];\n      max_num = nums[i];\n    }\n  }\n  return max_num;\n}\n",
    "    let max = 0;\n    let max_num = 0;\n    let num_count = {};\n    for (let num of nums) {\n        if (num_count[num] === undefined) {\n            num_count[num] = 1;\n        } else {\n            num_count[num] += 1;\n        }\n        if (num_count[num] > max) {\n            max = num_count[num];\n            max_num = num;\n        }\n    }\n    return max_num;\n}\n",
    "    let max = 0;\n    let max_num = 0;\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        for (let j = 0; j < nums.length; j++) {\n            if (nums[i] == nums[j]) {\n                count++;\n            }\n        }\n        if (count > max) {\n            max = count;\n            max_num = nums[i];\n        }\n        count = 0;\n    }\n    return max_num;\n}\nconsole.log(max_occurrences([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84",
    "    let max = 0;\n    let max_item = 0;\n    let count = 0;\n    let item = 0;\n    for (let i = 0; i < nums.length; i++) {\n        item = nums[i];\n        count = 0;\n        for (let j = 0; j < nums.length; j++) {\n            if (item == nums[j]) {\n                count++;\n            }\n        }\n        if (count > max) {\n            max = count;\n            max_item = item;\n        }\n    }\n    return max_item;\n}\n",
    "  let max = 0;\n  let max_num = 0;\n  let counts = {};\n  for (let i = 0; i < nums.length; i++) {\n    let num = nums[i];\n    counts[num] = counts[num] ? counts[num] + 1 : 1;\n    if (counts[num] > max) {\n      max = counts[num];\n      max_num = num;\n    }\n  }\n  return max_num;\n}\n",
    "    let max = 0;\n    let max_num = 0;\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        count = 0;\n        for (let j = 0; j < nums.length; j++) {\n            if (nums[i] == nums[j]) {\n                count++;\n            }\n        }\n        if (count > max) {\n            max = count;\n            max_num = nums[i];\n        }\n    }\n    return max_num;\n}\n",
    "    let max = 0;\n    let max_num = 0;\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        for (let j = 0; j < nums.length; j++) {\n            if (nums[i] == nums[j]) {\n                count++;\n            }\n        }\n        if (count > max) {\n            max = count;\n            max_num = nums[i];\n        }\n        count = 0;\n    }\n    return max_num;\n}\n",
    "    let max_count = 0;\n    let max_item = 0;\n    let counts = {};\n    for (let i = 0; i < nums.length; i++) {\n        let item = nums[i];\n        let count = counts[item] || 0;\n        counts[item] = count + 1;\n        if (counts[item] > max_count) {\n            max_count = counts[item];\n            max_item = item;\n        }\n    }\n    return max_item;\n}\n"
  ]
}
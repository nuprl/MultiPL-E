{
  "name": "mbpp_249_intersection_array",
  "language": "ts",
  "prompt": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_249_intersection_array.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3], [2, 3, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "[ 2, 3 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_nums3: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_nums3.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums3;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_nums3: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_nums3.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums3;\n}\nconsole.log(intersection_array([1, 2, 3, 4, 5], [2, 3, 4, 5, 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "[ 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] === array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_nums3: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_nums3.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums3;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_nums: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_nums.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_nums3: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_nums3.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums3;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    return array_nums1.filter(x => array_nums2.includes(x));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    var result: number[] = [];\n    for (var i = 0; i < array_nums1.length; i++) {\n        for (var j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums2[j]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_nums3: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_nums3.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums3;\n}\nconsole.log(\"Intersection of two arrays: \" + intersection_array([1, 2, 3, 4, 5], [2, 4, 6, 8, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "Intersection of two arrays: 2,4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    return array_nums1.filter(function (n) {\n        return array_nums2.indexOf(n) !== -1;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] === array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] === array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] === array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [2, 4, 6, 8, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "[ 2, 4 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_nums3: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_nums3.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums3;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5, 6], [2, 4, 6, 8, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "[ 2, 4, 6 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_result.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nlet array_nums1 = [1, 2, 3, 4, 5];\nlet array_nums2 = [2, 4, 6, 8, 10];\nconsole.log(intersection_array(array_nums1, array_nums2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "[ 2, 4 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_nums_intersection: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] === array_nums2[j]) {\n                array_nums_intersection.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums_intersection;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n  let result: number[] = [];\n  for (let i = 0; i < array_nums1.length; i++) {\n    for (let j = 0; j < array_nums2.length; j++) {\n      if (array_nums1[i] == array_nums2[j]) {\n        result.push(array_nums1[i]);\n      }\n    }\n  }\n  return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [2, 4, 6, 8, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "[ 2, 4 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4], [2, 4, 6, 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "[ 2, 4 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_nums3: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_nums3.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums3;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(intersection_array([1, 2, 3, 4, 5], [5, 6, 7, 8, 9]));\nconsole.log(intersection_array([1, 2, 3, 4, 5], [6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 5 ]\n[]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [2, 4, 6, 8, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "[ 2, 4 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let intersection_array: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                intersection_array.push(array_nums1[i]);\n            }\n        }\n    }\n    return intersection_array;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(intersection_array([1, 2, 3, 4, 5], [6, 7, 8, 9]));\nconsole.log(intersection_array([1, 2, 3, 4, 5], [9, 8, 7, 6, 5, 4, 3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3], [2, 3, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "[ 2, 3 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_intersection: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_intersection.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_intersection;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]));\nconsole.log(intersection_array([1, 2, 3, 4, 5], [6, 7, 8, 9, 10]));\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(intersection_array([1, 2, 3, 4, 5], [6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[]\n[ 1, 2, 3, 4, 5 ]\n[]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_nums3: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_nums3.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums3;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_intersection: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_intersection.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_intersection;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(intersection_array([1, 2, 3, 4, 5], [6, 7, 8, 9]));\nconsole.log(intersection_array([1, 2, 3, 4, 5], [9, 8, 7, 6, 5, 4, 3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n[ 1, 2, 3, 4, 5 ]\n[]\n[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_nums3: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_nums3.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums3;\n}\n\nlet array_nums1: number[] = [1, 2, 3, 4, 5];\nlet array_nums2: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(intersection_array(array_nums1, array_nums2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return array_result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_intersection: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] === array_nums2[j]) {\n                array_intersection.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_intersection;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4], [3, 4, 5, 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "[ 3, 4 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_nums_intersection: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] === array_nums2[j]) {\n                array_nums_intersection.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums_intersection;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_intersection: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_intersection.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_intersection;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\nconsole.log(intersection_array([1, 2, 3, 4, 5, 6, 7], [2, 4, 6, 8, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123247,
      "stdout": "[ 2, 4, 6 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_intersection: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_intersection.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_intersection;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_intersection: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_intersection.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_intersection;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] === array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    var result: number[] = [];\n    for (var i = 0; i < array_nums1.length; i++) {\n        for (var j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_intersection: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] === array_nums2[j]) {\n                array_intersection.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_intersection;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_nums3: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_nums3.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums3;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_nums3: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_nums3.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums3;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_nums3: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_nums3.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums3;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] === array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let intersection_array: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                intersection_array.push(array_nums1[i]);\n            }\n        }\n    }\n    return intersection_array;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_intersection: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_intersection.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_intersection;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let intersection_array: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                intersection_array.push(array_nums1[i]);\n            }\n        }\n    }\n    return intersection_array;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    return array_nums1.filter(function (n) {\n        return array_nums2.indexOf(n) !== -1;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_nums3: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_nums3.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums3;\n}\nconsole.log(intersection_array([1, 2, 3, 4, 5], [2, 3, 4, 5, 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "[ 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_result.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let intersection_array: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                intersection_array.push(array_nums1[i]);\n            }\n        }\n    }\n    return intersection_array;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] === array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_intersection: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_intersection.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_intersection;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5, 6], [2, 4, 6, 8, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123247,
      "stdout": "[ 2, 4, 6 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_intersection: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] === array_nums2[j]) {\n                array_intersection.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_intersection;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [2, 3, 4, 5, 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123247,
      "stdout": "[ 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\nlet array1: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nlet array2: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(intersection_array(array1, array2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123247,
      "stdout": "[\n  1, 2, 3, 4,  5,\n  6, 7, 8, 9, 10\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] === array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_nums3: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_nums3.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums3;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] === array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [2, 3, 4, 5, 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123247,
      "stdout": "[ 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] === array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [2, 4, 6, 8, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "[ 2, 4 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_nums3: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_nums3.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums3;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\nconsole.log(intersection_array([1, 2, 3, 4], [3, 4, 5, 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123247,
      "stdout": "[ 3, 4 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] === array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4], [3, 4, 5, 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "[ 3, 4 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] === array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]));\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123247,
      "stdout": "../../../../tmp/tmpl8azoj7p.ts(24,1): error TS1005: ',' expected.\n../../../../tmp/tmpl8azoj7p.ts(24,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 6, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123247,
      "stdout": "[ 1, 2, 3 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] === array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_nums3: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_nums3.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums3;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_intersection: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] === array_nums2[j]) {\n                array_intersection.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_intersection;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_nums3: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_nums3.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums3;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_intersection: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_intersection.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_intersection;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_intersection: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_intersection.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_intersection;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] === array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_nums3: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_nums3.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums3;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] === array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123247,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_nums3: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_nums3.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums3;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] === array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123248,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_nums3: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_nums3.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums3;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_nums3: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_nums3.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums3;\n}\n\nlet array_nums1: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nlet array_nums2: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(intersection_array(array_nums1, array_nums2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123247,
      "stdout": "[\n  1, 2, 3, 4,  5,\n  6, 7, 8, 9, 10\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    array_nums1.forEach(element => {\n        if (array_nums2.indexOf(element) > -1) {\n            result.push(element);\n        }\n    });\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123247,
      "stdout": "[ 1, 2, 3, 4 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_result.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    var result: number[] = [];\n    for (var i = 0; i < array_nums1.length; i++) {\n        for (var j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_intersection: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_intersection.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_intersection;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\nconsole.log(intersection_array([1, 2, 3, 4, 5], [2, 3, 4, 5, 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123248,
      "stdout": "[ 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_result.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n  let array_nums3: number[] = [];\n  for (let i = 0; i < array_nums1.length; i++) {\n    for (let j = 0; j < array_nums2.length; j++) {\n      if (array_nums1[i] == array_nums2[j]) {\n        array_nums3.push(array_nums1[i]);\n      }\n    }\n  }\n  return array_nums3;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4], [2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123248,
      "stdout": "[ 2, 3, 4 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_intersection: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_intersection.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_intersection;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nlet array_nums1 = [1, 2, 3, 4, 5];\nlet array_nums2 = [2, 4, 6, 8, 10];\nconsole.log(intersection_array(array_nums1, array_nums2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123245,
      "stdout": "[ 2, 4 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_nums: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_nums.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums;\n}\n\nlet array_nums1: number[] = [1, 2, 3, 4, 5];\nlet array_nums2: number[] = [2, 3, 4, 5, 6];\nconsole.log(intersection_array(array_nums1, array_nums2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123247,
      "stdout": "[ 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let array_nums3: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                array_nums3.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums3;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] === array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123248,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(intersection_array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "[ 1, 2, 3, 4, 5 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1: number[], array_nums2: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < array_nums1.length; i++) {\n        for (let j = 0; j < array_nums2.length; j++) {\n            if (array_nums1[i] == array_nums2[j]) {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
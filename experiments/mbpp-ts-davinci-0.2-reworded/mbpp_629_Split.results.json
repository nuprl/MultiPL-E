{
  "name": "mbpp_629_Split",
  "language": "ts",
  "prompt": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_629_Split.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nconsole.log(Split([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(\"Even numbers are: \" + Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "Even numbers are: 2,4,6,8,10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar even: number[] = Split(list);\nconsole.log(\"Even numbers are: \" + even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "Even numbers are: 2,4,6,8,10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nlet even: number[] = Split(list);\nconsole.log(even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nconsole.log(Split([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar even: number[] = Split(list);\nconsole.log(\"Even numbers are: \" + even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "Even numbers are: 2,4,6,8,10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evenList: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evenList.push(list[i]);\n        }\n    }\n    return evenList;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar evenList: number[] = Split(list);\nconsole.log(evenList);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n  let even: number[] = [];\n  for (let i = 0; i < list.length; i++) {\n    if (list[i] % 2 == 0) {\n      even.push(list[i]);\n    }\n  }\n  return even;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let evenNumbers: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evenNumbers.push(list[i]);\n        }\n    }\n    return evenNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar even: number[] = Split(list);\nconsole.log(even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nconsole.log(Split([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar evens: number[] = Split(list);\nconsole.log(\"Even numbers are: \" + evens);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123651,
      "stdout": "Even numbers are: 2,4,6,8,10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar even: number[] = Split(list);\nconsole.log(\"Even numbers are: \" + even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "Even numbers are: 2,4,6,8,10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar even = Split([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\nconsole.log(even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evenList: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evenList.push(list[i]);\n        }\n    }\n    return evenList;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    return list.filter(function (num) {\n        return num % 2 == 0;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar even: number[] = Split(list);\nconsole.log(even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123651,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nconsole.log(Split([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar even: number[] = Split(list);\nconsole.log(even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123651,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let evens: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123651,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nconsole.log(Split([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nconsole.log(Split([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar even: number[] = Split(list);\nconsole.log(\"Even numbers are: \" + even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "Even numbers are: 2,4,6,8,10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let evenList: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evenList.push(list[i]);\n        }\n    }\n    return evenList;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let evenList: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evenList.push(list[i]);\n        }\n    }\n    return evenList;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evenNumbers: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evenNumbers.push(list[i]);\n        }\n    }\n    return evenNumbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123651,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123651,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evenList: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evenList.push(list[i]);\n        }\n    }\n    return evenList;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(\"Even numbers are: \" + Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "Even numbers are: 2,4,6,8,10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar evens: number[] = Split(list);\nconsole.log(evens);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123651,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar even: number[] = Split(list);\nconsole.log(even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123651,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar even: number[] = Split(list);\nconsole.log(even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123651,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nlet even: number[] = Split(list);\nconsole.log(even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nconsole.log(Split([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let evens: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123651,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar even: number[] = Split([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\nconsole.log(\"Even numbers are: \" + even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123651,
      "stdout": "Even numbers are: 2,4,6,8,10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar evens: number[] = Split(list);\nconsole.log(\"Even numbers: \" + evens);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123651,
      "stdout": "Even numbers: 2,4,6,8,10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123651,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n  let even: number[] = [];\n  for (let i = 0; i < list.length; i++) {\n    if (list[i] % 2 == 0) {\n      even.push(list[i]);\n    }\n  }\n  return even;\n}\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(\"Even numbers are: \" + Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "Even numbers are: 2,4,6,8,10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nlet even: number[] = Split(list);\nconsole.log(even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar even = Split([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\nconsole.log(\"Even numbers are : \" + even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123651,
      "stdout": "Even numbers are : 2,4,6,8,10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let evenList: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evenList.push(list[i]);\n        }\n    }\n    return evenList;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123651,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123651,
      "stdout": "[ 2, 4, 6, 8 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nlet even: number[] = Split([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\nconsole.log(even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let evenList: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evenList.push(list[i]);\n        }\n    }\n    return evenList;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nconsole.log(Split([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let evenNumbers: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evenNumbers.push(list[i]);\n        }\n    }\n    return evenNumbers;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123652,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar even: number[] = Split(list);\nconsole.log(\"Even numbers are: \" + even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "Even numbers are: 2,4,6,8,10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nconsole.log(Split([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123652,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar even: number[] = Split(list);\nconsole.log(\"Even numbers are: \" + even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "Even numbers are: 2,4,6,8,10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evenList: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evenList.push(list[i]);\n        }\n    }\n    return evenList;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123652,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar even: number[] = Split(list);\nconsole.log(even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar even: number[] = Split(list);\nconsole.log(\"Even Numbers are: \" + even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123652,
      "stdout": "Even Numbers are: 2,4,6,8,10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let evens: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123651,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nvar evens: number[] = Split(list);\nconsole.log(\"Even numbers are: \" + evens);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123652,
      "stdout": "Even numbers are: 2,4,6,8\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nlet even: number[] = Split(list);\nconsole.log(even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nconsole.log(Split([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\nvar list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar evens = Split(list);\nconsole.log(evens);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123652,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\nconsole.log(Split([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123652,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n  let even: number[] = [];\n  for (let i = 0; i < list.length; i++) {\n    if (list[i] % 2 == 0) {\n      even.push(list[i]);\n    }\n  }\n  return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123652,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123652,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nlet even: number[] = Split(list);\nconsole.log(even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let evens: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123651,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar even: number[] = Split(list);\nconsole.log(even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123651,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nlet even: number[] = Split(list);\nconsole.log(even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let evens: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123651,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let evenNumbers: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evenNumbers.push(list[i]);\n        }\n    }\n    return evenNumbers;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nlet evenNumbers: number[] = Split(list);\nconsole.log(evenNumbers);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123652,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nconsole.log(Split([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar even: number[] = Split(list);\nconsole.log(even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let evenList: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evenList.push(list[i]);\n        }\n    }\n    return evenList;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let evenList: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evenList.push(list[i]);\n        }\n    }\n    return evenList;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let evens: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\nlet evens = Split([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\nconsole.log(evens);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123652,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar even = Split([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\nconsole.log(even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123652,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let evens: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nlet evens: number[] = Split(list);\nconsole.log(evens);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123652,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    let even: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123650,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar even: number[] = Split(list);\nconsole.log(\"Even numbers are: \" + even);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "Even numbers are: 2,4,6,8,10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var evens: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            evens.push(list[i]);\n        }\n    }\n    return evens;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to find even numbers from an array of numbers.\nfunction Split(list: number[]): number[] {\n    var even: number[] = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665517556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
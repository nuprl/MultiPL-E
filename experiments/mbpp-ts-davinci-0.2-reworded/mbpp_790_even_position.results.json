{
  "name": "mbpp_790_even_position",
  "language": "ts",
  "prompt": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_790_even_position.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11, 13, 15]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    let even_index: boolean = true;\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0) {\n            if (nums[i] % 2 != 0) {\n                even_index = false;\n            }\n        }\n    }\n    return even_index;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    let evenIndex = true;\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            evenIndex = false;\n        }\n    }\n    return evenIndex;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 11]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11]));\nconsole.log(even_position([2, 4, 6, 8, 10, 12]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(even_position([1, 2, 3, 4, 5]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    let even_index = true;\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0) {\n            if (nums[i] % 2 != 0) {\n                even_index = false;\n            }\n        }\n    }\n    return even_index;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 11]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    let even_nums = nums.filter(function (num) {\n        return num % 2 == 0;\n    });\n    let even_index = nums.filter(function (num, index) {\n        return index % 2 == 0;\n    });\n    return even_nums.length == even_index.length;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11, 13, 15, 17, 19]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11, 13, 15, 17, 19]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11, 13, 15, 17, 19]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n  let result = true;\n  for (let i = 0; i < nums.length; i++) {\n    if (i % 2 == 0 && nums[i] % 2 != 0) {\n      result = false;\n    }\n  }\n  return result;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11, 13]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11, 13, 15, 17, 19]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    let result: boolean = true;\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0) {\n            if (nums[i] % 2 != 0) {\n                result = false;\n            }\n        }\n    }\n    return result;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11, 13, 15, 17, 19]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7]));\nconsole.log(even_position([2, 4, 6, 8]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n  for (let i = 0; i < nums.length; i++) {\n    if (i % 2 == 0 && nums[i] % 2 != 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7]));\nconsole.log(even_position([2, 4, 6, 8]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11, 13, 15, 17, 19]));\nconsole.log(even_position([2, 4, 6, 8, 10, 12, 14, 16, 18, 20]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\ntrue\nfalse\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    let result: boolean = true;\n    for (let i: number = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            result = false;\n        }\n    }\n    return result;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\nfalse\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    let even_index = true;\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            even_index = false;\n        }\n    }\n    return even_index;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11, 13, 15, 17, 19]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    let result: boolean = true;\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            result = false;\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n  let even_index = true;\n  for (let i = 0; i < nums.length; i++) {\n    if (i % 2 == 0 && nums[i] % 2 != 0) {\n      even_index = false;\n    }\n  }\n  return even_index;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11, 13, 15, 17, 19]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11, 13, 15]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\nfalse\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    let even_index = true;\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            even_index = false;\n        }\n    }\n    return even_index;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11, 13, 15, 17, 19]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    let result: boolean = true;\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            result = false;\n        }\n    }\n    return result;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11, 13, 15, 17, 19]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11, 13, 15, 17, 19]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11, 13, 15, 17, 19]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    let result: boolean = true;\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            result = false;\n        }\n    }\n    return result;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 11]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n  for (let i = 0; i < nums.length; i++) {\n    if (i % 2 === 0 && nums[i] % 2 !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4]));\nconsole.log(even_position([1, 3, 5, 7]));\nconsole.log(even_position([2, 4, 6, 8]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\nfalse\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i += 2) {\n        if (nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(even_position([2, 4, 6, 8, 10]));\nconsole.log(even_position([2, 4, 6, 8, 11]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    let even_index = true;\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            even_index = false;\n            break;\n        }\n    }\n    return even_index;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n  for (let i = 0; i < nums.length; i++) {\n    if (i % 2 === 0 && nums[i] % 2 !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    let even = true;\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            even = false;\n        }\n    }\n    return even;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 === 0 && nums[i] % 2 !== 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    let result: boolean = true;\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            result = false;\n        }\n    }\n    return result;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    let even_index = true;\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            even_index = false;\n        }\n    }\n    return even_index;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 11]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(even_position([1, 2, 3, 4, 5]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    let result: boolean = true;\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            result = false;\n        }\n    }\n    return result;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    let even_index = true;\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            even_index = false;\n        }\n    }\n    return even_index;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 11]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11, 13, 15, 17, 19]));\nconsole.log(even_position([2, 4, 6, 8, 10, 12, 14, 16, 18, 20]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59]));\nconsole.log(even_position([2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "false\nfalse\ntrue\nfalse\nfalse\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11, 13, 15, 17, 19]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122888,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n  for (let i = 0; i < nums.length; i++) {\n    if (i % 2 == 0 && nums[i] % 2 != 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    let even_index = true;\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0) {\n            if (nums[i] % 2 != 0) {\n                even_index = false;\n            }\n        }\n    }\n    return even_index;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "false\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 == 0) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11, 13, 15, 17, 19]));\nconsole.log(even_position([2, 4, 6, 8, 10, 12, 14, 16, 18, 20]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\ntrue\nfalse\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 11]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122890,
      "stdout": "false\nfalse\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1666122885,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a tsthon function to check whether every even index contains even numbers of a given array.\nfunction even_position(nums: number[]): boolean {\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\nconsole.log(even_position([2, 4, 6, 8, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
      "timestamp": 1665510184,
      "stdout": "false\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
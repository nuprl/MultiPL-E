{
  "name": "mbpp_574_surfacearea_cylinder",
  "language": "ts",
  "prompt": "//Write a function to find the surface area of a cylinder.\nfunction surfacearea_cylinder(r: number, h: number): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_574_surfacearea_cylinder.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = surfacearea_cylinder;\n  assert.deepEqual(candidate(10, 5),942.45);\n  assert.deepEqual(candidate(4, 5),226.18800000000002);\n  assert.deepEqual(candidate(4, 10),351.848);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    return 2 * Math.PI * r * (r + h);\n}\n",
    "    return 2 * Math.PI * r * (r + h);\n}\n",
    "    return 2 * Math.PI * r * (r + h);\n}\n",
    "    return 2 * Math.PI * r * (r + h);\n}\n",
    "    return 2 * Math.PI * r * (r + h);\n}\n",
    "    return 2 * Math.PI * r * (r + h);\n}\n",
    "    return 2 * Math.PI * r * (r + h);\n}\n",
    "    return 2 * Math.PI * r * (r + h);\n}\n",
    "    return 2 * Math.PI * r * (r + h);\n}\n",
    "    return 2 * Math.PI * r * (r + h);\n}\n",
    "    return 2 * Math.PI * r * (r + h);\n}\n",
    "    return 2 * Math.PI * r * (r + h);\n}\n",
    "    return 2 * Math.PI * r * (r + h);\n}\n",
    "    return 2 * Math.PI * r * (r + h);\n}\n",
    "    return 2 * Math.PI * r * (r + h);\n}\n",
    "    return 2 * Math.PI * r * (r + h);\n}\n",
    "    let area: number = 2 * Math.PI * r * (r + h);\n    return area;\n}\n",
    "    return 2 * Math.PI * r * (r + h);\n}\n",
    "    return 2 * Math.PI * r * (r + h);\n}\n",
    "    return 2 * Math.PI * r * (r + h);\n}\n"
  ]
}
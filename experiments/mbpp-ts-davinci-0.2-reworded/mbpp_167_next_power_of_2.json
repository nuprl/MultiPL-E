{
  "name": "mbpp_167_next_power_of_2",
  "language": "ts",
  "prompt": "//Write a tsthon function to find the smallest power of 2 greater than or equal to n.\nfunction next_power_of_2(n: number): number {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_167_next_power_of_2.py",
  "prompt_terminology": "reworded",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_power_of_2;\n  assert.deepEqual(candidate(0),1);\n  assert.deepEqual(candidate(5),8);\n  assert.deepEqual(candidate(17),32);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n\nconsole.log(next_power_of_2(16));\nconsole.log(next_power_of_2(18));\nconsole.log(next_power_of_2(32));\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n\nconsole.log(next_power_of_2(5));\nconsole.log(next_power_of_2(16));\nconsole.log(next_power_of_2(32));\nconsole.log(next_power_of_2(64));\nconsole.log(next_power_of_2(128));\nconsole.log(next_power_of_2(256));\nconsole.log(next_power_of_2(512));\nconsole.log(next_power_of_2(1024));\nconsole.log(next_power_of_2(2048));\nconsole.log(next_power_of_2(4096));\nconsole.log(next_power_of_2(8192));\nconsole.log(next_power_of_2(16384));\nconsole.log(next_power_of_2(32768));\nconsole.log(next_power_of_2(65536));\nconsole.log(next_power_of_2(131072));\nconsole.log(next_power_of_2(262144));\nconsole.log(next_power_of_2(524288));\nconsole.log(next_power_of_2(1048576));\nconsole.log(next_power_of_2(2097152));\nconsole.log(next_power_of_2(4194304));\nconsole.log(next_power_of_2(8388608));\nconsole.log(next_power_of_2(16777216));\nconsole.log(next_power_of_2(33554432));\nconsole.log(next_power_of_2(67108864));\nconsole.log(next_power_of_2(134217728));\nconsole.log(next_power_of_2(268435456));\nconsole.log(next_power_of_2(536870912));\nconsole.log(",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n\nconsole.log(next_power_of_2(16));\nconsole.log(next_power_of_2(18));\nconsole.log(next_power_of_2(256));\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n\nconsole.log(next_power_of_2(5));\nconsole.log(next_power_of_2(16));\nconsole.log(next_power_of_2(32));\nconsole.log(next_power_of_2(64));\nconsole.log(next_power_of_2(128));\nconsole.log(next_power_of_2(256));\nconsole.log(next_power_of_2(512));\nconsole.log(next_power_of_2(1024));\nconsole.log(next_power_of_2(2048));\nconsole.log(next_power_of_2(4096));\nconsole.log(next_power_of_2(8192));\nconsole.log(next_power_of_2(16384));\nconsole.log(next_power_of_2(32768));\nconsole.log(next_power_of_2(65536));\nconsole.log(next_power_of_2(131072));\nconsole.log(next_power_of_2(262144));\nconsole.log(next_power_of_2(524288));\nconsole.log(next_power_of_2(1048576));\nconsole.log(next_power_of_2(2097152));\nconsole.log(next_power_of_2(4194304));\nconsole.log(next_power_of_2(8388608));\nconsole.log(next_power_of_2(16777216));\nconsole.log(next_power_of_2(33554432));\nconsole.log(next_power_of_2(67108864));\nconsole.log(next_power_of_2(134217728));\nconsole.log(next_power_of_2(268435456));\nconsole.log(next_power_of_2(536870912));\nconsole.log(",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\nconsole.log(next_power_of_2(16));\nconsole.log(next_power_of_2(18));\nconsole.log(next_power_of_2(32));\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n"
  ]
}